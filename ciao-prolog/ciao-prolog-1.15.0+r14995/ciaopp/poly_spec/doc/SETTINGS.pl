:- module(_,_,[assertions,regtypes,fsyntax]).

% TODO: THIS SETTINGS.pl FILE IS OUTDATED!

:- use_module(library(terms), [atom_concat/2]).
:- use_module(library(bundle_registry(bundle_registry_load))).

:- use_module(library(lpdist(makedir_aux)), [fsR/2]).
:- use_module(library(lpdist(ciao_config_options))).
:- use_module(library(lpdist(ciao_configure))).

:- reexport(ciaosrc(doc(common('LPDOCCOMMON')))).
:- reexport(library(lpdist(ciao_config_options)), [lpdoclib/1]).

%:- redefining(_).

%% Should add extrafiles, etc.

% ----------------------------------------------------------------------------

:- doc(title,"Configuration File for Document Generation").

:- doc(module,"This is a sample configuration file for
   @apl{lpdoc} (as well as the documentation on configuration).  The
   defaults listed are typically suggestions and/or the ones used for
   local installation in the CLIP group machines.  These settings
   should be changed to suit your application.").

:- doc(author,"Manuel Hermenegildo").

% ----------------------------------------------------------------------------

:- doc(filetype,user).

% ----------------------------------------------------------------------------
% PATHS
% ----------------------------------------------------------------------------

:- pred filepath/1 => dirpath

# "Defines the directories where the @tt{.pl} files to be documented
   can be found.  You also need to specify all the paths containing
   files which are used by the files being documented. For example,
   the paths to files included by an @tt{@@include} command or to
   figures.

   Example:
   @includedef{filepath/1}".

filepath := ~fsR(bundle_ins(ciaopp)/poly_spec)
	  | ~fsR(bundle_ins(ciaopp)/poly_spec/doc/figs)
          | ~fsR(bundle_src(ciao)/doc/common).

:- doc(dirpath/1, "An atom describing a path to a
   directory. Should be a full, explicit path (i.e., not containing
   environment variables).").

:- regtype dirpath(P) # "@var{P} is a full path to a directory.".

dirpath(P) :- atm(P).

:- pred systempath/1 => dirpath

# "Defines the @bf{system} directories where @tt{.pl} files used are.
   You also need to specify all the paths containing files which are
   used by the files being documented.  For example, library
   subdirectories containing files used in the documentation should
   also be included, as well as figures, @tt{@@include}s, etc.  You
   can put these in @pred{filepath/1} instead. Putting them here only
   means that the corresponding files will be assumed to be
   @em{system} files (and labelled as such) in the documentation.

   Example:
   @includedef{systempath/1}".

systempath := ~fsR(bundle_src(ciao)/lib)
            | ~fsR(bundle_src(ciao)/library).

:- pred pathsfile(File) # "The argument denotes a file containing path
   alias definitions and oher compiler-related info used when
   compiling the files to be documented. This has the same
   functionality as the @tt{-u} option in @apl{ciaoc}. Simply leave
   undefined if you do not use path aliases, etc.

   Example: @includedef{pathsfile/1}".

%% pathsfile := 'mypaths.pl'.

% ----------------------------------------------------------------------------
% Document structure

doc_structure :=
    'poly_spec_doc'-[
      'heuristic_pcpe',
      'depth_first_spec',
      'breadth_first_spec',
      'oracle',
      'common_spec',
      'control_pcpe',
      'customization',
      'db_pcpe',
      'codegen_pcpe',
      'evaluation_pcpe',
      'fitness_pcpe',
      'benchmarking',
      'profiling_pcpe',
      'qsort_confs',
      'arg_filtering_pcpe',
      'post_equivalence',
      'stats_pcpe',
      'comments_pcpe',
      'filenames_pcpe',
      'search_tree_pcpe',
      'plot',
      'modes'
    ].

% ----------------------------------------------------------------------------
% Setting processing options for the different files
% ----------------------------------------------------------------------------

commonopts := no_bugs|no_engmods.
doc_mainopts := ~commonopts.
doc_compopts := ~commonopts.

% ----------------------------------------------------------------------------
% Default document formats
% ----------------------------------------------------------------------------

:- pred docformat(Format) => suported_format

# "Defines the documentation formats to be generated by default when
   running @apl{lpdoc}, among the following (@em{they should be kept
   in this order}): @includedef{wwwdocformat/1}".

docformat := texi.
docformat := dvi.
docformat := ps.
docformat := ascii.
docformat := manl.
docformat := info.
docformat := html.

:- regtype supported_format/1.

supported_format := texi.       
supported_format := dvi.
supported_format := ps.
supported_format := pdf.
supported_format := ascii.
supported_format := manl.
supported_format := info.
supported_format := html.
supported_format := htmlindex.

% ----------------------------------------------------------------------------
% Indices to be generated
% ----------------------------------------------------------------------------

:- pred index(Format) => suported_index

# "Defines the indices to be generated by default when running
   @apl{lpdoc}, among the following: 

   @noindent @tt{concept lib apl pred prop regtype decl op modedef file global}

   Selecting @tt{all} generates all the supported indices However,
   note that this (as well as selecting many indices explicitely)
   exceeds the capacity of most texinfo installations. A good set of
   indices is:

   @includedef{index/1}".

index := concept.
index := pred.
index := prop.
index := regtype.
index := modedef.
index := global.

:- regtype supported_index/1.

supported_index := concept.
supported_index := lib.
supported_index := apl.
supported_index := pred.
supported_index := prop.
supported_index := regtype.
supported_index := decl.
supported_index := op.
supported_index := modedef.
supported_index := file.
supported_index := global.
supported_index := all.

% ----------------------------------------------------------------------------
% References
% ----------------------------------------------------------------------------

:- pred bibfile(Format) => filename

# "If you are using bibliographic references, define in this way the
   @tt{.bib} files to be used to find them. Defines the indices to be
   generated by default when running @apl{lpdoc}, among the following:

   Example: @includedef{bibfile/1}".

bibfile := '/home/clip/bibtex/clip/clip'.
bibfile := '/home/clip/bibtex/clip/others'.


% ----------------------------------------------------------------------------
% Other settings
% ----------------------------------------------------------------------------

:- pred startpage(PageNumber) => int

# "Setting this to a different value allows changing the page number of
   the first page of the manual. This can be useful if the manual is to
   be included in a larger document or set of manuals.
   Typically, this should be an odd number.

   Example: @includedef{startpage/1}".

startpage := 1.

:- pred papertype(PageNumber) => supported_papertype

# "Selects the type of paper/format for printed documents.  See also
   the @tt{-onesided} and @tt{-twosided} options for the main file.

   Example: @includedef{papertype/1}".

papertype := afourpaper.

:- regtype supported_papertype/1.

supported_papertype := letterpaper.
supported_papertype := smallbook.
supported_papertype := afourpaper.
supported_papertype := afourlatex.
supported_papertype := afourwide.
supported_papertype := afourthesis.

:- pred htmlstyle/1 => filename

# "Define this to point to a style sheet to be used for any html pages
   generated (a copy of the style sheet will be made). Set it to
   @tt{no} to avoid using any style sheet. 

   Example: @includedef{htmlstyle/1}".

htmlstyle := ~fsR(~lpdoclib/'default.css').

:- pred libtexinfo/1 => yesno

# "If set to yes the @file{texinfo.tex} file that comes with the
   lpdoc distribution will be used when generating manuals in
   formats such as @tt{dvi} and @tt{ps}. Otherwise, the texinfo file
   that comes with your @apl{tex} installation will be used. It is
   recommended that you leave this set to @tt{'yes'} as below:

   Example: @includedef{libtexinfo/1}".

libtexinfo := 'yes'.

:- regtype yesno/1.

yesno := yes|no.

% ----------------------------------------------------------------------------
% Installation options
% (You only need to change these if you will be installing the docs somewhere)
% ----------------------------------------------------------------------------

:- pred docdir/1 => dirpath

# "Define this to be the dir in which you want the document(s) installed. 

   Example: @includedef{docdir/1}".

docdir := '/home/clip/public_html/Local/lpdoc_docs'.

:- pred infodir/1 => dirpath # "Define this to be the dir in which you
   want the info file installed".

infodir := '/home/clip/public_html/Local/lpdoc_docs'.

:- pred mandir/1 => dirpath # "This is the directory in which the man
   file will be installed.".

mandir := '/home/clip/public_html/Local/lpdoc_docs'.

:- pred htmldir/1 => dirpath # "Directore where the html manual will
   be installed.".

htmldir := '/home/clip/public_html/Local/lpdoc_docs'.


:- pred datamode(DataPermissions) 
=> permission_term

# "Define this to be the mode for automatically generated data
   files.

   Example: @includedef{datamode/1}".

datamode(perm(rw,rw,r)).


:- pred execmode(ExecPermissions)
=> permission_term

# "Define this to be the mode for automatically generated
   directories and executable files.

   Example: @includedef{execmode/1}".

execmode(perm(rwx,rwx,rx)).

:- regtype permission_term(perm(User,Group,Others)) :-
	permission(User),
	permission(Group),
	permission(Others).

:- regtype permission(P).

permission := x.
permission := w.
permission := wx.
permission := r.
permission := rx.
permission := rw.
permission := rwx.

% ----------------------------------------------------------------------------
% This is set during installation
% ----------------------------------------------------------------------------

%:- pred lpdoclib/1 => dirpath

%# "This points to the directory where the lpdoc library is
%   installed. This library contains a number of style files,
%   templates, and applications used by lpdoc (see the definitions of
%   other predicates in this file).

%   Example: @includedef{lpdoclib/1}".

%lpdoclib := '/home/cochoa/Systems/CiaoDE/lpdoc/lib'.

% ----------------------------------------------------------------------------
% End of SETTINGS
