#include <sicstus/sicstus.h>

#define GLUE_math 1
extern SP_GlueFun *math_funcs[];
extern char *math_prednames[];
extern int math_arities[];
#ifndef SPFUNCVARS
#define SPFUNCVARS 1
#if defined(PtrSPFuncs) && defined(SPDLL)
#include <sicstus/spaux.c>
#else
  static void **spfuncvars0[] = {0};
  static void **spfuncvars1[] = {0};
#endif
#endif

SPEXP1 void SPEXP2 SPCDECL sp_main_math(funcsp,prednamesp,aritiesp,spfuncvarsp0,versionp,init_fun,deinit_fun,spfuncvarsp1)
     SP_GlueFun ***funcsp;
     char ***prednamesp;
     int **aritiesp;
     void ****spfuncvarsp0;
     unsigned long *versionp;
     SP_InitFun **init_fun, **deinit_fun;
     void ****spfuncvarsp1;
{
  *funcsp = math_funcs;
  *prednamesp = math_prednames;
  *aritiesp = math_arities;
  *spfuncvarsp0 = spfuncvars0;
  *versionp = SPFliVersion;
  if (spfuncvarsp0+1 == spfuncvarsp1)
    *spfuncvarsp1 = spfuncvars1;
#if defined(PtrSPFuncs) && defined(SPDLL) && defined(SP_INSIDER)
  else
    *versionp = 0;
#endif
  *init_fun = NULL;
  *deinit_fun = NULL;
}

#ifndef GLUEDEFS
#define GLUEDEFS 1
struct glue_fli_info {
  SP_term *fli_stack_start;
  SP_term *term;
  int excp_flag;
};
struct glue_worker {
  struct glue_fli_info *fli_data;
  SP_term rest[1];
};
#define GlueErr(ArgNo,Exp,Culprit) {argno=(ArgNo);exp=(Exp);culprit=(Culprit);goto error;}
#define GlueTestExcp if (!flidata->excp_flag) {retval=0; flidata->excp_flag=1;}
#define GlueArg w
#define GlueArgdecl struct glue_worker *w
#define GlueX(I) flidata->term[I]
#define GlueRefTerm(Ref) (flidata->fli_stack_start[Ref])
#endif


  extern double pow PROTOTYPE((
    double,
    double));
static int SPCDECL __math_stub_0(GlueArg)
   GlueArgdecl;
{
  register struct glue_fli_info *flidata = w->fli_data;
  SP_term culprit;
  int argno, exp;
  double arg0;
  double arg1;
  double arg2;
  SP_term_ref ix = SP_new_term_refs(1);
  int retval = 1;
  flidata->excp_flag = 1;
  if(!glue_get_float(GlueX(0),&arg0)) GlueErr(1,768,GlueX(0));
  if(!glue_get_float(GlueX(1),&arg1)) GlueErr(2,768,GlueX(1));
  GlueRefTerm(ix+0) = GlueX(2);
  arg2 = pow(arg0, arg1);
  if(!glue_make_float(ix+0,arg2)) goto fail;
 way_out:
  GlueTestExcp;
  SP_reset_term_refs(ix);
  return retval;
 error:
  glue_error("pow",3,argno,exp,culprit);
 fail:
  retval=0;
  goto way_out;
}


  extern double log2 PROTOTYPE((
    double));
static int SPCDECL __math_stub_1(GlueArg)
   GlueArgdecl;
{
  register struct glue_fli_info *flidata = w->fli_data;
  SP_term culprit;
  int argno, exp;
  double arg0;
  double arg1;
  SP_term_ref ix = SP_new_term_refs(1);
  int retval = 1;
  flidata->excp_flag = 1;
  if(!glue_get_float(GlueX(0),&arg0)) GlueErr(1,768,GlueX(0));
  GlueRefTerm(ix+0) = GlueX(1);
  arg1 = log2(arg0);
  if(!glue_make_float(ix+0,arg1)) goto fail;
 way_out:
  GlueTestExcp;
  SP_reset_term_refs(ix);
  return retval;
 error:
  glue_error("log2",2,argno,exp,culprit);
 fail:
  retval=0;
  goto way_out;
}

SP_GlueFun *math_funcs[] = {
	__math_stub_0,
	__math_stub_1,
0};
char *math_prednames[] = {
	"pow",
	"log2",
0};
int math_arities[] = {
	3,
	2,
-1};
