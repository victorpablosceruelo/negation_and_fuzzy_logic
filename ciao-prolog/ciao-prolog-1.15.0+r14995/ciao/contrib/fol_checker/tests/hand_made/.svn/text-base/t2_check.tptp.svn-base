fof(ax1, axiom, (![X] : (person(X) <=> (X = "donald"|X="marshall"|X="oystein"|X="thoralf")))).
% TODO: CWA, however it is not required for assertion
%fof(ax1, axiom, person("donald")).
%fof(ax2, axiom, person("marshall")).
%fof(ax3, axiom, person("oystein")).
%fof(ax4, axiom, person("thoralf")).

fof(ax5, axiom, (![X,Y] : (parent(X,Y) <=> ((X="donald" & Y="marshall")|
	                                    (X="marshall" & Y="oystein")|
					    (X="oystein" & Y="thoralf"))))).
% TODO: CWA, required for assertion
%fof(ax5, axiom, parent("donald", "marshall")).
%fof(ax6, axiom, parent("marshell", "oystein")).
%fof(ax7, axiom, parent("oystein", "thoralf")).

fof(ax8, axiom, (![X,Y] : (ancestor(X,Y) <=> (parent(X,Y) | (?[Z] : (parent(X,Y) & ancestor(Y,Z))))))).
% TODO: CWA, required for assertion
%fof(ax8, axiom, (![X,Y] : (parent(X,Y) => ancestor(X,Y)))).
%fof(ax9, axiom, (![X,Y,Z] : ((parent(X,Y) & ancestor(Y,Z)) => ancestor(X,Z)))).

% :- prove parent(X,Y) => person(X), person(Y).
fof(as1, conjecture, (![X,Y] : (parent(X,Y) => (person(X) & person(Y))))).
% :- prove ancestor(X,Y) => person(X), person(Y).
%fof(as2, conjecture, (![X,Y] : (ancestor(X,Y) => (person(X) & person(Y))))).
