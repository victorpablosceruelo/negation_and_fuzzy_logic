:- module( wms2_mel, [main/0, '$start'/0 , allocate/0], [assertions , andprolog_nd] ).


:- use_module(library(dynamic)).

:- push_prolog_flag(multi_arity_warnings,off).

:- entry '$start'.

'$start' :-
        allocate, ! .

:- use_module(library(write)).
:- use_module(library(prolog_sys), [statistics/2]).
:- use_module(library(system)).
:- use_module(library(format), [format/2]).
:- use_module(library(between)).
:- use_module(library(dynamic)).
:- use_module(library(aggregates), [findall/3]).
:- use_module('./common_bench').

:- push_prolog_flag(multi_arity_warnings, off).

:- dynamic time_exec/1.

:- entry main .

main :-
% 	set_prolog_flag(gc, off),
% 	between(1,10,_),
%         statistics(walltime, [T1,_]),
 	allocate.
%         statistics(walltime, [T2,_]),
%         Delta is T2 - T1,
% 	format("-- main=~f ms.~n", [Delta]),
% 	asserta_fact(time_exec(Delta)),
% 	fail.
% main :-
% 	findall(Time,(time_exec(Time),retract_fact(time_exec(Time))),L),
% 	delete_min_max(L,L2),
% 	average_list(L2,Average),
% 	format("     Time Average     = ~f ms.~n~n", [Average]).

job(1,'2',15,'N').
job(2,'2',15,'N').
job(3,'E',15,'N').
job(4,'5',15,'Y').
job(5,'2',15,'N').
job(6,'1',15,'N').
job(7,'5',15,'N').
job(8,'2',15,'N').
job(9,'2',15,'N').
job(10,'E',15,'N').
job(11,'5',15,'N').
job(12,'2',15,'N').
job(13,'1',15,'N').
job(14,'1',15,'N').
job(15,'5',15,'N').
job(16,'2',15,'N').
job(17,'2',15,'N').
job(18,'E',15,'N').
job(19,'5',15,'N').
job(20,'2',15,'Y').
job(21,'1',15,'N').
job(22,'1',15,'N').
job(23,'5',15,'N').
job(24,'2',15,'N').
job(25,'2',15,'N').
job(26,'E',15,'N').
job(27,'5',15,'N').
job(28,'2',15,'N').
job(29,'E',316,'N').
job(30,'5',10,'N').
job(31,'1',307,'N').
job(32,'2',267,'N').
job(33,'1',22,'N').
job(34,'2',14,'N').
job(35,'5',140,'N').
job(36,'L',10,'N').
job(37,'1',316,'N').
job(38,'2',60,'N').
job(39,'1',13,'N').
job(40,'2',60,'N').
job(41,'E',417,'N').
job(42,'5',28,'N').
job(43,'1',142,'N').
job(44,'2',10,'N').
job(45,'1',155,'N').
job(46,'2',28,'N').
job(47,'5',164,'N').
job(48,'L',10,'N').
job(49,'1',307,'N').
job(50,'2',243,'N').
job(51,'1',60,'N').
job(52,'2',10,'N').
job(53,'E',316,'N').
job(54,'5',307,'N').
job(55,'1',40,'N').
job(56,'2',353,'N').
job(57,'1',307,'N').
job(58,'2',267,'N').
job(59,'5',33,'N').
job(60,'L',53,'N').
job(61,'1',316,'N').
job(62,'2',10,'N').
job(63,'1',307,'N').
job(64,'2',267,'N').
job(65,'E',316,'N').
job(66,'5',60,'Y').
job(67,'1',13,'N').
job(68,'2',60,'N').
job(69,'1',155,'N').
job(70,'2',10,'N').
job(71,'5',199,'N').
job(72,'L',353,'N').
job(73,'1',417,'N').
job(74,'2',28,'N').
job(75,'1',142,'N').
job(76,'2',10,'N').
job(77,'E',307,'N').
job(78,'5',243,'N').
job(79,'1',60,'N').
job(80,'2',10,'Y').
job(81,'2',127,'N').
job(82,'5',514,'N').
job(83,'L',183,'N').
job(84,'1',316,'N').
job(85,'2',307,'N').
job(86,'1',40,'N').
job(87,'2',353,'N').
job(88,'E',316,'N').
job(89,'5',10,'N').
job(90,'1',307,'N').
job(91,'2',267,'N').
job(92,'1',22,'N').
job(93,'2',14,'Y').
job(94,'5',140,'N').
job(95,'L',10,'N').
job(96,'1',316,'N').
job(97,'2',60,'N').
job(98,'1',13,'N').
job(99,'2',60,'N').
job(100,'E',417,'N').
job(101,'5',28,'N').
job(102,'1',142,'N').
job(103,'2',10,'N').
job(104,'1',155,'N').
job(105,'2',28,'N').
job(106,'5',164,'N').
job(107,'L',10,'Y').
job(108,'1',307,'N').
job(109,'2',243,'N').
job(110,'1',60,'N').
job(111,'2',10,'N').
job(112,'E',316,'N').
job(113,'5',307,'N').
job(114,'1',40,'N').
job(115,'2',353,'N').
job(116,'1',307,'N').
job(117,'2',267,'N').
job(118,'5',33,'N').
job(119,'L',53,'N').
job(120,'1',316,'N').
job(121,'2',10,'Y').
job(122,'1',307,'N').
job(123,'2',267,'N').
job(124,'E',316,'N').
job(125,'5',60,'N').
job(126,'1',13,'N').
job(127,'2',60,'N').
job(128,'1',155,'N').
job(129,'2',10,'N').
job(130,'5',199,'N').
job(131,'L',353,'N').
job(132,'1',417,'N').
job(133,'2',28,'N').
job(134,'1',142,'N').
job(135,'2',10,'Y').
job(136,'E',307,'N').
job(137,'5',243,'N').
job(138,'1',60,'N').
job(139,'2',10,'N').
job(140,'1',60,'N').
job(141,'2',127,'N').
job(142,'5',514,'N').
job(143,'L',183,'N').
job(144,'1',316,'N').
job(145,'2',307,'N').
job(146,'1',40,'N').
job(147,'2',353,'N').
job(148,'E',316,'N').
job(149,'5',10,'N').
job(150,'1',307,'N').
job(151,'2',267,'N').
job(152,'1',22,'N').
job(153,'2',14,'N').
job(154,'5',140,'N').
job(155,'L',10,'N').
job(156,'1',316,'N').
job(157,'2',60,'N').
job(158,'1',13,'N').
job(159,'2',60,'N').
job(160,'E',417,'N').
job(161,'5',28,'N').
job(162,'1',142,'N').
job(163,'2',10,'N').
job(164,'1',155,'N').
job(165,'2',28,'N').
job(166,'5',164,'N').
job(167,'L',10,'N').
job(168,'1',307,'N').
job(169,'2',243,'N').
job(170,'1',60,'N').
job(171,'2',10,'N').
job(172,'E',316,'N').
job(173,'5',307,'Y').
job(174,'1',40,'N').
job(175,'2',353,'N').
job(176,'1',307,'N').
job(177,'2',267,'N').
job(178,'5',33,'N').
job(179,'L',53,'N').
job(180,'1',316,'N').
job(181,'2',10,'N').
job(182,'1',307,'N').
job(183,'2',267,'N').
job(184,'E',316,'N').
job(185,'5',60,'N').
job(186,'1',13,'N').
job(187,'2',60,'Y').
job(188,'2',10,'N').
job(189,'5',199,'N').
job(190,'L',353,'N').
job(191,'1',417,'N').
job(192,'2',28,'N').
job(193,'1',142,'N').
job(194,'2',10,'N').
job(195,'E',307,'N').
job(196,'5',243,'N').
job(197,'1',60,'N').
job(198,'2',10,'N').
job(199,'1',60,'N').
job(200,'2',127,'Y').
job(201,'5',514,'N').
job(202,'L',183,'N').
job(203,'1',316,'N').
job(204,'2',307,'N').
job(205,'1',40,'N').
job(206,'2',353,'N').
job(207,'E',316,'N').
job(208,'5',10,'N').
job(209,'1',307,'N').
job(210,'2',267,'N').
job(211,'1',22,'N').
job(212,'2',14,'N').
job(213,'5',140,'N').
job(214,'L',10,'Y').
job(215,'1',316,'N').
job(216,'2',60,'N').
job(217,'1',13,'N').
job(218,'2',60,'N').
job(219,'E',417,'N').
job(220,'5',28,'N').
job(221,'1',142,'N').
job(222,'2',10,'N').
job(223,'1',155,'N').
job(224,'2',28,'N').
job(225,'5',164,'N').
job(226,'L',10,'N').
job(227,'1',307,'N').
job(228,'2',243,'Y').
job(229,'1',60,'N').
job(230,'2',10,'N').
job(231,'E',316,'N').
job(232,'5',307,'N').
job(233,'1',40,'N').
job(234,'2',353,'N').
job(235,'1',307,'N').
job(236,'2',267,'N').
job(237,'5',33,'N').
job(238,'L',53,'N').
job(239,'1',316,'N').
job(240,'2',10,'N').
job(241,'1',307,'N').
job(242,'2',267,'Y').
job(243,'E',316,'N').
job(244,'5',60,'N').
job(245,'1',13,'N').
job(246,'2',60,'N').
job(247,'1',155,'N').
job(248,'2',10,'N').
job(249,'5',199,'N').
job(250,'L',353,'N').

tech(1,480,960,10,60).
tech(2,510,990,7,60).
tech(3,480,960,10,0).
tech(4,480,960,10,0).
tech(5,480,960,10,0).
tech(6,480,960,10,60).
tech(7,480,960,10,45).
tech(8,480,960,12,0).
tech(9,480,960,10,60).
tech(10,480,960,10,30).
tech(11,480,960,10,60).
tech(12,480,960,10,60).
tech(13,510,990,10,60).
tech(14,510,990,10,0).
tech(15,510,990,7,60).
tech(16,480,960,10,0).
tech(17,480,960,10,0).
tech(18,480,960,10,60).
tech(19,480,960,12,0).
tech(20,480,960,10,0).
tech(21,480,960,10,0).
tech(22,510,990,10,60).
tech(23,480,960,8,60).
tech(24,480,960,10,0).
tech(25,480,960,10,0).
tech(26,480,960,10,0).
tech(27,510,990,10,60).
tech(28,510,990,10,0).
tech(29,480,960,10,0).
tech(30,480,960,10,60).
tech(31,510,990,10,0).
tech(32,480,960,10,0).
tech(33,480,960,9,0).
tech(34,480,960,10,60).
tech(35,480,960,10,60).
tech(36,480,960,10,60).
tech(37,480,960,10,60).
tech(38,480,960,10,60).
tech(39,510,990,10,60).
tech(40,480,960,12,0).
tech(41,480,960,10,60).
tech(42,480,960,7,60).
tech(43,510,990,10,0).
tech(44,510,990,8,60).
tech(45,510,990,10,0).
tech(46,480,960,10,60).
tech(47,480,960,10,60).
tech(48,480,960,12,60).
tech(49,480,960,10,0).
tech(50,510,990,10,0).
tech(51,480,960,12,0).
tech(52,480,960,10,60).
tech(53,510,990,7,0).
tech(54,480,960,10,60).
tech(55,510,990,10,60).
tech(56,510,990,10,60).
tech(57,510,990,10,0).
tech(58,480,960,10,60).
tech(59,480,960,10,0).
tech(60,480,960,10,0).
tech(61,480,960,10,60).
tech(62,480,960,9,0).
tech(63,510,990,11,60).
tech(64,480,960,10,60).
tech(65,480,960,7,45).
tech(66,480,960,10,60).
tech(67,480,960,10,0).
tech(68,480,960,10,60).
tech(69,480,960,10,0).
tech(70,510,990,10,60).
tech(71,480,960,10,0).
tech(72,480,960,10,60).
tech(73,510,990,10,60).
tech(74,480,960,10,60).
tech(75,480,960,10,60).
tech(76,480,960,10,30).
tech(77,480,960,12,0).
tech(78,480,960,10,60).
tech(79,480,960,10,0).
tech(80,480,960,10,0).
tech(81,480,960,12,60).
tech(82,480,960,10,0).
tech(83,510,990,7,60).
tech(84,480,960,12,0).
tech(85,480,960,12,45).
tech(86,480,960,10,0).
tech(87,480,960,10,0).
tech(88,480,960,10,60).
tech(89,480,960,10,60).
tech(90,480,960,10,0).
tech(91,510,990,10,60).
tech(92,480,960,10,60).
tech(93,510,990,10,60).
tech(94,480,960,8,30).
tech(95,510,990,10,0).
tech(96,480,960,10,0).
tech(97,480,960,10,60).
tech(98,510,990,8,60).
tech(99,510,990,10,60).
tech(100,480,960,10,0).
tech(101,480,960,10,60).
tech(102,510,990,10,60).
tech(103,480,960,10,60).
tech(104,510,990,10,60).
tech(105,510,990,10,60).
tech(106,480,960,10,0).
tech(107,480,960,10,60).
tech(108,510,990,10,0).
tech(109,480,960,11,0).
tech(110,480,960,10,60).
tech(111,480,960,10,0).
tech(112,480,960,10,60).
tech(113,510,990,10,0).
tech(114,480,960,12,60).
tech(115,480,960,10,60).
tech(116,480,960,10,0).
tech(117,480,960,10,60).
tech(118,480,960,12,60).

base(1,29450,8740).
base(2,29640,9200).
base(3,29640,9200).
base(4,29640,9200).
base(5,29640,9200).
base(6,29640,9200).
base(7,29640,9200).
base(8,29100,9720).
base(9,29210,9280).
base(10,29100,9720).
base(11,29650,8850).
base(12,29210,9280).
base(13,29640,9200).
base(14,29640,9200).
base(15,29450,8740).
base(16,29100,9720).
base(17,29660,8780).
base(18,29210,9280).
base(19,29210,9280).
base(20,29450,8740).
base(21,29640,9200).
base(22,29140,9630).
base(23,29210,9280).
base(24,29100,9720).
base(25,29210,9280).
base(26,29210,9280).
base(27,29450,8740).
base(28,29450,8740).
base(29,29650,8890).
base(30,29210,9280).
base(31,29640,9200).
base(32,29640,9200).
base(33,29640,9200).
base(34,29210,9280).
base(35,29640,9200).
base(36,29640,9200).
base(37,29640,9200).
base(38,29210,9280).
base(39,29640,9200).
base(40,29210,9280).
base(41,29210,9280).
base(42,29210,9280).
base(43,29210,9280).
base(44,29030,9060).
base(45,29640,9200).
base(46,29210,9280).
base(47,29210,9280).
base(48,29640,9200).
base(49,29210,9280).
base(50,29450,8740).
base(51,29640,9200).
base(52,29210,9280).
base(53,29640,9200).
base(54,29210,9280).
base(55,29640,9200).
base(56,29640,9200).
base(57,29640,9200).
base(58,29640,9200).
base(59,29450,8740).
base(60,29450,8740).
base(61,29210,9280).
base(62,29640,9200).
base(63,29640,9200).
base(64,29480,9340).
base(65,29640,9200).
base(66,29210,9280).
base(67,29640,9200).
base(68,29210,9280).
base(69,29450,8740).
base(70,29640,9200).
base(71,29210,9280).
base(72,29640,9200).
base(73,29450,8740).
base(74,29450,8740).
base(75,29210,9280).
base(76,29100,9720).
base(77,29210,9280).
base(78,29210,9280).
base(79,29640,9200).
base(80,29210,9280).
base(81,29100,9720).
base(82,29640,9200).
base(83,29640,9200).
base(84,29640,9200).
base(85,29640,9200).
base(86,29210,9280).
base(87,29450,8740).
base(88,29450,8740).
base(89,29210,9280).
base(90,29640,9200).
base(91,29640,9200).
base(92,29210,9280).
base(93,29640,9200).
base(94,29100,9720).
base(95,29640,9200).
base(96,29450,8760).
base(97,29640,9200).
base(98,29640,9200).
base(99,29450,8740).
base(100,29210,9280).
base(101,29100,9720).
base(102,29450,8740).
base(103,29640,9200).
base(104,29640,9200).
base(105,29640,9200).
base(106,29210,9280).
base(107,29640,9200).
base(108,29640,9200).
base(109,29640,9200).
base(110,29210,9280).
base(111,29640,9200).
base(112,29640,9200).
base(113,29640,9200).
base(114,29640,9200).
base(115,29100,9720).
base(116,29210,9280).
base(117,29640,9200).
base(118,29100,9720).

job_skills(1,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,44]).
job_skills(2,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29,44,96,11,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,64]).
job_skills(3,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17]).
job_skills(4,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(5,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(6,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17]).
job_skills(7,[17,11]).
job_skills(8,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,29]).
job_skills(9,",").
job_skills(10,[8,10,16,24,94,101,115,118,76,81]).
job_skills(11,"@").
job_skills(12,[29,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,11,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,17,44,96]).
job_skills(13,",").
job_skills(14,[8,10,16,24,94,101,115,118,76,81]).
job_skills(15,[8,10,16,24,94,101,115,118,76,81]).
job_skills(16,[17,11]).
job_skills(17,[22,8,10,16,24,94,101,115,118,76,81,44,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,64]).
job_skills(18,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(19,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,11,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29]).
job_skills(20,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(21,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,22,8,10,16,24,94,101,115,118,76,81,64,44]).
job_skills(22,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64]).
job_skills(23,[17,11,29]).
job_skills(24,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(25,"@").
job_skills(26,[8,10,16,24,94,101,115,118,76,81]).
job_skills(27,",").
job_skills(28,"@"||[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,96,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(29,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(30,",`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11]).
job_skills(31,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11,44,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29,17,22]).
job_skills(32,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,44,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(33,[8,10,16,24,94,101,115,118,76,81]).
job_skills(34,[29,11,17,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(35,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(36,[29]).
job_skills(37,"@`"||[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,1,15,20,27,28,87,88,99,102,4,5,21,32,39,90,93,95,97,98,107,108,111,109,50,59,60,69,73,74,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,44,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29]).
job_skills(38,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,44]).
job_skills(39,",").
job_skills(40,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29,44,96,11,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,64]).
job_skills(41,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17]).
job_skills(42,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64]).
job_skills(43,[22,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,8,10,16,24,94,101,115,118,76,81,64]).
job_skills(44,",").
job_skills(45,[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,96]).
job_skills(46,[22,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,8,10,16,24,94,101,115,118,76,81]).
job_skills(47,",").
job_skills(48,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(49,[8,10,16,24,94,101,115,118,76,81,22,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,64]).
job_skills(50,[11,29]).
job_skills(51,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64]).
job_skills(52,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,22]).
job_skills(53,[11,17,29]).
job_skills(54,[8,10,16,24,94,101,115,118,76,81]).
job_skills(55,[17]).
job_skills(56,"@	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(57,[22,8,10,16,24,94,101,115,118,76,81]).
job_skills(58,",`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,11,29]).
job_skills(59,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,29,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,96,11,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(60,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64,96,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,29]).
job_skills(61,[8,10,16,24,94,101,115,118,76,81]).
job_skills(62,[29,11,17]).
job_skills(63,[8,10,16,24,94,101,115,118,22,76,81]).
job_skills(64,[11]).
job_skills(65,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(66,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(67,[29,11,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,17]).
job_skills(68,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(69,[17]).
job_skills(70,"@").
job_skills(71,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(72,",").
job_skills(73,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17]).
job_skills(74,"@").
job_skills(75,",").
job_skills(76,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(77,",").
job_skills(78,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11,29]).
job_skills(79,"@"||[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(80,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(81,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(82,[17,11]).
job_skills(83,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,8,10,16,24,94,101,115,118,76,81,22,64,29,11,17]).
job_skills(84,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,64,22]).
job_skills(85,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,44,17]).
job_skills(86,"`"||[1,15,20,27,28,87,88,99,102,29,50,59,60,69,73,74,11,64,17,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(87,[22,8,10,16,24,94,101,115,118,76,81,44,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,64]).
job_skills(88,[8,10,16,24,94,101,115,118,76,81,22,64,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(89,[22,8,10,16,24,94,101,115,118,76,81,44]).
job_skills(90,",`").
job_skills(91,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17]).
job_skills(92,[22,8,10,16,24,94,101,115,118,76,81]).
job_skills(93,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(94,[29,11,17,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(95,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(96,[17,11,29]).
job_skills(97,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,29]).
job_skills(98,",").
job_skills(99,",").
job_skills(100,[8,10,16,24,94,101,115,118,76,81]).
job_skills(101,"`"||[17,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11]).
job_skills(102,[29,11,96,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,1,15,20,27,28,87,88,99,102,4,5,21,32,39,90,93,95,97,98,107,108,111,109,50,59,60,69,73,74,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64,17,44]).
job_skills(103,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,44]).
job_skills(104,",").
job_skills(105,"`"||[1,15,20,27,28,87,88,99,102,29,50,59,60,69,73,74,11,44,17,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,64]).
job_skills(106,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(107,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(108,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(109,[8,10,16,24,94,101,115,118,76,81,22,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(110,[29]).
job_skills(111,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29]).
job_skills(112,[8,10,16,24,94,101,115,118,76,81]).
job_skills(113,[11,29,17]).
job_skills(114,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(115,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(116,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64,44]).
job_skills(117,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,44,64,22,8,10,16,24,94,101,115,118,76,81]).
job_skills(118,",`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,11]).
job_skills(119,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,44,17,11,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29]).
job_skills(121,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(122,[29,11,17]).
job_skills(123,[8,10,16,24,94,101,115,118,76,81]).
job_skills(124,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29,96,11,44,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17]).
job_skills(125,"@").
job_skills(126,",").
job_skills(127,[29,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,11,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,17,44,96]).
job_skills(128,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(129,[17]).
job_skills(130,"@").
job_skills(131,[22,8,10,16,24,94,101,115,118,76,81]).
job_skills(132,",").
job_skills(133,",`	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,1,15,20,27,28,87,88,99,102,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,50,59,60,69,73,74,29,11,64,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,17]).
job_skills(134,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64,29,11,96,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,44]).
job_skills(135,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(136,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(137,",").
job_skills(138,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(139,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(140,[8,10,16,24,94,101,115,118,76,81]).
job_skills(120,"@	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(141,[17,11,29]).
job_skills(142,[8,10,16,24,94,101,115,118,76,81]).
job_skills(143,[17]).
job_skills(144,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64,29,22,11,17]).
job_skills(145,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(146,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,44,17]).
job_skills(147,",`"||[11,29,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(148,[11,17,96,29,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(149,[22]).
job_skills(150,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,44,64,22,8,10,16,24,94,101,115,118,76,81]).
job_skills(151,",").
job_skills(152,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,44,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29,96,11,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(153,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,22,64,8,10,16,24,94,101,115,118,76,81]).
job_skills(154,",").
job_skills(155,[29,11,17,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(156,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(157,[17,11]).
job_skills(158,[8,10,16,24,94,101,115,118,76,81,64,22]).
job_skills(159,[22,8,10,16,24,94,101,115,118,76,81,44,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,64]).
job_skills(160,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(161,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(162,"`"||[17,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11,29]).
job_skills(163,"@"||[8,10,16,24,94,101,115,118,76,81,22,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29]).
job_skills(164,[22]).
job_skills(165,",").
job_skills(166,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11,29,17]).
job_skills(167,[22]).
job_skills(168,[8,10,16,24,94,101,115,118,76,81]).
job_skills(169,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(170,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(171,[29]).
job_skills(172,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,44,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(173,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(174,[11,29,17]).
job_skills(175,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(176,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17]).
job_skills(177,",`	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,1,15,20,27,28,87,88,99,102,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,50,59,60,69,73,74,29,11,64,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,17]).
job_skills(178,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(179,",`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,11]).
job_skills(180,[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,96,44,17]).
job_skills(181,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,64,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(182,",").
job_skills(183,[29,11,17]).
job_skills(184,",").
job_skills(185,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,11,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29]).
job_skills(186,"@").
job_skills(187,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(188,[8,10,16,24,94,101,115,118,76,81]).
job_skills(189,[17]).
job_skills(190,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64]).
job_skills(191,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,22,8,10,16,24,94,101,115,118,76,81,64,44]).
job_skills(192,",").
job_skills(193,[29,96,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11,17,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,44,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(194,"@").
job_skills(195,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64]).
job_skills(196,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,22]).
job_skills(197,",").
job_skills(198,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,29,64,11,44]).
job_skills(199,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,64]).
job_skills(200,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(201,[17,11,29]).
job_skills(202,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(203,[17]).
job_skills(204,"@"||[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(205,[22,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,8,10,16,24,94,101,115,118,76,81]).
job_skills(206,",`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,17,11,29]).
job_skills(207,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(208,[11,17,29,96]).
job_skills(209,"@	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(210,",").
job_skills(211,",").
job_skills(212,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,96,11,29,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,44,17]).
job_skills(213,",").
job_skills(214,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(215,[29,11,17,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(216,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(217,[17,11]).
job_skills(218,"@").
job_skills(219,[8,10,16,24,94,101,115,118,76,81]).
job_skills(220,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(221,[8,10,16,24,94,101,115,118,76,81,22,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(222,"`"||[17,11,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,29]).
job_skills(223,[22,64,2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,8,10,16,24,94,101,115,118,76,81]).
job_skills(224,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(225,",").
job_skills(226,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(227,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(228,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(229,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72]).
job_skills(230,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(231,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11]).
job_skills(232,"	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,64,22]).
job_skills(233,",").
job_skills(234,[11,29]).
job_skills(235,[8,10,16,24,94,101,115,118,76,81]).
job_skills(236,"`"||[17,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11]).
job_skills(237,[8,10,16,24,94,101,115,118,76,81,22,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,64]).
job_skills(238,[22,8,10,16,24,94,101,115,118,76,81,44,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80]).
job_skills(239,",`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,11,17]).
job_skills(240,",	"||[12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,29,96,11,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,22]).
job_skills(241,[22,64,9,12,18,19,23,25,26,30,34,38,40,41,86,89,92,100,106,110,116,42,43,46,47,49,52,54,61,66,68,71,75,77,78,80,8,10,16,24,94,101,115,118,76,81]).
job_skills(242,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17]).
job_skills(243,",").
job_skills(244,",").
job_skills(245,[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74,96]).
job_skills(246,"@"||[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,96,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(247,[8,10,16,24,94,101,115,118,76,81]).
job_skills(248,[2,3,6,7,13,14,31,33,35,36,37,91,103,104,105,112,113,114,117,4,5,21,32,39,90,93,95,97,98,107,108,111,109,45,51,53,55,56,57,58,62,63,65,67,70,79,82,83,84,85,48,72,29,11,17,44,64,96,1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).
job_skills(249,[8,10,16,24,94,101,115,118,76,81,22]).
job_skills(250,"`"||[1,15,20,27,28,87,88,99,102,50,59,60,69,73,74]).

coord(1,29040,9310).
coord(2,29260,8930).
coord(3,29510,8780).
coord(4,29160,9100).
coord(5,29260,9730).
coord(6,29310,8780).
coord(7,29650,8720).
coord(8,29440,8910).
coord(9,29060,8930).
coord(10,29110,9780).
coord(11,29440,9510).
coord(12,29860,9030).
coord(13,28910,8980).
coord(14,29090,9770).
coord(15,29050,9720).
coord(16,29640,8710).
coord(17,29060,9430).
coord(18,29710,9080).
coord(19,29240,8810).
coord(20,29730,9100).
coord(21,29110,9380).
coord(22,29630,9500).
coord(23,29850,8820).
coord(24,29140,9710).
coord(25,29460,9530).
coord(26,29090,9770).
coord(27,29040,8910).
coord(28,29460,9130).
coord(29,28950,9220).
coord(30,28960,8830).
coord(31,29170,8840).
coord(32,28980,9250).
coord(33,29090,9770).
coord(34,29800,8970).
coord(35,29110,9880).
coord(36,29620,8890).
coord(37,29430,9100).
coord(38,29040,9310).
coord(39,29050,8920).
coord(40,29260,8930).
coord(41,29510,8780).
coord(42,29520,9190).
coord(43,29130,9400).
coord(44,28940,9010).
coord(45,29350,8720).
coord(46,29160,9430).
coord(47,28980,9040).
coord(48,29780,9150).
coord(49,29290,9860).
coord(50,29600,8870).
coord(51,29610,9280).
coord(52,29220,9490).
coord(53,29870,8840).
coord(54,29080,9750).
coord(55,29690,8760).
coord(56,29300,9370).
coord(57,28910,9580).
coord(58,28920,8790).
coord(59,29130,8900).
coord(60,29340,9110).
coord(61,29090,9770).
coord(62,29760,8930).
coord(63,29170,9840).
coord(64,29580,8850).
coord(65,29430,9200).
coord(66,29160,9100).
coord(67,29850,9020).
coord(68,29260,9730).
coord(69,29670,8740).
coord(70,29480,9550).
coord(71,29090,9260).
coord(72,28900,8970).
coord(73,29310,8780).
coord(74,29520,9290).
coord(75,28980,9040).
coord(76,29740,9110).
coord(77,28990,9060).
coord(78,29400,8870).
coord(79,29610,9380).
coord(80,29730,9100).
coord(81,29140,9710).
coord(82,29650,8720).
coord(83,29660,9730).
coord(84,29270,9440).
coord(85,29080,8750).
coord(86,29490,8960).
coord(87,28900,9470).
coord(88,29350,9820).
coord(89,28960,9530).
coord(90,28970,8840).
coord(91,29180,8750).
coord(92,28990,9560).
coord(93,29160,9100).
coord(94,29810,8980).
coord(95,29020,9890).
coord(96,29630,8700).
coord(97,29440,8910).
coord(98,29050,9120).
coord(99,29060,8930).
coord(100,29110,9780).
coord(101,29520,8790).
coord(102,29530,9000).
coord(103,29140,9210).
coord(104,28950,9020).
coord(105,29360,8930).
coord(106,29170,9240).
coord(107,29730,9100).
coord(108,29790,9160).
coord(109,29200,9870).
coord(110,29610,8880).
coord(111,29620,9090).
coord(112,29090,9770).
coord(113,29880,8850).
coord(114,29290,9760).
coord(115,29500,8770).
coord(116,29310,9180).
coord(117,28920,9390).
coord(118,28930,8800).
coord(119,29140,8810).
coord(120,29350,9420).
coord(121,29160,9100).
coord(122,29770,8940).
coord(123,29080,9850).
coord(124,29230,8900).
coord(125,29440,9510).
coord(126,28980,9040).
coord(127,29860,9030).
coord(128,29170,9740).
coord(129,29680,8750).
coord(130,29490,9360).
coord(131,29100,9570).
coord(132,28910,8980).
coord(133,29320,8990).
coord(134,29530,9100).
coord(135,29730,9100).
coord(136,29190,9160).
coord(137,29000,9070).
coord(138,29410,8780).
coord(139,29620,9190).
coord(140,29090,9770).
coord(141,29840,8810).
coord(142,29050,9720).
coord(143,29660,8730).
coord(144,29670,9540).
coord(145,29280,9250).
coord(146,29090,8760).
coord(147,29100,8870).
coord(148,29550,8820).
coord(149,29360,9630).
coord(150,28970,9340).
coord(151,28980,8850).
coord(152,29190,8960).
coord(153,29000,9370).
coord(154,28980,9040).
coord(155,29820,8990).
coord(156,29230,9700).
coord(157,29640,8710).
coord(158,29450,9720).
coord(159,29060,9430).
coord(160,29710,9080).
coord(161,29020,9790).
coord(162,29530,8800).
coord(163,29540,9810).
coord(164,29150,9520).
coord(165,28960,9030).
coord(166,29370,8840).
coord(167,29180,9550).
coord(168,29090,9770).
coord(169,29800,9170).
coord(170,29110,9880).
coord(171,29620,8890).
coord(172,29270,9140).
coord(173,29160,9100).
coord(174,29890,8860).
coord(175,29200,9770).
coord(176,29510,8780).
coord(177,29320,8990).
coord(178,28930,9200).
coord(179,28940,8810).
coord(180,29150,8720).
coord(181,29360,9230).
coord(182,28980,9040).
coord(183,29780,8950).
coord(184,29030,8900).
coord(185,29240,8810).
coord(186,29450,9320).
coord(187,29730,9100).
coord(188,29080,9750).
coord(189,29690,8760).
coord(190,29500,9170).
coord(191,29110,9380).
coord(192,28920,8990).
coord(193,29330,8900).
coord(194,29540,9410).
coord(195,29590,9260).
coord(196,29200,9470).
coord(197,29010,9080).
coord(198,29420,8990).
coord(199,29630,9500).
coord(200,29160,9100).
coord(201,29850,8820).
coord(202,29260,9730).
coord(203,29670,8740).
coord(204,29680,9350).
coord(205,29290,9560).
coord(206,28900,8770).
coord(207,29050,9820).
coord(208,29560,8830).
coord(209,29370,9440).
coord(210,28980,9150).
coord(211,28990,8860).
coord(212,29200,8870).
coord(213,29010,9180).
coord(214,29730,9100).
coord(215,29830,9000).
coord(216,29140,9710).
coord(217,29650,8720).
coord(218,29460,9530).
coord(219,29090,9770).
coord(220,29720,9090).
coord(221,29230,9800).
coord(222,29540,8810).
coord(223,29550,9620).
coord(224,29160,9330).
coord(225,28970,9040).
coord(226,29380,8750).
coord(227,29190,9360).
coord(228,29160,9100).
coord(229,29810,9180).
coord(230,29020,9890).
coord(231,29470,8840).
coord(232,29280,9450).
coord(233,28980,9040).
coord(234,29700,8870).
coord(235,29110,9780).
coord(236,29520,8790).
coord(237,29330,9800).
coord(238,28940,9510).
coord(239,28950,8820).
coord(240,29160,8930).
coord(241,29370,9540).
coord(242,29730,9100).
coord(243,29030,9100).
coord(244,29040,8910).
coord(245,29250,8720).
coord(246,29460,9130).
coord(247,29090,9770).
coord(248,29880,9050).
coord(249,29290,9760).
coord(250,29500,8770).
coord(251,29440,8760).
coord(252,29640,9200).
coord(253,29640,9200).
coord(254,29640,9200).
coord(255,29640,9200).
coord(256,29640,9200).
coord(257,29640,9200).
coord(258,29210,9280).
coord(259,29210,9280).
coord(260,29210,9280).
coord(261,29610,8870).
coord(262,29210,9280).
coord(263,29640,9200).
coord(264,29640,9200).
coord(265,29440,8760).
coord(266,29210,9280).
coord(267,29610,8870).
coord(268,29210,9280).
coord(269,29210,9280).
coord(270,29440,8760).
coord(271,29640,9200).
coord(272,29210,9280).
coord(273,29210,9280).
coord(274,29210,9280).
coord(275,29210,9280).
coord(276,29210,9280).
coord(277,29440,8760).
coord(278,29440,8760).
coord(279,29610,8870).
coord(280,29210,9280).
coord(281,29640,9200).
coord(282,29640,9200).
coord(283,29640,9200).
coord(284,29210,9280).
coord(285,29640,9200).
coord(286,29640,9200).
coord(287,29640,9200).
coord(288,29210,9280).
coord(289,29640,9200).
coord(290,29210,9280).
coord(291,29210,9280).
coord(292,29210,9280).
coord(293,29210,9280).
coord(294,29440,8760).
coord(295,29640,9200).
coord(296,29210,9280).
coord(297,29210,9280).
coord(298,29440,8760).
coord(299,29210,9280).
coord(300,29440,8760).
coord(301,29640,9200).
coord(302,29210,9280).
coord(303,29640,9200).
coord(304,29210,9280).
coord(305,29640,9200).
coord(306,29640,9200).
coord(307,29640,9200).
coord(308,29640,9200).
coord(309,29440,8760).
coord(310,29440,8760).
coord(311,29210,9280).
coord(312,29640,9200).
coord(313,29640,9200).
coord(314,29640,9200).
coord(315,29640,9200).
coord(316,29210,9280).
coord(317,29640,9200).
coord(318,29210,9280).
coord(319,29440,8760).
coord(320,29640,9200).
coord(321,29210,9280).
coord(322,29440,8760).
coord(323,29440,8760).
coord(324,29440,8760).
coord(325,29210,9280).
coord(326,29210,9280).
coord(327,29210,9280).
coord(328,29210,9280).
coord(329,29640,9200).
coord(330,29210,9280).
coord(331,29210,9280).
coord(332,29640,9200).
coord(333,29640,9200).
coord(334,29640,9200).
coord(335,29640,9200).
coord(336,29210,9280).
coord(337,29440,8760).
coord(338,29440,8760).
coord(339,29210,9280).
coord(340,29640,9200).
coord(341,29640,9200).
coord(342,29210,9280).
coord(343,29640,9200).
coord(344,29210,9280).
coord(345,29640,9200).
coord(346,29440,8760).
coord(347,29640,9200).
coord(348,29640,9200).
coord(349,29440,8760).
coord(350,29210,9280).
coord(351,29210,9280).
coord(352,29440,8760).
coord(353,29640,9200).
coord(354,29640,9200).
coord(355,29640,9200).
coord(356,29210,9280).
coord(357,29640,9200).
coord(358,29640,9200).
coord(359,29440,8760).
coord(360,29210,9280).
coord(361,29640,9200).
coord(362,29640,9200).
coord(363,29640,9200).
coord(364,29640,9200).
coord(365,29210,9280).
coord(366,29210,9280).
coord(367,29640,9200).
coord(368,29210,9280).
coord(369,29450,8740).
coord(370,29640,9200).
coord(371,29640,9200).
coord(372,29640,9200).
coord(373,29640,9200).
coord(374,29640,9200).
coord(375,29640,9200).
coord(376,29100,9720).
coord(377,29210,9280).
coord(378,29100,9720).
coord(379,29650,8850).
coord(380,29210,9280).
coord(381,29640,9200).
coord(382,29640,9200).
coord(383,29450,8740).
coord(384,29100,9720).
coord(385,29660,8780).
coord(386,29210,9280).
coord(387,29210,9280).
coord(388,29450,8740).
coord(389,29640,9200).
coord(390,29140,9630).
coord(391,29210,9280).
coord(392,29100,9720).
coord(393,29210,9280).
coord(394,29210,9280).
coord(395,29450,8740).
coord(396,29450,8740).
coord(397,29650,8890).
coord(398,29210,9280).
coord(399,29640,9200).
coord(400,29640,9200).
coord(401,29640,9200).
coord(402,29210,9280).
coord(403,29640,9200).
coord(404,29640,9200).
coord(405,29640,9200).
coord(406,29210,9280).
coord(407,29640,9200).
coord(408,29210,9280).
coord(409,29210,9280).
coord(410,29210,9280).
coord(411,29210,9280).
coord(412,29030,9060).
coord(413,29640,9200).
coord(414,29210,9280).
coord(415,29210,9280).
coord(416,29640,9200).
coord(417,29210,9280).
coord(418,29450,8740).
coord(419,29640,9200).
coord(420,29210,9280).
coord(421,29640,9200).
coord(422,29210,9280).
coord(423,29640,9200).
coord(424,29640,9200).
coord(425,29640,9200).
coord(426,29640,9200).
coord(427,29450,8740).
coord(428,29450,8740).
coord(429,29210,9280).
coord(430,29640,9200).
coord(431,29640,9200).
coord(432,29480,9340).
coord(433,29640,9200).
coord(434,29210,9280).
coord(435,29640,9200).
coord(436,29210,9280).
coord(437,29450,8740).
coord(438,29640,9200).
coord(439,29210,9280).
coord(440,29640,9200).
coord(441,29450,8740).
coord(442,29450,8740).
coord(443,29210,9280).
coord(444,29100,9720).
coord(445,29210,9280).
coord(446,29210,9280).
coord(447,29640,9200).
coord(448,29210,9280).
coord(449,29100,9720).
coord(450,29640,9200).
coord(451,29640,9200).
coord(452,29640,9200).
coord(453,29640,9200).
coord(454,29210,9280).
coord(455,29450,8740).
coord(456,29450,8740).
coord(457,29210,9280).
coord(458,29640,9200).
coord(459,29640,9200).
coord(460,29210,9280).
coord(461,29640,9200).
coord(462,29100,9720).
coord(463,29640,9200).
coord(464,29450,8760).
coord(465,29640,9200).
coord(466,29640,9200).
coord(467,29450,8740).
coord(468,29210,9280).
coord(469,29100,9720).
coord(470,29450,8740).
coord(471,29640,9200).
coord(472,29640,9200).
coord(473,29640,9200).
coord(474,29210,9280).
coord(475,29640,9200).
coord(476,29640,9200).
coord(477,29640,9200).
coord(478,29210,9280).
coord(479,29640,9200).
coord(480,29640,9200).
coord(481,29640,9200).
coord(482,29640,9200).
coord(483,29100,9720).
coord(484,29210,9280).
coord(485,29640,9200).
coord(486,29100,9720).

length(L,N) :-
        length(L,0,N) .

length([],N,N).
length([_1|L],N0,N) :-
        N1 is N0+1,
        length(L,N1,N) .

max_tech(118).

max_job(250).

max_length(3).

max_tour_length(6).

:- entry allocate.

allocate :-
        initialise(T1,T2,Long,Early,Last,AM,PM,AllDay),
        allocate_jobs(T1,'E',Early,ToursE,_UnallocE),
	allocate_jobs(ToursE,'1',AM,ToursAM,_UnallocAM) '&!'
        allocate_jobs(T2,'L',Last,ToursL,_UnallocL),
        allocate_jobs(ToursL,'2',PM,ToursPM,_UnallocPM),
        unify(ToursAM,ToursPM,Tours),
        allocate_jobs(Tours,long,Long,ToursLong,_UnallocLong),
        allocate_jobs(ToursLong,'5',AllDay,_All,_UnallocAD).
%         (
%           andprolog_rt_new:indep([[UnallocE,All],[UnallocAM,All],[UnallocL,All],[UnallocPM,All],[UnallocLong,All],[All,UnallocAD]]) ->
%              print_tours(All,_Result) '&!'
%              print_unalloc(UnallocE,UnallocL,UnallocAM,UnallocPM,UnallocLong,UnallocAD)
%         ;
%              print_tours(All,_Result),
%              print_unalloc(UnallocE,UnallocL,UnallocAM,UnallocPM,UnallocLong,UnallocAD)
%         ) .

initialise(T1,T2,Long,Early,Last,AM,PM,AllDay) :-
        get_started(JobSet,Techs),
	build(Techs,T1,T2) '&!'
        divide_jobs(JobSet,Long,Early,Last,AM,PM,AllDay).

build([],[],[]).
build([tour(Tix,[],AM,PM)|T],[tour(Tix,End1,End1,AM,PM)|T1],[tour(Tix,End2,End2,AM,PM)|T2]) :-
        build(T,T1,T2) .

unify([],[],[]).
unify([tour(Tix,TourE,EndE,AM,_1)|R1],[tour(Tix,TourL,EndL,_2,PM)|R2],[tour(Tix,TourE,_3,AM,PM)|Tours]) :-
        EndL=[],
        EndE=TourL,
        unify(R1,R2,Tours) .

break_in(11,30) :-
        !,
        break_marker .
break_in(_1,_2).

break_marker.

allocate_jobs([],_1,Unalloc,[],Unalloc) :- !.
allocate_jobs(Tours,_1,[],Tours,[]) :- !.
allocate_jobs([tour(Tix,TourSoFar,End,AMTime,PMTime)|Rest],Type,[J|Js],[tour(Tix,NewTour,End,NAM,NPM)|NTours],Unalloc) :-
        'allocate_jobs/5/3/$disj/1'(Type,Flag),
        space_left(Flag,TourSoFar),
        !,
        (
          ground([Tix,J]) ->
             break_in(Tix,J) '&!'
             get_suitable_jobs([J|Js],Tix,1000-0,[]-0,Selected,RestJobs)
        ;
             break_in(Tix,J),
             get_suitable_jobs([J|Js],Tix,1000-0,[]-0,Selected,RestJobs)
        ),
        add_jobs(Type,Selected,tour(Tix,TourSoFar,End,AMTime,PMTime),tour(Tix,NewTour,End,NAM,NPM),NotAlloc),
        append(NotAlloc,RestJobs,NRestJobs),
        allocate_jobs(Rest,Type,NRestJobs,NTours,Unalloc) .
allocate_jobs([tour(Tix,Tour,End,AMTime,PMTime)|Rest],Type,[J|Js],[tour(Tix,Tour,End,AMTime,PMTime)|NTours],Unalloc) :-
        allocate_jobs(Rest,Type,[J|Js],NTours,Unalloc) .

'allocate_jobs/5/3/$disj/1'(Type,Flag) :-
        'allocate_jobs/5/3/$disj/1/2/1/$disj/1'(Type),
        !,
        Flag=full .
'allocate_jobs/5/3/$disj/1'(_Type,Flag) :-
        Flag=half .

'allocate_jobs/5/3/$disj/1/2/1/$disj/1'(Type) :-
        Type=='5' .
'allocate_jobs/5/3/$disj/1/2/1/$disj/1'(Type) :-
        Type==long .

get_suitable_jobs([],_1,_2,Jobs1-_3,Jobs,[]) :-
        reverse(Jobs1,[],Jobs) .
get_suitable_jobs([J|Js],Tix,DJ,AuxL,Jobs,RestJobs) :-
        check_skills(Tix,J),
        !,
        tech_travel(Tix,J,TTime),
        check_ttime(TTime-J,DJ,AuxL,NDJ,NewAuxL,RestJobs,Others),
        get_suitable_jobs(Js,Tix,NDJ,NewAuxL,Jobs,Others) .
get_suitable_jobs([J|Js],Tix,DJ,AuxL,Jobs,[J|RestJobs]) :-
        get_suitable_jobs(Js,Tix,DJ,AuxL,Jobs,RestJobs) .

check_ttime(TTime-J,Distance-Jix,AuxL,NDJ,NewAuxL,RestJobs,Others) :-
        TTime<Distance,
        !,
        max_length(Len),
        check_len(TTime-J,Distance-Jix,AuxL,Len,NDJ,NewAuxL,Worst),
        check_var(Worst,RestJobs,Others) .
check_ttime(_1-J,DJ,AuxL,DJ,AuxL,[J|Others],Others).

check_len(TTJ,DJ,Aux-N,Len,DJ,NewAux-NewN,_1) :-
        N<Len,
        !,
        insert_back(Aux,TTJ,NewAux),
        NewN is N+1 .
check_len(TTJ,_1,[_3-Worst|T]-N,_2,NewD-NewJ,NewAux-N,Worst) :-
        insert_back(T,TTJ,NewAux),
        NewAux=[NewD-NewJ|_4] .

check_var(Worst,RestJobs,RestJobs) :-
        var(Worst),
        ! .
check_var(J,[J|RestJobs],RestJobs).

add_jobs(_1,[],Tour,Tour,[]) :- !.
add_jobs('E',[D-J|Remainder],tour(Tix,TourSoFar,End,AMTime,PMTime),tour(Tix,[J|TourSoFar],End,NAM,PMTime),NotAlloc) :-
        !,
        job(J,'E',Duration,_1),
        NAM is AMTime-(D+Duration),
        remove_distance(Remainder,NotAlloc) .
add_jobs('L',[D-J|Remainder],tour(Tix,TourSoFar,End,AMTime,PMTime),tour(Tix,[J|TourSoFar],End,AMTime,NPM),NotAlloc) :-
        !,
        job(J,'L',Duration,_1),
        NPM is PMTime-(D+Duration),
        remove_distance(Remainder,NotAlloc) .
add_jobs('1',[D-J|Rest],tour(Tix,TourSoFar,End,AMTime,PMTime),tour(Tix,NewTour,End,NAM,PMTime),NotAlloc) :-
        !,
        job(J,'1',Duration,_1),
        NextAM is AMTime-(D+Duration),
        'add_jobs/5/4/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,End,AMTime,PMTime,NewTour,NAM,NextAM) .
add_jobs('2',[D-J|Rest],tour(Tix,TourSoFar,End,AMTime,PMTime),tour(Tix,NewTour,End,AMTime,NPM),NotAlloc) :-
        !,
        job(J,'2',Duration,_1),
        NextPM is PMTime-(D+Duration),
        'add_jobs/5/5/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,End,AMTime,PMTime,NewTour,NPM,NextPM) .
add_jobs('5',[D-J|Rest],tour(Tix,TourSoFar,_1,AM,PM),tour(Tix,NewTour,_2,0,PMNew),NotAlloc) :-
        !,
        job(J,'5',Duration,_3),
        TimeLeft is AM+PM,
        PMNext is TimeLeft-(D+Duration),
        'add_jobs/5/6/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,NewTour,PMNew,TimeLeft,PMNext) .
add_jobs(long,[D-J|Rest],tour(Tix,TourSoFar,_1,AM,PM),tour(Tix,[J|TourSoFar],_2,0,PMNew),NotAlloc) :-
        job(J,T,Duration,_3),
	'add_jobs/5/7/$disj/1'(T),
	space_left(full,TourSoFar),
        AM>=240,
        PMNew is AM+PM-(D+Duration),
        PMNew>=0,
        'add_jobs/5/7/$disj/2'(TourSoFar,T),
        !,
        remove_distance(Rest,NotAlloc) .
add_jobs(long,[D-J|Rest],tour(Tix,TourSoFar,_1,AM,PM),tour(Tix,[J|TourSoFar],_2,AM,PMNew),NotAlloc) :-
        job(J,T,Duration,_3),
	'add_jobs/5/8/$disj/1'(T),
	space_left(full,TourSoFar),
        AM>0,
        PM>=240,
        PMNew is PM-(D+Duration),
        'add_jobs/5/8/$disj/2'(TourSoFar,T),
        !,
        remove_distance(Rest,NotAlloc) .
add_jobs(long,[_1-J|Rest],Tour,TourNew,NotAlloc) :-
        add_jobs(long,Rest,Tour,TourNew,NotA),
        NotAlloc=[J|NotA] .

'add_jobs/5/4/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,End,_AMTime,PMTime,NewTour,NAM,NextAM) :-
        NextAM>0,
        space_left(half,TourSoFar),
        !,
        add_jobs('1',Rest,tour(Tix,[J|TourSoFar],End,NextAM,PMTime),tour(Tix,NewTour,End,NAM,PMTime),NotAlloc) .
'add_jobs/5/4/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,End,AMTime,PMTime,NewTour,NAM,_NextAM) :-
        add_jobs('1',Rest,tour(Tix,TourSoFar,End,AMTime,PMTime),tour(Tix,NewTour,End,NAM,PMTime),NotA),
        NotAlloc=[J|NotA] .

'add_jobs/5/5/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,End,AMTime,_PMTime,NewTour,NPM,NextPM) :-
        NextPM>0,
        space_left(half,TourSoFar),
        !,
        add_jobs('2',Rest,tour(Tix,[J|TourSoFar],End,AMTime,NextPM),tour(Tix,NewTour,End,AMTime,NPM),NotAlloc) .
'add_jobs/5/5/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,End,AMTime,PMTime,NewTour,NPM,_NextPM) :-
        add_jobs('2',Rest,tour(Tix,TourSoFar,End,AMTime,PMTime),tour(Tix,NewTour,End,AMTime,NPM),NotA),
        NotAlloc=[J|NotA] .

'add_jobs/5/6/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,NewTour,PMNew,_TimeLeft,PMNext) :-
        PMNext>0,
        space_left(full,TourSoFar),
        !,
        add_jobs('5',Rest,tour(Tix,[J|TourSoFar],_4,0,PMNext),tour(Tix,NewTour,_5,0,PMNew),NotAlloc) .
'add_jobs/5/6/$disj/1'(NotAlloc,Rest,J,Tix,TourSoFar,NewTour,PMNew,TimeLeft,_PMNext) :-
        add_jobs('5',Rest,tour(Tix,TourSoFar,_6,0,TimeLeft),tour(Tix,NewTour,_7,0,PMNew),NotA),
        NotAlloc=[J|NotA] .

'add_jobs/5/7/$disj/1'(T) :-
        T=='1' .
'add_jobs/5/7/$disj/1'(T) :-
        T=='E' .

'add_jobs/5/7/$disj/2'(TourSoFar,T) :-
        T=='E',
        !,
        no_LE_jobs(TourSoFar,'E') .
'add_jobs/5/7/$disj/2'(_TourSoFar,_T).

'add_jobs/5/8/$disj/1'(T) :-
        T=='2' .
'add_jobs/5/8/$disj/1'(T) :-
        T=='L' .

'add_jobs/5/8/$disj/2'(TourSoFar,T) :-
        T=='L',
        !,
        no_LE_jobs(TourSoFar,'L') .
'add_jobs/5/8/$disj/2'(_TourSoFar,_T).

insert_back([],D-J,[D-J]).
insert_back([D1-J1|Rest],D-J,New) :-
        D>=D1,
        !,
        New=[D-J,D1-J1|Rest] .
insert_back([D1-J1|Rest],D-J,New) :-
        D<D1,
        New=[D1-J1|Rest2],
        insert_back(Rest,D-J,Rest2) .

remove_distance([],[]).
remove_distance([_1-J|Rest],[J|Rest2]) :-
        remove_distance(Rest,Rest2) .

space_left(Flag,Tour) :-
        my_length(Tour,0,TL),
        max_tour_length(XL),
        'space_left/2/1/$disj/1'(Flag,XL,L),
        TL<L .

'space_left/2/1/$disj/1'(Flag,XL,L) :-
        Flag==half,
        !,
        L is XL//2 .
'space_left/2/1/$disj/1'(_Flag,XL,L) :-
        L=XL .

reverse([],L,L).
reverse([H|T],L2,L3) :-
        reverse(T,[H|L2],L3) .

divide_jobs([],[],[],[],[],[],[]).
divide_jobs([Jix|Jobs],Long,Early,Last,AM,PM,AllDay) :-
        job(Jix,Type,Duration,_1),
        find_bucket(Type,[Jix|Jobs],Duration,Long,Early,Last,AM,PM,AllDay) .

find_bucket(Type,[Jix|Jobs],Duration,Long,Early,Last,AM,PM,AllDay) :-
        Duration>240,
        Type\=='5',
        !,
        divide_jobs(Jobs,Long1,Early,Last,AM,PM,AllDay),
        Long=[Jix|Long1] .
find_bucket('E',[Jix|Jobs],Duration,Long,Early,Last,AM,PM,AllDay) :-
        Duration=<240,
        !,
        divide_jobs(Jobs,Long,Early1,Last,AM,PM,AllDay),
        Early=[Jix|Early1] .
find_bucket('L',[Jix|Jobs],Duration,Long,Early,Last,AM,PM,AllDay) :-
        Duration=<240,
        !,
        divide_jobs(Jobs,Long,Early,Last1,AM,PM,AllDay),
        Last=[Jix|Last1] .
find_bucket('1',[Jix|Jobs],Duration,Long,Early,Last,AM,PM,AllDay) :-
        Duration=<240,
        !,
        divide_jobs(Jobs,Long,Early,Last,AM1,PM,AllDay),
        AM=[Jix|AM1] .
find_bucket('2',[Jix|Jobs],Duration,Long,Early,Last,AM,PM,AllDay) :-
        Duration=<240,
        !,
        divide_jobs(Jobs,Long,Early,Last,AM,PM1,AllDay),
        PM=[Jix|PM1] .
find_bucket('5',[Jix|Jobs],_1,Long,Early,Last,AM,PM,AllDay) :-
        !,
        divide_jobs(Jobs,Long,Early,Last,AM,PM,AllDay1),
        AllDay=[Jix|AllDay1] .

get_started(Jobs,Tours) :-
        max_job(MaxJob),
        get_jobs(1,MaxJob,Jobs),
        max_tech(MaxTech),
        get_tours(1,MaxTech,Tours) .

get_jobs(X,X,[X]) :- !.
get_jobs(Count,Max,[Count|Jobs]) :-
        NewCount is Count+1,
        get_jobs(NewCount,Max,Jobs) .

get_tours(Count,Count,[tour(Count,[],AMTime,PMTime)]) :-
        !,
        tech(Count,StartTime,EndTime,_1,_2),
        AMTime is 720-StartTime,
        PMTime is EndTime-720 .
get_tours(Count,Max,[tour(Count,[],AMTime,PMTime)|Tours]) :-
        Count=\=Max,
        NewCount is Count+1,
        tech(Count,StartTime,EndTime,_1,_2),
        AMTime is 720-StartTime,
        PMTime is EndTime-720,
        get_tours(NewCount,Max,Tours) .

tech_travel(Tix,Jix,Time) :-
	base(Tix,X1,Y1),
	coord(Jix,X2,Y2),
        XDelta0 is X1-X2,
        YDelta0 is Y1-Y2,
        abs(XDelta0,XDelta),
        abs(YDelta0,YDelta),
        'tech_travel/3/1/$disj/1'(Time,XDelta,YDelta) .

'tech_travel/3/1/$disj/1'(Time,XDelta,YDelta) :-
        XDelta>YDelta,
        !,
        Time is(XDelta+YDelta//2)//8 .
'tech_travel/3/1/$disj/1'(Time,XDelta,YDelta) :-
        Time is(YDelta+XDelta//2)//8 .

abs(Number,Absolute) :-
        Number>=0,
        !,
        Absolute=Number .
abs(Number,Absolute) :-
        Absolute is-Number .

% print_tours(Tours,_Result) :-
%         remove_times(Tours,_Res1).
%         (
%           ground([Result]) ->
%              extend_all(Res1,Result) '&!'
%              write(Result)
%         ;
%              extend_all(Res1,Result),
%              write(Result)
%         ),
%         nl .

pp([]) :-
        nl,
        nl .
pp([H|T]) :-
        H=tour(_1,[]),
        !,
	(dynamic):assertz(H),
	 pp(T).
pp([H|T]) :-
	(dynamic):assertz(H),
	 pp(T).

% print_unalloc(UnallocE,UnallocL,UnallocAM,UnallocPM,UnallocLong,UnallocAD) :-
%         (
%           andprolog_rt_new:indep([[UnallocE,UnallocL],[UnallocE,UnallocAM],[UnallocE,UnallocPM],[UnallocE,UnallocLong],[UnallocE,UnallocAD],[UnallocL,UnallocAM],[UnallocL,UnallocPM],[UnallocL,UnallocLong],[UnallocL,UnallocAD],[UnallocAM,UnallocPM],[UnallocAM,UnallocLong],[UnallocAM,UnallocAD],[UnallocPM,UnallocLong],[UnallocPM,UnallocAD],[UnallocLong,UnallocAD]]) ->
%              length(UnallocE,_L1) '&!'
%              length(UnallocL,_L2) '&!'
%              length(UnallocAM,_L3) '&!'
%              length(UnallocPM,_L4) '&!'
%              length(UnallocLong,_L5) '&!'
%              length(UnallocAD,_L6)
%         ;
%              length(UnallocE,_L1),
%              length(UnallocL,_L2),
%              length(UnallocAM,_L3),
%              length(UnallocPM,_L4),
%              length(UnallocLong,_L5),
%              length(UnallocAD,_L6)
%         ),
%         L is L1+L2+L3+L4+L5+L6,
%         format('~d jobs could not be allocated: ~n~w~n~w~n~w~n~w~n~w~n~w~n',[L,UnallocE,UnallocL,UnallocAM,UnallocPM,UnallocLong,UnallocAD]) .

remove_times([],[]).
remove_times([tour(Tix,Tour,_1,_2,_3)|Rest],[tour(Tix,Tour)|NewRest]) :-
        remove_times(Rest,NewRest) .

extend_all([],[]).
extend_all([tour(Tix,Tour)|Rest],[NewTour|Tours]) :-
             'extend_all/2/2/$disj/1'(Tix,Tour,NewTour) '&!'
             extend_all(Rest,Tours).

'extend_all/2/2/$disj/1'(Tix,Tour,NewTour) :-
        Tour==[],
        !,
        NewTour=tour(Tix,Tour) .
'extend_all/2/2/$disj/1'(Tix,Tour,NewTour) :-
        stores_and_start(tour(Tix,Tour),NewTour) .

stores_and_start(tour(Tix,Tour),tour(Tix,NewTour)) :-
	stores_point(Tix,Stores),
	start_point(Tix,Start),
        append(Tour,[Stores,Start],NewTour) .

stores_point(Tix,Stores) :-
        Stores is 250+Tix .

start_point(Tix,Start) :-
        Start is 368+Tix .

no_LE_jobs([],_1).
no_LE_jobs([J|_Js],Type) :-
        job(J,Type,_1,_2),
        !,
        fail .
no_LE_jobs([_1|Js],Type) :-
        no_LE_jobs(Js,Type) .

my_length(X,L,L) :-
        var(X),
        ! .
my_length(X,L,L) :-
        X==[],
        ! .
my_length([_H|T],Count,L) :-
        NC is Count+1,
        my_length(T,NC,L) .

check_skills(Tix,J) :-
        job_skills(J,L),
        memberchk(Tix,L) .

memberchk(X,[X|_1]) :- !.
memberchk(X,[_1|L]) :-
        memberchk(X,L) .

append([],L,L).
append([H|T],L2,[H|L3]) :-
        append(T,L2,L3) .

% format(String,Variables) :-
%         name(String,ASCII),
%         look_at_string(ASCII,Variables,[]) .

look_at_string([],[],_Sofar) :-
        !,true.
%%        write_all(Sofar) .
look_at_string("~n"||Rest,Vars,_Sofar) :-
        !,
%         write_all(Sofar),
%         nl,
        look_at_string(Rest,Vars,[]) .
look_at_string("~"||[X|Rest],[_V1|Vs],_Sofar) :-
        X\==110,
        !,
%         (
%           andprolog_rt_new:indep([[Sofar,Rest],[Sofar,V1],[Sofar,Vs],[Rest,V1],[V1,Vs]]) ->
%              write_all(Sofar) '&!'
%              write(' ') '&!'
%              write(V1) '&!'
%              write(' ') '&!'
%              look_at_string(Rest,Vs,[])
%         ;
%              write_all(Sofar),
%              write(' '),
%              write(V1),
%              write(' '),
             look_at_string(Rest,Vs,[]).
%         ) .
look_at_string([C|Rest],Vars,Sofar) :-
        C\==126,
        !,
        look_at_string(Rest,Vars,[C|Sofar]) .

% write_all([]).
% write_all(List) :-
%         List\==[],
%         reverse(List,[],String),
%         name(Atom,String),
%         write(Atom) .

:- redefining(length/2).

:- redefining(format/2).

:- redefining(reverse/3).

:- redefining(append/3).


