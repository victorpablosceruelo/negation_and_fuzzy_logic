# -*- mode: sh; -*-
# --------------------------------------------------------------------
# Warning: this file has been edited automatically during installation
# This file is meant for inclusion in user initialization scripts
# --------------------------------------------------------------------
#
# Setting paths for the executables:
#

# if ( ${?CIAOBINDIR} != 0 ) then
#     echo "{WARNING: redefining CIAOBINDIR environment variable}"
# # exit 1
# endif

# Used to see if we are using this script
setenv CIAOSCRIPT yes

<v>ConfigOptimizingCompiler</v>

setenv CIAOBINDIR <v>CiaoBinDir</v>

if ( ${?PATH} == 0 ) then
    setenv PATH ${CIAOBINDIR}
else
    setenv PATH ${CIAOBINDIR}:`echo ${PATH}|sed -e s:'\:'${CIAOBINDIR}::g`
#         switch (${PATH})
# 	case ${CIAOBINDIR}:*:      # it is first one
# 	     breaksw
# 	case *:${CIAOBINDIR}:      # it is last one
# 	     breaksw
# 	case *:${CIAOBINDIR}:*:    # it is in the middle
# 	     breaksw
# 	default:
# 	     setenv PATH ${CIAOBINDIR}:${PATH}
# 	     breaksw
# 	endsw
endif
#
# Setting engine related paths: 
# 
# Setting this variable allows you to run the same Ciao executables in
# different architectures, provided you have compiled and installed
# the corresponding engine (and libraries, if the executable is not
# static and/or .so libraries are used).
#
if ( ${?CIAOARCH} == 0 ) then
   setenv CIAOARCH `ciao_get_arch`
endif
#
# This is just to be able older to run versions of Ciao which looked
# at ARCH instead of CIAOARCH:
#if ( ${?ARCH} == 0 ) then
#   setenv ARCH `ciao_get_arch`
#endif
#
#
# Documentation-related paths:
#
# Setting this variable makes the manuals accessible to emacs (via M-x
# info), the GNU info standalone manuals browser (type info at the
# command line), the unix man command, etc.
# 
setenv CIAODOCDIR <v>CiaoDocDir</v>
# Set MANPATH (checking that we do not add it twice)
# The colon at the end is needed so that default paths are found!
if ( ${?MANPATH} == 0 ) then
        setenv MANPATH ${CIAODOCDIR}:
else
	switch (${MANPATH})
	case ${CIAODOCDIR}:*:      # it is first one
	     breaksw
	case *:${CIAODOCDIR}:      # it is last one
	     breaksw
	case *:${CIAODOCDIR}:*:    # it is in the middle
	     breaksw
	default:
	     setenv MANPATH ${CIAODOCDIR}:${MANPATH}
	     breaksw
	endsw
endif
# Set INFOPATH (checking that we do not add it twice)
if ( ${?INFOPATH} == 0 ) then
        setenv INFOPATH ${CIAODOCDIR}:/usr/info:/usr/share/info:/usr/local/info
else
	switch (${INFOPATH})
	case ${CIAODOCDIR}:*:      # it is first one
	     breaksw
	case *:${CIAODOCDIR}:      # it is last one
	     breaksw
	case *:${CIAODOCDIR}:*:    # it is in the middle
	     breaksw
	default:
	     setenv INFOPATH ${INFOPATH}:${CIAODOCDIR}
	     breaksw
	endsw
endif

# 
# --------------------------------------------------------------------
# TODO: (Obsolete)
# 
# Note for the Ciao developers: the following settings may be useful
# if you want to use the version currently in the development
# directory. Please refer to the INSTALLATION file.
# 
# setenv CIAOHOME /home/clip/Systems/ciao
# setenv CIAOLIB ${CIAOHOME}
# setenv CIAOENGINE ${CIAOHOME}/../build/objs/${CIAOARCH}/ciaoengine
# setenv PATH ${CIAOHOME}/ciaoc:${CIAOHOME}/shell:${PATH}
# 
# setenv PATH /home/clip/Systems/ciaopp/src:${PATH}
# --------------------------------------------------------------------

