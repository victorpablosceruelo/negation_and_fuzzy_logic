#
# Makefile for the ProTcl. It has been automatically generated by autoconf
# from Makefile.in.
#
# sccsid("@(#)Makefile.in	1.17          96/03/25").
#

#
# Some of the following paths might have to be modified
#
#
PROLOG_INCLUDE	= @PROLOG_INCLUDE@

# In Eclipse, it is possible to share the same installation for
# several architectures and so machine-dependent files are moved
# to the corresponding directory. For other Prologs, this is a no-op.
# If unknown, replace it by the string you get with get_flag(hostarch, ARCH)
ARCH		= @ARCH@

# Some machines are sensitive to cc/gcc combination, so it is better
# to use the same C compiler to install Prolog and ProTcl
CC = @CC@
SHARED_CC = @SHARED_CC@

##################################################
#
# The stuff below does not have to be modified, unless configure failed
#

TCL_INCLUDE = @tcl_include@
TK_INCLUDE = @tk_include@
TCL_LIBRARY=@tcl_library@
TK_LIBRARY=@tk_library@

# X include directory
X_INCLUDE = @X_INCLUDE@

# X library directory
XLIBSW = @XLIBSW@

# The ProTcl source directory
PROTCL_SOURCE = `pwd`

OBJECTS = @OBJECTS@
PROLOG = @PROLOG@
TOP_FILE = @TOP_FILE@
RANLIB = @RANLIB@
TK_O = @TK_O@
TK_SO = @TK_SO@
# The following is for extension loading with shared objects
USER_OBJECTS =

##############################################################################

LDFLAGS = @LDFLAGS@
CFLAGS = @CFLAGS@ -I$(TCL_INCLUDE) -I$(TK_INCLUDE) $(X_INCLUDE) -D$(PROLOG) -I$(PROLOG_INCLUDE)

.SUFFIXES:      $(SUFFIXES) .so

#
# Install ProTcl for ECLiPSe. In this case lib_graphic must be in ../..
#
install:	$(TK_O) libinit.a tk.pl dirs.pl
		chmod 644 $(OBJECTS) $(TK_SO) libinit.a *.pl
		@for i in ../../lib_graphic/$(ARCH) ../../lib_graphic/tk ; \
		    do \
		    if [ ! -d $$i ] ; then \
			echo "Making directory $$i"; \
			mkdir $$i; \
			chmod 755 $$i; \
			else true; \
			fi; \
		    done;
		/bin/rm -rf ../../lib_graphic/tk/local
		/bin/mv -f dirs.pl $(OBJECTS) $(TK_SO) libinit.a ../../lib_graphic/$(ARCH)
		/bin/cp Makefile ../../lib_graphic/$(ARCH)
		/bin/cp tk.pl tcl.pl xlib.pl tr_xlib.pl tkext.pl tk_common.pl \
			../../lib_graphic/tk
		/bin/cp -r local doc README ../../lib_graphic/tk
		-chmod -R +w ../../lib_graphic/tk
		-chmod -R a+rX ../../lib_graphic/tk

#
# Install ProTcl as a standalone library, it can be anywhere
#
local:		$(TK_O) libinit.a dirs.pl tk.pl
		@MAKE_ARCH@
		chmod 644 tk.*o libinit.a tk.pl dirs.pl
		@MOVE_TO_ARCH@
		chmod -R a+r .


tk.so:		$(OBJECTS) libinit.a
		$(SHARED_CC) $(LDFLAGS) @SHARED_FLAG@ $(OBJECTS) -o $@ \
		    -L. -L$(TCL_LIBRARY) -L$(TK_LIBRARY) \
		    -linit -ltk4.0 -ltcl7.4 $(XLIBSW) -lm
				     
tkext.so:	$(OBJECTS)
		$(SHARED_CC) $(LDFLAGS) @SHARED_FLAG@ $(OBJECTS) -o $@ \
		    $(USER_IBJECTS) \
		    -L. -L$(TCL_LIBRARY) -L$(TK_LIBRARY) \
		    -ltk4.0 -ltcl7.4 $(XLIBSW) -lm
				     
tk.pl:		tk.o
		/bin/cp $(TOP_FILE) tk.pl

dirs.pl:
		echo "tcl_library('$(TCL_LIBRARY)')." > dirs.pl
		echo "tk_library('$(TK_LIBRARY)')." >> dirs.pl
		echo "protcl_source('$(PROTCL_SOURCE)')." >> dirs.pl
		echo "xlibsw('$(XLIBSW)')." >> dirs.pl
		echo "x_include('$(X_INCLUDE)')." >> dirs.pl
		echo "protcl_objects('$(OBJECTS)')." >> dirs.pl

libinit.a:	tkAppInit.o
		ar rcv ./libinit.a tkAppInit.o
		$(RANLIB) ./libinit.a

clean:
		/bin/rm *.o *.so
