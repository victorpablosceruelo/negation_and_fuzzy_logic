
bool_t bu1_atom(Argdecl, register tagged_t x0);
bool_t bu1_atomic(Argdecl, register tagged_t x0);
bool_t bu1_float(Argdecl, register tagged_t x0);
bool_t bu1_if(Argdecl, register tagged_t x0);
bool_t bu1_integer(Argdecl, register tagged_t x0);
bool_t bu1_nonvar(Argdecl, register tagged_t x0);
bool_t bu1_number(Argdecl, register tagged_t x0);
bool_t bu1_var(Argdecl, register tagged_t x0);
bool_t bu2_lexeq(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_lexge(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_lexgt(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_lexle(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_lexlt(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_lexne(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_numeq(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_numge(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_numgt(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_numle(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_numlt(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_numne(Argdecl, tagged_t x0, tagged_t x1);
bool_t bu2_univ(Argdecl, register tagged_t term, tagged_t list);
bool_t bu3_functor(Argdecl, register tagged_t term, register tagged_t name, register tagged_t arity);
tagged_t fu2_arg(Argdecl, register tagged_t number, register tagged_t complex);
tagged_t fu2_compare(Argdecl, tagged_t x1, tagged_t x2);
