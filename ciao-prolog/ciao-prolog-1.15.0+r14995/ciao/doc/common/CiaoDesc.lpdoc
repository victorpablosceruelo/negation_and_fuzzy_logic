
@bf{Ciao} is a @index{public domain}, @em{next generation}
multi-paradigm programming environment with a unique set of features:

@comment{
which supports the development and efficient compilation
of @em{logic programs}, @em{constraint logic programs} (CLP),
@em{functional logic programs}, and @em{object-oriented logic
programs}. @bf{Ciao} includes standard @bf{ISO-Prolog}
as a sublanguage and a program development environment similar to that
of traditional Prolog and CLP implementations. However, @bf{Ciao}
extends the Prolog language and improves on traditional Prolog
programming environments in a number of significant ways:
}

@begin{itemize} 

@item @bf{Ciao} offers a complete Prolog system, supporting @comment{full}
      @em{ISO-Prolog}, but its novel modular design allows both
      @em{restricting} and @em{extending} the language. As a result,
      it allows working with @em{fully declarative subsets} of Prolog
      and also to @em{extend} these subsets (or ISO-Prolog) both
      syntactically and semantically. Most importantly, these
      restrictions and extensions can be activated separately on each
      program module so that several extensions can coexist in the
      same application for different modules.

@item @bf{Ciao} also supports (through such extensions) programming with
      functions, higher-order (with predicate abstractions),
      constraints, and objects, as well as feature terms (records),
      persistence, several control rules (breadth-first search,
      iterative deepening, ...), concurrency (threads/engines), a good
      base for distributed execution (agents), and parallel
      execution. Libraries also support WWW programming, sockets,
      external interfaces (C, Java, TclTk, relational databases,
      etc.), etc.

@item @bf{Ciao} offers support for @em{programming in the large} with
      a robust module/object system, module-based separate/incremental
      compilation (automatically --no need for makefiles), an
      assertion language for declaring (@em{optional}) program
      properties (including types and modes, but also determinacy,
      non-failure, cost, etc.), automatic static inference and
      static/dynamic checking of such assertions, etc.

@item @bf{Ciao} also offers support for @em{programming in the small}
      producing small executables (including only those libraries
      actually used by the program) and support for writing scripts.

@item The @bf{Ciao} programming environment includes a classical
      top-level and a rich emacs interface with an embeddable
      source-level debugger and a number of execution visualization
      tools.

@item The @bf{Ciao} compiler (which can be run outside the top level
      shell) generates several forms of architecture-independent and
      stand-alone executables, which run with speed, efficiency, and
      executable size which are very competitive with other commercial
      and academic languages (including other Prolog/CLP systems).
      Library modules can be compiled into compact bytecode or C
      source files, and linked statically, dynamically, or autoloaded.

@item The novel modular design of @bf{Ciao} enables, in addition to modular
      program development, effective global program analysis and
      static debugging and optimization via source to source program
      transformation. These tasks are performed by the @bf{Ciao
      preprocessor} (@apl{ciaopp}, distributed separately).

@item The @bf{Ciao} programming environment also includes @apl{lpdoc},
      an automatic documentation generator for LP/CLP programs.  It
      processes source files adorned with (@bf{Ciao}) assertions and
      machine-readable comments and generates manuals in many formats
      including @tt{postscript}, @tt{pdf}, @tt{texinfo}, @tt{info},
      @tt{HTML}, @tt{man}, etc. , as well as on-line help, ascii
      @tt{README} files, entries for indices of manuals (@tt{info},
      WWW, ...), and maintains WWW distribution sites.

@end{itemize}

@bf{Ciao} is distributed under the @concept{GNU Library General Public
License (LGPL)}.

@comment{, version 2, as published by the Free Software Foundation,
Inc., 675 Mass Ave, Cambridge, MA 02139, USA.}

