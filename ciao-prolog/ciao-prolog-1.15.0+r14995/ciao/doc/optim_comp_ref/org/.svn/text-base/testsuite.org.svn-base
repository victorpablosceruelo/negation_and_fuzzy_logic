#+TITLE:     Testsuite
#+AUTHOR: Jose F. Morales
#+EMAIL:  jfmc@fdi.ucm.es
#+TEXT:      Description of the testsuite for Ciao/OptimComp
#+SETUPFILE: ../org-templates/level-0.org

* Summary of fully automated tests

   The directory =testsuite/= includes a collection of test cases and
   benchmarks for Ciao/OptimComp. Here is the list of tests automated
   triggered with the =ciaotool tests= command:

- =emucomp/= : contains the output of abstract machine generation and
  key engine parts.
- =tests/= : main collection of tests
- =multisystemtests/= : tests that can be run in several languages
  (currently, Mercury and Prolog)
- =shootout-c/= : ImProlog port of the Language Shoot-Out benchmarks

* Main collection of tests (under the =tests/= directory)

The =tests/= directory contains a directory per test. Each test
directory have a =PROPS= file that specifies the type of test.
The type can be one of:

- =runexec=: the program is a test case (create an executable and run
  it when executing the test cases)
- =checkexec=: create an executable and check that the compilation
  output does not change w.r.t. a previous version
- =checkmod=: create a module and check that the compilation output
  does not change w.r.t. a previous version

** TODO Some tests cases does not emit proper error message
   Sometimes it is necessary to look at the tests output to find out
   that there has been a problem.

** TODO Check that the posible values of =PROPS= are complete
** TODO The compilation output in =checkexec= only includes the bytecode
    That should change to include native code, etc. like it is done
    for =checkmod=.

Those benchmarks are invoked through the =ciaotool tests= command.
Other directories store the output of the tests (and some tools to
analyze the data):

** TODO Move the results analysis tools to 'ciaotool_modules'
** TODO Move the test results to other directory?

* Tests for automated generation of abstract machines

   Those are expensive tests that generates a large number of abstract
   machines (for experimental purposes):

- =sabsmach_min/= : reduced number of instructions
- =sabsmach_vers/= : combines several absmach options

* Other tests
  
  Those are other tests not fully automated:
  - =context/= : tests for context extensions.
  - =mutables/= : several implementations of mutable variables.
  - =ecrctest/= : ECRC benchmarks from Prolog Digest 1986.
  - =meta/= : benchmark for meta calls and hiord calls.

  Other tests are out of date or needs some extra work to be included:
  - =oo/=
  - =other/=
  - =unsorted/=

** TODO Automatize pending tests
** TODO Update or remove outdated tests
