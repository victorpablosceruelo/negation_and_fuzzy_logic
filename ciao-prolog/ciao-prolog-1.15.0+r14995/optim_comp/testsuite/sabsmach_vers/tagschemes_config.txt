% Configuration file for sabsmach-vers reports for tagschemes options

optmask([
        % tag bits (one of)
	halfwordtags,
	highbittags,
	lowbittags,
	splitbittags,
	% gc bits (one of)
	highbitgc,
	lowbitgc,
	extgc,
	% q tag bit (optional)
	qtag,
	% padding (optional)
	no_padding, % TODO: use!!
	% pointer (optional)
	pointer64,
	tagged64,
	% tag switch (optional) (tagswbit requires one of tagtests)
	tagswbit,
	% tag test (optional)
	tagtestmask, % TODO: use!!
	tagtestbit]).

% ho_description('options that affect the tag scheme (and addressable space)').
% optmask_ho([
% 	pointer64,
% 	tagged64,
% 	halfwordtags,
% 	extgc,
% 	qtag,
% 	highbittags,
% 	lowbittags,
% 	splitbittags,
% 	highbitgc,
% 	lowbitgc]).
%
% lo_description('options that affect the tag test and switch operations').
% optmask_lo([tagswbit,tagtestbit]).

ho_description('where are the bits in the tagged located and how is tag test and switch on tag implemented').
optmask_ho([
	highbittags,
	lowbittags,
	splitbittags,
	highbitgc,
	lowbitgc,
	tagswbit,
	tagtestbit
]).

ho_alias('h--H-wb', 'hH2').
ho_alias('h--H--b', 'hH1').
ho_alias('h--H---', 'hH0').
ho_alias('h---Lwb', 'hL2').
ho_alias('h---L-b', 'hL1').
ho_alias('h---L--', 'hL0').
ho_alias('h----wb', 'h2').
ho_alias('h-----b', 'h1').
ho_alias('h------', 'h0').
ho_alias('-l-H-wb', 'lH2').
ho_alias('-l-H--b', 'lH1').
ho_alias('-l-H---', 'lH0').
ho_alias('-l--Lwb', 'lL2').
ho_alias('-l--L-b', 'lL1').
ho_alias('-l--L--', 'lL0').
ho_alias('-l---wb', 'l2').
ho_alias('-l----b', 'l1').
ho_alias('-l-----', 'l0').
ho_alias('--s--wb', 's2').
ho_alias('--s---b', 's1').
ho_alias('--s----', 's0').
ho_alias('----Lwb', 'L2').
ho_alias('----L-b', 'L1').
ho_alias('----L--', 'L0').
ho_alias('-----wb', '2').
ho_alias('------b', '1').
ho_alias('-------', '0').

lo_description('how many bits are available for values and pointers in the tagged (how big is the address space)').
optmask_lo([
	pointer64,
	tagged64,
	halfwordtags,
	extgc,
	qtag
]).

lo_alias('----q', addr26).
lo_alias('-----', addr27).
lo_alias('---e-', addr29).
lo_alias('-T2--', addr30).
lo_alias('-T2e-', addr32).
lo_alias('PT---', addr59).
lo_alias('PT-e-', addr61).

def_opts([highbittags,lowbitgc,qtag,tagswbit,tagtestbit]).

optbit(halfwordtags,1).
optbit(highbittags,2).
optbit(lowbittags,4).
optbit(splitbittags,8).
optbit(highbitgc,16).
optbit(lowbitgc,32).
optbit(extgc,64).
optbit(qtag,128).
optbit(no_padding,256).
optbit(pointer64,512).
optbit(tagged64,1024).
optbit(tagswbit,2048).
optbit(tagtestmask,4096).
optbit(tagtestbit,8192).

optcode(halfwordtags,0'2).
optcode(highbittags,0'h).
optcode(lowbittags,0'l).
optcode(splitbittags,0's).
optcode(highbitgc,0'H).
optcode(lowbitgc,0'L).
optcode(extgc,0'e).
optcode(qtag,0'q).
optcode(no_padding,0'p).
optcode(pointer64,0'P).
optcode(tagged64,0'T).
optcode(tagswbit,0'w).
optcode(tagtestmask,0'm).
optcode(tagtestbit,0'b).

xrange(time_without_gc, 0.35, 1.8).
xrange(time_with_gc, 0.35, 1.8).
xrange(gc_time, 0.0, 2.0).

