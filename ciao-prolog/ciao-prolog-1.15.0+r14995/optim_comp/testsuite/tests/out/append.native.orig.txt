#include <engine/basiccontrol.native.h>
definition_t *append__0;
try_node_t *append__1;
tagged_t append__2;
liveinfo_t append__3;
definition_t *append__4;
bcp_t append_3aap_230__n3_l;
bcp_t append_3aap_233__n3_l;
bcp_t append_3aap_232__n3_l;
definition_t *append__5;
bcp_t append_3aap_234__n3_l;
try_node_t *append__6;
bcp_t append_3aap__n3_l;
definition_t *append__7;
definition_t *append__8;
definition_t *append__9;
bcp_t append_3aap_238__n3_l;
try_node_t *append__10;
bcp_t append_3aap_237__n3_l;
definition_t *append__11;
bcp_t append_3aag_230__n3_l;
tagged_t append__12;
bcp_t append_3aag_232__n3_l;
bcp_t append_3aag_233__n3_l;
definition_t *append__13;
bcp_t append_3aag_234__n3_l;
try_node_t *append__14;
bcp_t append_3aag__n3_l;
definition_t *append__15;
definition_t *append__16;
definition_t *append__17;
bcp_t append_3aag_238__n3_l;
try_node_t *append__18;
bcp_t append_3aag_237__n3_l;
definition_t *append__19;
bcp_t append__20;
definition_t *append__21;
bcp_t append__22;
bcp_t append__23;
definition_t *append__24;
definition_t *append__25;
uint32_t fu1_add1(worker_t *, uint32_t);
bool_t cunify(worker_t *, uint32_t, uint32_t);
bool_t append_3ale_233__n2(worker_t *);
bool_t append_3adl_2312__n3(worker_t *);
bcp_t append_3aap__n3(worker_t *);
bcp_t append_3aap_230__n3(worker_t *);
bcp_t append_3aap_234__n3(worker_t *);
bcp_t append_3aap_236__n0(worker_t *);
bool_t append_3aap_231__n3(worker_t *);
bcp_t append_3aap_232__n3(worker_t *);
bcp_t append_3aap_233__n3(worker_t *);
bcp_t append_3aap_237__n3(worker_t *);
bcp_t append_3aap_238__n3(worker_t *);
bcp_t append_3aap_239__n0(worker_t *);
bcp_t append_3aag__n3(worker_t *);
bcp_t append_3aag_230__n3(worker_t *);
bcp_t append_3aag_234__n3(worker_t *);
bcp_t append_3aag_236__n0(worker_t *);
bool_t append_3aag_231__n3(worker_t *);
bcp_t append_3aag_232__n3(worker_t *);
bcp_t append_3aag_233__n3(worker_t *);
bcp_t append_3aag_237__n3(worker_t *);
bcp_t append_3aag_238__n3(worker_t *);
bcp_t append_3aag_239__n0(worker_t *);
void append_3agb__n1(worker_t *);
bcp_t append_3agg__n0(worker_t *);
bcp_t append_3agg_230__n0(worker_t *);
/* append:le#3/2 */
bool_t append_3ale_233__n2(worker_t *w) {
  if (TestEventOrHeapWarnOverflow(G->heap_top)) goto lab0; else goto lab1;
lab0:
  v__handle_event(w, 2);
  goto lab1;
lab1:
  X(2) = X(0);
  X(0) = MakeSmall(0);
  return append_3adl_2312__n3(w);
}
/* append:dl#12/3 */
bool_t append_3adl_2312__n3(worker_t *w) {
  uint32_t *var0;
  uint32_t var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  uint32_t var6;
  uint32_t var7;
  uint32_t var8;
  choice_t *var9;
  uint32_t *var10;
  uint32_t *var11;
  uint32_t var12;
  choice_t *var13;
  uint32_t var14;
  uint32_t var15;
  uint32_t var16;
  uint32_t var17;
  choice_t *var18;
  uint32_t var19;
  uint32_t var20;
  uint32_t var21;
  uint32_t var22;
  uint32_t var23;
  uint32_t var24;
  choice_t *var25;
  uint32_t *var26;
  uint32_t *var27;
  uint32_t var28;
  choice_t *var29;
  uint32_t var30;
  uint32_t var31;
  uint32_t var32;
  uint32_t var33;
  choice_t *var34;
  uint32_t var35;
  uint32_t var36;
  uint32_t var37;
  uint32_t var38;
  choice_t *var39;
  uint32_t *var40;
  uint32_t *var41;
  uint32_t var42;
  choice_t *var43;
  uint32_t var44;
  uint32_t var45;
  uint32_t var46;
  uint32_t var47;
  choice_t *var48;
  uint32_t var49;
  uint32_t var50;
  uint32_t var51;
lab0:
  if (TestEventOrHeapWarnOverflow(G->heap_top)) goto lab1; else goto lab2;
lab1:
  v__handle_event(w, 3);
  goto lab2;
lab2:
  DEREF(var1, X(0));
  var2 = var1;
  Sw_HVAorCVAorSVA_NVA(var2, goto lab6;, goto lab3;);
lab3:
  Sw_NUMorATM_LST_STR(var2, goto lab4;, goto lab86;, goto lab5;);
lab4:
  var3 = var2;
  goto lab49;
lab5:
  var3 = TaggedToHeadfunctor(var1);
  goto lab49;
lab6:
  /* append:dl#13/3 */
  w->previous_choice = w->choice;
  if (ValidLocalTop()) goto lab7; else goto lab8;
lab7:
  G->local_top = G->local_top;
  goto lab10;
lab8:
  G->local_top = w->choice->local_top;
  if (StackYounger(G->local_top, G->frame)) goto lab10; else goto lab9;
lab9:
  G->local_top = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab10;
lab10:
  G->next_alt = append__1;
  w->choice = ChoiceNext0(w->choice, append__1->arity);
  w->choice->flags = 0;
  w->choice->trail_top = G->trail_top;
  w->choice->local_top = G->local_top;
  w->choice->heap_top = G->heap_top;
  SetShallowTry();
  w->global_uncond = Tagp(0, w->choice->heap_top);
  w->local_uncond = Tagp(2, w->choice->local_top);
  w->choice = w->choice;
  TEST_CHOICE_OVERFLOW(w->choice, CHOICEPAD);
  DEREF(var4, X(1));
  DEREF(var5, X(0));
  var6 = var5;
  var7 = var4;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var6, goto lab11;, goto lab14;, goto lab15;);
lab11:
  if (CondHVA(var6)) goto lab12; else goto lab13;
lab12:
  trail_push_check(w, var6);
  goto lab13;
lab13:
  *TagpPtr(0, var6) = var7;
  goto lab18;
lab14:
  trail_push_check(w, var6);
  *TagpPtr(1, var6) = var7;
  IncWakeCount();
  goto lab18;
lab15:
  if (CondSVA(var6)) goto lab16; else goto lab17;
lab16:
  trail_push_check(w, var6);
  goto lab17;
lab17:
  *TagpPtr(2, var6) = var7;
  goto lab18;
lab18:
  DEREF(var8, X(2));
  if (IsVar(var8)) goto lab41; else goto lab19;
lab19:
  if (var8 == append__2) goto lab40; else goto lab20;
lab20:
  var9 = w->choice;
  ResetWakeCount();
  var10 = G->trail_top;
  var11 = var9->trail_top;
  if (TrailYounger(var10, var11)) goto lab21; else goto lab25;
lab21:
  TrailDec(var10);
  var12 = *var10;
  if (IsVar(var12)) goto lab23; else goto lab22;
lab22:
  G->trail_top = var10;
  goto lab26;
lab23:
  *TaggedToPointer(var12) = var12;
  if (TrailYounger(var10, var11)) goto lab21; else goto lab24;
lab24:
  G->trail_top = var10;
  goto lab25;
lab25:
  G->heap_top = var9->heap_top;
  goto lab26;
lab26:
  G->local_top = NULL;
  var13 = w->previous_choice;
  G->next_alt = var13->next_alt;
  w->global_uncond = Tagp(0, var13->heap_top);
  w->local_uncond = Tagp(2, var13->local_top);
  w->choice = var13;
  DEBUG_CUT(var13);
  ConcChptCleanUp(TopConcChptFun(), var13);
  SetDeep();
  DEREF(var14, X(2));
  if (IsVar(var14)) goto lab31; else goto lab27;
lab27:
  if (TagH3_Is6(var14)) goto lab29; else goto lab28;
lab28:
  return FALSE;
lab29:
  var0 = TagpPtr(6, var14);
  X(2) = var0[2 - 1];
  goto lab30;
lab30:
  w->liveinfo = append__3;
  X(0) = fu1_add1(w, X(0));
  goto lab0;
lab31:
  var15 = Tagp(6, G->heap_top);
  var0 = G->heap_top;
  G->heap_top = G->heap_top + 2;
  var16 = var14;
  var17 = var15;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var16, goto lab32;, goto lab35;, goto lab36;);
lab32:
  if (CondHVA(var16)) goto lab33; else goto lab34;
lab33:
  trail_push_check(w, var16);
  goto lab34;
lab34:
  *TagpPtr(0, var16) = var17;
  goto lab39;
lab35:
  trail_push_check(w, var16);
  *TagpPtr(1, var16) = var17;
  IncWakeCount();
  goto lab39;
lab36:
  if (CondSVA(var16)) goto lab37; else goto lab38;
lab37:
  trail_push_check(w, var16);
  goto lab38;
lab38:
  *TagpPtr(2, var16) = var17;
  goto lab39;
lab39:
  var0[1 - 1] = Tagp(0, &var0[1 - 1]);
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab30;
lab40:
  G->local_top = NULL;
  var18 = w->previous_choice;
  G->next_alt = var18->next_alt;
  w->global_uncond = Tagp(0, var18->heap_top);
  w->local_uncond = Tagp(2, var18->local_top);
  w->choice = var18;
  DEBUG_CUT(var18);
  ConcChptCleanUp(TopConcChptFun(), var18);
  SetDeep();
  G->local_top = NULL;
  return TRUE;
lab41:
  var19 = append__2;
  var20 = var8;
  var21 = var19;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var20, goto lab42;, goto lab45;, goto lab46;);
lab42:
  if (CondHVA(var20)) goto lab43; else goto lab44;
lab43:
  trail_push_check(w, var20);
  goto lab44;
lab44:
  *TagpPtr(0, var20) = var21;
  goto lab40;
lab45:
  trail_push_check(w, var20);
  *TagpPtr(1, var20) = var21;
  IncWakeCount();
  goto lab40;
lab46:
  if (CondSVA(var20)) goto lab47; else goto lab48;
lab47:
  trail_push_check(w, var20);
  goto lab48;
lab48:
  *TagpPtr(2, var20) = var21;
  goto lab40;
lab49:
  if (var3 == MakeSmall(4000000)) goto lab50; else goto lab86;
lab50:
  /* append:dl#14/3 */
  w->previous_choice = w->choice;
  if (ValidLocalTop()) goto lab51; else goto lab52;
lab51:
  G->local_top = G->local_top;
  goto lab54;
lab52:
  G->local_top = w->choice->local_top;
  if (StackYounger(G->local_top, G->frame)) goto lab54; else goto lab53;
lab53:
  G->local_top = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab54;
lab54:
  G->next_alt = append__1;
  w->choice = ChoiceNext0(w->choice, append__1->arity);
  w->choice->flags = 0;
  w->choice->trail_top = G->trail_top;
  w->choice->local_top = G->local_top;
  w->choice->heap_top = G->heap_top;
  SetShallowTry();
  w->global_uncond = Tagp(0, w->choice->heap_top);
  w->local_uncond = Tagp(2, w->choice->local_top);
  w->choice = w->choice;
  TEST_CHOICE_OVERFLOW(w->choice, CHOICEPAD);
  DEREF(var22, X(1));
  DEREF(var23, X(0));
  if (var23 == var22) goto lab55; else goto lab56;
lab55:
  DEREF(var24, X(2));
  if (IsVar(var24)) goto lab78; else goto lab76;
lab56:
  var25 = w->choice;
  ResetWakeCount();
  var26 = G->trail_top;
  var27 = var25->trail_top;
  if (TrailYounger(var26, var27)) goto lab57; else goto lab61;
lab57:
  TrailDec(var26);
  var28 = *var26;
  if (IsVar(var28)) goto lab59; else goto lab58;
lab58:
  G->trail_top = var26;
  goto lab62;
lab59:
  *TaggedToPointer(var28) = var28;
  if (TrailYounger(var26, var27)) goto lab57; else goto lab60;
lab60:
  G->trail_top = var26;
  goto lab61;
lab61:
  G->heap_top = var25->heap_top;
  goto lab62;
lab62:
  G->local_top = NULL;
  var29 = w->previous_choice;
  G->next_alt = var29->next_alt;
  w->global_uncond = Tagp(0, var29->heap_top);
  w->local_uncond = Tagp(2, var29->local_top);
  w->choice = var29;
  DEBUG_CUT(var29);
  ConcChptCleanUp(TopConcChptFun(), var29);
  SetDeep();
  DEREF(var30, X(2));
  if (IsVar(var30)) goto lab67; else goto lab63;
lab63:
  if (TagH3_Is6(var30)) goto lab65; else goto lab64;
lab64:
  return FALSE;
lab65:
  var0 = TagpPtr(6, var30);
  X(2) = var0[2 - 1];
  goto lab66;
lab66:
  w->liveinfo = append__3;
  X(0) = fu1_add1(w, X(0));
  goto lab0;
lab67:
  var31 = Tagp(6, G->heap_top);
  var0 = G->heap_top;
  G->heap_top = G->heap_top + 2;
  var32 = var30;
  var33 = var31;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var32, goto lab68;, goto lab71;, goto lab72;);
lab68:
  if (CondHVA(var32)) goto lab69; else goto lab70;
lab69:
  trail_push_check(w, var32);
  goto lab70;
lab70:
  *TagpPtr(0, var32) = var33;
  goto lab75;
lab71:
  trail_push_check(w, var32);
  *TagpPtr(1, var32) = var33;
  IncWakeCount();
  goto lab75;
lab72:
  if (CondSVA(var32)) goto lab73; else goto lab74;
lab73:
  trail_push_check(w, var32);
  goto lab74;
lab74:
  *TagpPtr(2, var32) = var33;
  goto lab75;
lab75:
  var0[1 - 1] = Tagp(0, &var0[1 - 1]);
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab66;
lab76:
  if (var24 == append__2) goto lab77; else goto lab56;
lab77:
  G->local_top = NULL;
  var34 = w->previous_choice;
  G->next_alt = var34->next_alt;
  w->global_uncond = Tagp(0, var34->heap_top);
  w->local_uncond = Tagp(2, var34->local_top);
  w->choice = var34;
  DEBUG_CUT(var34);
  ConcChptCleanUp(TopConcChptFun(), var34);
  SetDeep();
  G->local_top = NULL;
  return TRUE;
lab78:
  var35 = append__2;
  var36 = var24;
  var37 = var35;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var36, goto lab79;, goto lab82;, goto lab83;);
lab79:
  if (CondHVA(var36)) goto lab80; else goto lab81;
lab80:
  trail_push_check(w, var36);
  goto lab81;
lab81:
  *TagpPtr(0, var36) = var37;
  goto lab77;
lab82:
  trail_push_check(w, var36);
  *TagpPtr(1, var36) = var37;
  IncWakeCount();
  goto lab77;
lab83:
  if (CondSVA(var36)) goto lab84; else goto lab85;
lab84:
  trail_push_check(w, var36);
  goto lab85;
lab85:
  *TagpPtr(2, var36) = var37;
  goto lab77;
lab86:
  /* append:dl#15/3 */
  w->previous_choice = w->choice;
  if (ValidLocalTop()) goto lab87; else goto lab88;
lab87:
  G->local_top = G->local_top;
  goto lab90;
lab88:
  G->local_top = w->choice->local_top;
  if (StackYounger(G->local_top, G->frame)) goto lab90; else goto lab89;
lab89:
  G->local_top = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab90;
lab90:
  G->next_alt = append__1;
  w->choice = ChoiceNext0(w->choice, append__1->arity);
  w->choice->flags = 0;
  w->choice->trail_top = G->trail_top;
  w->choice->local_top = G->local_top;
  w->choice->heap_top = G->heap_top;
  SetShallowTry();
  w->global_uncond = Tagp(0, w->choice->heap_top);
  w->local_uncond = Tagp(2, w->choice->local_top);
  w->choice = w->choice;
  TEST_CHOICE_OVERFLOW(w->choice, CHOICEPAD);
  if (!cunify(w, X(1), X(0))) goto lab92; else goto lab91;
lab91:
  DEREF(var38, X(2));
  if (IsVar(var38)) goto lab114; else goto lab112;
lab92:
  var39 = w->choice;
  ResetWakeCount();
  var40 = G->trail_top;
  var41 = var39->trail_top;
  if (TrailYounger(var40, var41)) goto lab93; else goto lab97;
lab93:
  TrailDec(var40);
  var42 = *var40;
  if (IsVar(var42)) goto lab95; else goto lab94;
lab94:
  G->trail_top = var40;
  goto lab98;
lab95:
  *TaggedToPointer(var42) = var42;
  if (TrailYounger(var40, var41)) goto lab93; else goto lab96;
lab96:
  G->trail_top = var40;
  goto lab97;
lab97:
  G->heap_top = var39->heap_top;
  goto lab98;
lab98:
  G->local_top = NULL;
  var43 = w->previous_choice;
  G->next_alt = var43->next_alt;
  w->global_uncond = Tagp(0, var43->heap_top);
  w->local_uncond = Tagp(2, var43->local_top);
  w->choice = var43;
  DEBUG_CUT(var43);
  ConcChptCleanUp(TopConcChptFun(), var43);
  SetDeep();
  DEREF(var44, X(2));
  if (IsVar(var44)) goto lab103; else goto lab99;
lab99:
  if (TagH3_Is6(var44)) goto lab101; else goto lab100;
lab100:
  return FALSE;
lab101:
  var0 = TagpPtr(6, var44);
  X(2) = var0[2 - 1];
  goto lab102;
lab102:
  w->liveinfo = append__3;
  X(0) = fu1_add1(w, X(0));
  goto lab0;
lab103:
  var45 = Tagp(6, G->heap_top);
  var0 = G->heap_top;
  G->heap_top = G->heap_top + 2;
  var46 = var44;
  var47 = var45;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var46, goto lab104;, goto lab107;, goto lab108;);
lab104:
  if (CondHVA(var46)) goto lab105; else goto lab106;
lab105:
  trail_push_check(w, var46);
  goto lab106;
lab106:
  *TagpPtr(0, var46) = var47;
  goto lab111;
lab107:
  trail_push_check(w, var46);
  *TagpPtr(1, var46) = var47;
  IncWakeCount();
  goto lab111;
lab108:
  if (CondSVA(var46)) goto lab109; else goto lab110;
lab109:
  trail_push_check(w, var46);
  goto lab110;
lab110:
  *TagpPtr(2, var46) = var47;
  goto lab111;
lab111:
  var0[1 - 1] = Tagp(0, &var0[1 - 1]);
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab102;
lab112:
  if (var38 == append__2) goto lab113; else goto lab92;
lab113:
  G->local_top = NULL;
  var48 = w->previous_choice;
  G->next_alt = var48->next_alt;
  w->global_uncond = Tagp(0, var48->heap_top);
  w->local_uncond = Tagp(2, var48->local_top);
  w->choice = var48;
  DEBUG_CUT(var48);
  ConcChptCleanUp(TopConcChptFun(), var48);
  SetDeep();
  G->local_top = NULL;
  return TRUE;
lab114:
  var49 = append__2;
  var50 = var38;
  var51 = var49;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var50, goto lab115;, goto lab118;, goto lab119;);
lab115:
  if (CondHVA(var50)) goto lab116; else goto lab117;
lab116:
  trail_push_check(w, var50);
  goto lab117;
lab117:
  *TagpPtr(0, var50) = var51;
  goto lab113;
lab118:
  trail_push_check(w, var50);
  *TagpPtr(1, var50) = var51;
  IncWakeCount();
  goto lab113;
lab119:
  if (CondSVA(var50)) goto lab120; else goto lab121;
lab120:
  trail_push_check(w, var50);
  goto lab121;
lab121:
  *TagpPtr(2, var50) = var51;
  goto lab113;
}
/* append:ap/3 */
bcp_t append_3aap__n3(worker_t *w) {
  uint32_t var0;
  uint32_t var1;
  uint32_t var2;
  if (TestEventOrHeapWarnOverflow(G->heap_top)) goto lab0; else goto lab1;
lab0:
  v__handle_event(w, 3);
  goto lab1;
lab1:
  DEREF(var0, X(0));
  var1 = var0;
  Sw_HVAorCVAorSVA_NVA(var1, goto lab5;, goto lab2;);
lab2:
  Sw_NUMorATM_LST_STR(var1, goto lab3;, goto lab11;, goto lab4;);
lab3:
  var2 = var1;
  goto lab6;
lab4:
  var2 = TaggedToHeadfunctor(var0);
  goto lab6;
lab5:
  return append_3aap_230__n3_l;
lab6:
  if (var2 == append__2) goto lab7; else goto lab10;
lab7:
  if (!append_3aap_231__n3(w)) goto lab8; else goto lab9;
lab8:
  return FAIL_INSNP;
lab9:
  G->local_top = NULL;
  return SUCCESS_INSNP;
lab10:
  return append_3aap_233__n3_l;
lab11:
  return append_3aap_232__n3_l;
}
/* append:ap#0/3 */
bcp_t append_3aap_230__n3(worker_t *w) {
  uint32_t var0;
  uint32_t var1;
  uint32_t var2;
  uint32_t var3;
  choice_t *var4;
  uint32_t *var5;
  uint32_t *var6;
  uint32_t var7;
  choice_t *var8;
  int32_t var9;
  w->previous_choice = w->choice;
  if (ValidLocalTop()) goto lab0; else goto lab1;
lab0:
  G->local_top = G->local_top;
  goto lab3;
lab1:
  G->local_top = w->choice->local_top;
  if (StackYounger(G->local_top, G->frame)) goto lab3; else goto lab2;
lab2:
  G->local_top = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab3;
lab3:
  G->next_alt = append__1;
  w->choice = ChoiceNext0(w->choice, append__1->arity);
  w->choice->flags = 0;
  w->choice->trail_top = G->trail_top;
  w->choice->local_top = G->local_top;
  w->choice->heap_top = G->heap_top;
  SetShallowTry();
  w->global_uncond = Tagp(0, w->choice->heap_top);
  w->local_uncond = Tagp(2, w->choice->local_top);
  w->choice = w->choice;
  TEST_CHOICE_OVERFLOW(w->choice, CHOICEPAD);
  var0 = append__2;
  DEREF(var1, X(0));
  var2 = var1;
  var3 = var0;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var2, goto lab4;, goto lab7;, goto lab8;);
lab4:
  if (CondHVA(var2)) goto lab5; else goto lab6;
lab5:
  trail_push_check(w, var2);
  goto lab6;
lab6:
  *TagpPtr(0, var2) = var3;
  goto lab11;
lab7:
  trail_push_check(w, var2);
  *TagpPtr(1, var2) = var3;
  IncWakeCount();
  goto lab11;
lab8:
  if (CondSVA(var2)) goto lab9; else goto lab10;
lab9:
  trail_push_check(w, var2);
  goto lab10;
lab10:
  *TagpPtr(2, var2) = var3;
  goto lab11;
lab11:
  if (!cunify(w, X(2), X(1))) goto lab12; else goto lab19;
lab12:
  var4 = w->choice;
  ResetWakeCount();
  var5 = G->trail_top;
  var6 = var4->trail_top;
  if (TrailYounger(var5, var6)) goto lab13; else goto lab17;
lab13:
  TrailDec(var5);
  var7 = *var5;
  if (IsVar(var7)) goto lab15; else goto lab14;
lab14:
  G->trail_top = var5;
  goto lab18;
lab15:
  *TaggedToPointer(var7) = var7;
  if (TrailYounger(var5, var6)) goto lab13; else goto lab16;
lab16:
  G->trail_top = var5;
  goto lab17;
lab17:
  G->heap_top = var4->heap_top;
  goto lab18;
lab18:
  return append_3aap_234__n3_l;
lab19:
  var8 = w->choice;
  var8->frame = G->frame;
  var8->next_insn = G->next_insn;
  var8->next_alt = G->next_alt;
  var9 = 3;
  var8->x[0] = G->x[0];
  var8->x[1] = G->x[1];
  var8->x[2] = G->x[2];
  SetDeep();
  w->choice->next_alt = append__6;
  G->next_alt = append__6;
  G->local_top = NULL;
  return SUCCESS_INSNP;
}
/* append:ap#4/3 */
bcp_t append_3aap_234__n3(worker_t *w) {
  uint32_t *var0;
  choice_t *var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  uint32_t var6;
  uint32_t var7;
  uint32_t var8;
  uint32_t var9;
  uint32_t var10;
  uint32_t var11;
  uint32_t var12;
  uint32_t var13;
  uint32_t var14;
  G->local_top = NULL;
  var1 = w->previous_choice;
  G->next_alt = var1->next_alt;
  w->global_uncond = Tagp(0, var1->heap_top);
  w->local_uncond = Tagp(2, var1->local_top);
  w->choice = var1;
  DEBUG_CUT(var1);
  ConcChptCleanUp(TopConcChptFun(), var1);
  SetDeep();
  var2 = Tagp(6, G->heap_top);
  var0 = G->heap_top;
  G->heap_top = G->heap_top + 2;
  DEREF(var3, X(0));
  var4 = var3;
  var5 = var2;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var4, goto lab0;, goto lab3;, goto lab4;);
lab0:
  if (CondHVA(var4)) goto lab1; else goto lab2;
lab1:
  trail_push_check(w, var4);
  goto lab2;
lab2:
  *TagpPtr(0, var4) = var5;
  goto lab7;
lab3:
  trail_push_check(w, var4);
  *TagpPtr(1, var4) = var5;
  IncWakeCount();
  goto lab7;
lab4:
  if (CondSVA(var4)) goto lab5; else goto lab6;
lab5:
  trail_push_check(w, var4);
  goto lab6;
lab6:
  *TagpPtr(2, var4) = var5;
  goto lab7;
lab7:
  var0[1 - 1] = Tagp(0, &var0[1 - 1]);
  var6 = var0[1 - 1];
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(0) = var0[2 - 1];
  DEREF(var7, X(2));
  if (IsVar(var7)) goto lab61; else goto lab8;
lab8:
  if (TagH3_Is6(var7)) goto lab10; else goto lab9;
lab9:
  return FAIL_INSNP;
lab10:
  var0 = TagpPtr(6, var7);
  DEREF(var8, var6);
  DEREF(var9, var0[1 - 1]);
  var10 = var8;
  var11 = var9;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var10, goto lab11;, goto lab29;, goto lab41;);
lab11:
  Sw_HVA_CVA_SVA_Other(var11, goto lab12;, goto lab20;, goto lab23;, goto lab26;);
lab12:
  if (var10 == var11) goto lab59; else goto lab13;
lab13:
  if (YoungerHeapVar(var11, var10)) goto lab14; else goto lab17;
lab14:
  if (CondHVA(var11)) goto lab15; else goto lab16;
lab15:
  trail_push_check(w, var11);
  goto lab16;
lab16:
  *TagpPtr(0, var11) = var10;
  goto lab59;
lab17:
  if (CondHVA(var10)) goto lab18; else goto lab19;
lab18:
  trail_push_check(w, var10);
  goto lab19;
lab19:
  *TagpPtr(0, var10) = var11;
  goto lab59;
lab20:
  if (CondHVA(var10)) goto lab21; else goto lab22;
lab21:
  trail_push_check(w, var10);
  goto lab22;
lab22:
  *TagpPtr(0, var10) = var11;
  goto lab59;
lab23:
  if (CondSVA(var11)) goto lab24; else goto lab25;
lab24:
  trail_push_check(w, var11);
  goto lab25;
lab25:
  *TagpPtr(2, var11) = var10;
  goto lab59;
lab26:
  if (CondHVA(var10)) goto lab27; else goto lab28;
lab27:
  trail_push_check(w, var10);
  goto lab28;
lab28:
  *TagpPtr(0, var10) = var11;
  goto lab59;
lab29:
  Sw_HVA_CVA_SVA_Other(var11, goto lab30;, goto lab33;, goto lab37;, goto lab40;);
lab30:
  if (CondHVA(var11)) goto lab31; else goto lab32;
lab31:
  trail_push_check(w, var11);
  goto lab32;
lab32:
  *TagpPtr(0, var11) = var10;
  goto lab59;
lab33:
  if (var10 == var11) goto lab59; else goto lab34;
lab34:
  if (YoungerHeapVar(var11, var10)) goto lab35; else goto lab36;
lab35:
  trail_push_check(w, var11);
  *TagpPtr(1, var11) = var10;
  IncWakeCount();
  goto lab59;
lab36:
  trail_push_check(w, var10);
  *TagpPtr(1, var10) = var11;
  IncWakeCount();
  goto lab59;
lab37:
  if (CondSVA(var11)) goto lab38; else goto lab39;
lab38:
  trail_push_check(w, var11);
  goto lab39;
lab39:
  *TagpPtr(2, var11) = var10;
  goto lab59;
lab40:
  trail_push_check(w, var10);
  *TagpPtr(1, var10) = var11;
  IncWakeCount();
  goto lab59;
lab41:
  Sw_HVA_CVA_SVA_Other(var11, goto lab42;, goto lab45;, goto lab48;, goto lab56;);
lab42:
  if (CondSVA(var10)) goto lab43; else goto lab44;
lab43:
  trail_push_check(w, var10);
  goto lab44;
lab44:
  *TagpPtr(2, var10) = var11;
  goto lab59;
lab45:
  if (CondSVA(var10)) goto lab46; else goto lab47;
lab46:
  trail_push_check(w, var10);
  goto lab47;
lab47:
  *TagpPtr(2, var10) = var11;
  goto lab59;
lab48:
  if (var10 == var11) goto lab59; else goto lab49;
lab49:
  if (YoungerStackVar(var11, var10)) goto lab50; else goto lab53;
lab50:
  if (CondSVA(var11)) goto lab51; else goto lab52;
lab51:
  trail_push_check(w, var11);
  goto lab52;
lab52:
  *TagpPtr(2, var11) = var10;
  goto lab59;
lab53:
  if (CondSVA(var10)) goto lab54; else goto lab55;
lab54:
  trail_push_check(w, var10);
  goto lab55;
lab55:
  *TagpPtr(2, var10) = var11;
  goto lab59;
lab56:
  if (CondSVA(var10)) goto lab57; else goto lab58;
lab57:
  trail_push_check(w, var10);
  goto lab58;
lab58:
  *TagpPtr(2, var10) = var11;
  goto lab59;
lab59:
  X(2) = var0[2 - 1];
  goto lab60;
lab60:
  return append_3aap__n3_l;
lab61:
  var12 = Tagp(6, G->heap_top);
  var0 = G->heap_top;
  G->heap_top = G->heap_top + 2;
  var13 = var7;
  var14 = var12;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var13, goto lab62;, goto lab65;, goto lab66;);
lab62:
  if (CondHVA(var13)) goto lab63; else goto lab64;
lab63:
  trail_push_check(w, var13);
  goto lab64;
lab64:
  *TagpPtr(0, var13) = var14;
  goto lab69;
lab65:
  trail_push_check(w, var13);
  *TagpPtr(1, var13) = var14;
  IncWakeCount();
  goto lab69;
lab66:
  if (CondSVA(var13)) goto lab67; else goto lab68;
lab67:
  trail_push_check(w, var13);
  goto lab68;
lab68:
  *TagpPtr(2, var13) = var14;
  goto lab69;
lab69:
  var0[1 - 1] = var6;
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab60;
}
/* append:ap#6/0 */
bcp_t append_3aap_236__n0(worker_t *w) {
  choice_t *var0;
  uint32_t *var1;
  uint32_t *var2;
  uint32_t var3;
  choice_t *var4;
  int32_t var5;
  var0 = w->choice;
  ResetWakeCount();
  var1 = G->trail_top;
  var2 = var0->trail_top;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab4;
lab0:
  TrailDec(var1);
  var3 = *var1;
  if (IsVar(var3)) goto lab2; else goto lab1;
lab1:
  G->trail_top = var1;
  goto lab5;
lab2:
  *TaggedToPointer(var3) = var3;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab3;
lab3:
  G->trail_top = var1;
  goto lab4;
lab4:
  G->heap_top = var0->heap_top;
  goto lab5;
lab5:
  var4 = w->choice;
  if (IsDeep()) goto lab6; else goto lab7;
lab6:
  DEBUG_DEEP_BACKTRACKING();
  var5 = 3;
  w->previous_choice = ChoiceCont0(var4, var5);
  SetShallowRetry();
  G->frame = var4->frame;
  G->next_insn = var4->next_insn;
  G->next_alt = var4->next_alt;
  G->local_top = var4->local_top;
  G->x[0] = var4->x[0];
  G->x[1] = var4->x[1];
  G->x[2] = var4->x[2];
  goto lab7;
lab7:
  return append_3aap_234__n3_l;
}
/* append:ap#1/3 */
bool_t append_3aap_231__n3(worker_t *w) {
  return cunify(w, X(2), X(1));
}
/* append:ap#2/3 */
bcp_t append_3aap_232__n3(worker_t *w) {
  uint32_t *var0;
  uint32_t var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  uint32_t var6;
  DEREF(var1, X(0));
  var0 = TagpPtr(6, var1);
  var2 = var0[1 - 1];
  X(0) = var0[2 - 1];
  DEREF(var3, X(2));
  if (IsVar(var3)) goto lab6; else goto lab0;
lab0:
  if (TagH3_Is6(var3)) goto lab2; else goto lab1;
lab1:
  return FAIL_INSNP;
lab2:
  var0 = TagpPtr(6, var3);
  if (!cunify(w, var2, var0[1 - 1])) goto lab3; else goto lab4;
lab3:
  return FAIL_INSNP;
lab4:
  X(2) = var0[2 - 1];
  goto lab5;
lab5:
  return append_3aap__n3_l;
lab6:
  var4 = Tagp(6, G->heap_top);
  var0 = G->heap_top;
  G->heap_top = G->heap_top + 2;
  var5 = var3;
  var6 = var4;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var5, goto lab7;, goto lab10;, goto lab11;);
lab7:
  if (CondHVA(var5)) goto lab8; else goto lab9;
lab8:
  trail_push_check(w, var5);
  goto lab9;
lab9:
  *TagpPtr(0, var5) = var6;
  goto lab14;
lab10:
  trail_push_check(w, var5);
  *TagpPtr(1, var5) = var6;
  IncWakeCount();
  goto lab14;
lab11:
  if (CondSVA(var5)) goto lab12; else goto lab13;
lab12:
  trail_push_check(w, var5);
  goto lab13;
lab13:
  *TagpPtr(2, var5) = var6;
  goto lab14;
lab14:
  var0[1 - 1] = var2;
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab5;
}
/* append:ap#3/3 */
bcp_t append_3aap_233__n3(worker_t *w) {
  uint32_t var0;
  choice_t *var1;
  int32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  w->previous_choice = w->choice;
  if (ValidLocalTop()) goto lab0; else goto lab1;
lab0:
  G->local_top = G->local_top;
  goto lab3;
lab1:
  G->local_top = w->choice->local_top;
  if (StackYounger(G->local_top, G->frame)) goto lab3; else goto lab2;
lab2:
  G->local_top = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab3;
lab3:
  G->next_alt = append__1;
  w->choice = ChoiceNext0(w->choice, append__1->arity);
  w->choice->flags = 0;
  w->choice->trail_top = G->trail_top;
  w->choice->local_top = G->local_top;
  w->choice->heap_top = G->heap_top;
  SetShallowTry();
  w->global_uncond = Tagp(0, w->choice->heap_top);
  w->local_uncond = Tagp(2, w->choice->local_top);
  w->choice = w->choice;
  TEST_CHOICE_OVERFLOW(w->choice, CHOICEPAD);
  DEREF(var0, X(0));
  if (IsVar(var0)) goto lab9; else goto lab4;
lab4:
  if (var0 == append__2) goto lab6; else goto lab5;
lab5:
  return append_3aap_238__n3_l;
  goto lab6;
lab6:
  if (!cunify(w, X(2), X(1))) goto lab7; else goto lab8;
lab7:
  return append_3aap_238__n3_l;
  goto lab8;
lab8:
  var1 = w->choice;
  var1->frame = G->frame;
  var1->next_insn = G->next_insn;
  var1->next_alt = G->next_alt;
  var2 = 3;
  var1->x[0] = G->x[0];
  var1->x[1] = G->x[1];
  var1->x[2] = G->x[2];
  SetDeep();
  w->choice->next_alt = append__10;
  G->next_alt = append__10;
  G->local_top = NULL;
  return SUCCESS_INSNP;
lab9:
  var3 = append__2;
  var4 = var0;
  var5 = var3;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var4, goto lab10;, goto lab13;, goto lab14;);
lab10:
  if (CondHVA(var4)) goto lab11; else goto lab12;
lab11:
  trail_push_check(w, var4);
  goto lab12;
lab12:
  *TagpPtr(0, var4) = var5;
  goto lab6;
lab13:
  trail_push_check(w, var4);
  *TagpPtr(1, var4) = var5;
  IncWakeCount();
  goto lab6;
lab14:
  if (CondSVA(var4)) goto lab15; else goto lab16;
lab15:
  trail_push_check(w, var4);
  goto lab16;
lab16:
  *TagpPtr(2, var4) = var5;
  goto lab6;
}
/* append:ap#7/3 */
bcp_t append_3aap_237__n3(worker_t *w) {
  uint32_t *var0;
  choice_t *var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  uint32_t var6;
  uint32_t var7;
  uint32_t var8;
  uint32_t var9;
  uint32_t var10;
  G->local_top = NULL;
  var1 = w->previous_choice;
  G->next_alt = var1->next_alt;
  w->global_uncond = Tagp(0, var1->heap_top);
  w->local_uncond = Tagp(2, var1->local_top);
  w->choice = var1;
  DEBUG_CUT(var1);
  ConcChptCleanUp(TopConcChptFun(), var1);
  SetDeep();
  DEREF(var2, X(0));
  if (IsVar(var2)) goto lab19; else goto lab0;
lab0:
  if (TagH3_Is6(var2)) goto lab2; else goto lab1;
lab1:
  return FAIL_INSNP;
lab2:
  var0 = TagpPtr(6, var2);
  var3 = var0[1 - 1];
  X(0) = var0[2 - 1];
  goto lab3;
lab3:
  DEREF(var4, X(2));
  if (IsVar(var4)) goto lab10; else goto lab4;
lab4:
  if (TagH3_Is6(var4)) goto lab6; else goto lab5;
lab5:
  return FAIL_INSNP;
lab6:
  var0 = TagpPtr(6, var4);
  if (!cunify(w, var3, var0[1 - 1])) goto lab7; else goto lab8;
lab7:
  return FAIL_INSNP;
lab8:
  X(2) = var0[2 - 1];
  goto lab9;
lab9:
  return append_3aap__n3_l;
lab10:
  var5 = Tagp(6, G->heap_top);
  var0 = G->heap_top;
  G->heap_top = G->heap_top + 2;
  var6 = var4;
  var7 = var5;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var6, goto lab11;, goto lab14;, goto lab15;);
lab11:
  if (CondHVA(var6)) goto lab12; else goto lab13;
lab12:
  trail_push_check(w, var6);
  goto lab13;
lab13:
  *TagpPtr(0, var6) = var7;
  goto lab18;
lab14:
  trail_push_check(w, var6);
  *TagpPtr(1, var6) = var7;
  IncWakeCount();
  goto lab18;
lab15:
  if (CondSVA(var6)) goto lab16; else goto lab17;
lab16:
  trail_push_check(w, var6);
  goto lab17;
lab17:
  *TagpPtr(2, var6) = var7;
  goto lab18;
lab18:
  var0[1 - 1] = var3;
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab9;
lab19:
  var8 = Tagp(6, G->heap_top);
  var0 = G->heap_top;
  G->heap_top = G->heap_top + 2;
  var9 = var2;
  var10 = var8;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var9, goto lab20;, goto lab23;, goto lab24;);
lab20:
  if (CondHVA(var9)) goto lab21; else goto lab22;
lab21:
  trail_push_check(w, var9);
  goto lab22;
lab22:
  *TagpPtr(0, var9) = var10;
  goto lab27;
lab23:
  trail_push_check(w, var9);
  *TagpPtr(1, var9) = var10;
  IncWakeCount();
  goto lab27;
lab24:
  if (CondSVA(var9)) goto lab25; else goto lab26;
lab25:
  trail_push_check(w, var9);
  goto lab26;
lab26:
  *TagpPtr(2, var9) = var10;
  goto lab27;
lab27:
  var0[1 - 1] = Tagp(0, &var0[1 - 1]);
  var3 = var0[1 - 1];
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(0) = var0[2 - 1];
  goto lab3;
}
/* append:ap#8/3 */
bcp_t append_3aap_238__n3(worker_t *w) {
  choice_t *var0;
  uint32_t *var1;
  uint32_t *var2;
  uint32_t var3;
  var0 = w->choice;
  ResetWakeCount();
  var1 = G->trail_top;
  var2 = var0->trail_top;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab4;
lab0:
  TrailDec(var1);
  var3 = *var1;
  if (IsVar(var3)) goto lab2; else goto lab1;
lab1:
  G->trail_top = var1;
  goto lab5;
lab2:
  *TaggedToPointer(var3) = var3;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab3;
lab3:
  G->trail_top = var1;
  goto lab4;
lab4:
  G->heap_top = var0->heap_top;
  goto lab5;
lab5:
  return append_3aap_237__n3_l;
}
/* append:ap#9/0 */
bcp_t append_3aap_239__n0(worker_t *w) {
  choice_t *var0;
  uint32_t *var1;
  uint32_t *var2;
  uint32_t var3;
  choice_t *var4;
  int32_t var5;
  var0 = w->choice;
  ResetWakeCount();
  var1 = G->trail_top;
  var2 = var0->trail_top;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab4;
lab0:
  TrailDec(var1);
  var3 = *var1;
  if (IsVar(var3)) goto lab2; else goto lab1;
lab1:
  G->trail_top = var1;
  goto lab5;
lab2:
  *TaggedToPointer(var3) = var3;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab3;
lab3:
  G->trail_top = var1;
  goto lab4;
lab4:
  G->heap_top = var0->heap_top;
  goto lab5;
lab5:
  var4 = w->choice;
  if (IsDeep()) goto lab6; else goto lab7;
lab6:
  DEBUG_DEEP_BACKTRACKING();
  var5 = 3;
  w->previous_choice = ChoiceCont0(var4, var5);
  SetShallowRetry();
  G->frame = var4->frame;
  G->next_insn = var4->next_insn;
  G->next_alt = var4->next_alt;
  G->local_top = var4->local_top;
  G->x[0] = var4->x[0];
  G->x[1] = var4->x[1];
  G->x[2] = var4->x[2];
  goto lab7;
lab7:
  return append_3aap_237__n3_l;
}
/* append:ag/3 */
bcp_t append_3aag__n3(worker_t *w) {
  uint32_t var0;
  uint32_t var1;
  uint32_t var2;
  if (TestEventOrHeapWarnOverflow(G->heap_top)) goto lab0; else goto lab1;
lab0:
  v__handle_event(w, 3);
  goto lab1;
lab1:
  DEREF(var0, X(0));
  var1 = var0;
  Sw_HVAorCVAorSVA_NVA(var1, goto lab5;, goto lab2;);
lab2:
  Sw_NUMorATM_LST_STR(var1, goto lab3;, goto lab12;, goto lab4;);
lab3:
  var2 = var1;
  goto lab6;
lab4:
  var2 = TaggedToHeadfunctor(var0);
  goto lab6;
lab5:
  return append_3aag_230__n3_l;
lab6:
  if (var2 == append__2) goto lab8; else goto lab7;
lab7:
  if (var2 == append__12) goto lab11; else goto lab12;
lab8:
  if (!append_3aag_231__n3(w)) goto lab9; else goto lab10;
lab9:
  return FAIL_INSNP;
lab10:
  G->local_top = NULL;
  return SUCCESS_INSNP;
lab11:
  return append_3aag_232__n3_l;
lab12:
  return append_3aag_233__n3_l;
}
/* append:ag#0/3 */
bcp_t append_3aag_230__n3(worker_t *w) {
  uint32_t var0;
  uint32_t var1;
  uint32_t var2;
  uint32_t var3;
  choice_t *var4;
  uint32_t *var5;
  uint32_t *var6;
  uint32_t var7;
  choice_t *var8;
  int32_t var9;
  w->previous_choice = w->choice;
  if (ValidLocalTop()) goto lab0; else goto lab1;
lab0:
  G->local_top = G->local_top;
  goto lab3;
lab1:
  G->local_top = w->choice->local_top;
  if (StackYounger(G->local_top, G->frame)) goto lab3; else goto lab2;
lab2:
  G->local_top = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab3;
lab3:
  G->next_alt = append__1;
  w->choice = ChoiceNext0(w->choice, append__1->arity);
  w->choice->flags = 0;
  w->choice->trail_top = G->trail_top;
  w->choice->local_top = G->local_top;
  w->choice->heap_top = G->heap_top;
  SetShallowTry();
  w->global_uncond = Tagp(0, w->choice->heap_top);
  w->local_uncond = Tagp(2, w->choice->local_top);
  w->choice = w->choice;
  TEST_CHOICE_OVERFLOW(w->choice, CHOICEPAD);
  var0 = append__2;
  DEREF(var1, X(0));
  var2 = var1;
  var3 = var0;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var2, goto lab4;, goto lab7;, goto lab8;);
lab4:
  if (CondHVA(var2)) goto lab5; else goto lab6;
lab5:
  trail_push_check(w, var2);
  goto lab6;
lab6:
  *TagpPtr(0, var2) = var3;
  goto lab11;
lab7:
  trail_push_check(w, var2);
  *TagpPtr(1, var2) = var3;
  IncWakeCount();
  goto lab11;
lab8:
  if (CondSVA(var2)) goto lab9; else goto lab10;
lab9:
  trail_push_check(w, var2);
  goto lab10;
lab10:
  *TagpPtr(2, var2) = var3;
  goto lab11;
lab11:
  if (!cunify(w, X(2), X(1))) goto lab12; else goto lab19;
lab12:
  var4 = w->choice;
  ResetWakeCount();
  var5 = G->trail_top;
  var6 = var4->trail_top;
  if (TrailYounger(var5, var6)) goto lab13; else goto lab17;
lab13:
  TrailDec(var5);
  var7 = *var5;
  if (IsVar(var7)) goto lab15; else goto lab14;
lab14:
  G->trail_top = var5;
  goto lab18;
lab15:
  *TaggedToPointer(var7) = var7;
  if (TrailYounger(var5, var6)) goto lab13; else goto lab16;
lab16:
  G->trail_top = var5;
  goto lab17;
lab17:
  G->heap_top = var4->heap_top;
  goto lab18;
lab18:
  return append_3aag_234__n3_l;
lab19:
  var8 = w->choice;
  var8->frame = G->frame;
  var8->next_insn = G->next_insn;
  var8->next_alt = G->next_alt;
  var9 = 3;
  var8->x[0] = G->x[0];
  var8->x[1] = G->x[1];
  var8->x[2] = G->x[2];
  SetDeep();
  w->choice->next_alt = append__14;
  G->next_alt = append__14;
  G->local_top = NULL;
  return SUCCESS_INSNP;
}
/* append:ag#4/3 */
bcp_t append_3aag_234__n3(worker_t *w) {
  uint32_t *var0;
  choice_t *var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  uint32_t var6;
  uint32_t var7;
  uint32_t var8;
  uint32_t var9;
  uint32_t var10;
  uint32_t var11;
  uint32_t var12;
  uint32_t var13;
  uint32_t var14;
  G->local_top = NULL;
  var1 = w->previous_choice;
  G->next_alt = var1->next_alt;
  w->global_uncond = Tagp(0, var1->heap_top);
  w->local_uncond = Tagp(2, var1->local_top);
  w->choice = var1;
  DEBUG_CUT(var1);
  ConcChptCleanUp(TopConcChptFun(), var1);
  SetDeep();
  var2 = Tagp(7, G->heap_top);
  var0 = G->heap_top + 1;
  var0[0 - 1] = append__12;
  G->heap_top = G->heap_top + (1 + 2);
  DEREF(var3, X(0));
  var4 = var3;
  var5 = var2;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var4, goto lab0;, goto lab3;, goto lab4;);
lab0:
  if (CondHVA(var4)) goto lab1; else goto lab2;
lab1:
  trail_push_check(w, var4);
  goto lab2;
lab2:
  *TagpPtr(0, var4) = var5;
  goto lab7;
lab3:
  trail_push_check(w, var4);
  *TagpPtr(1, var4) = var5;
  IncWakeCount();
  goto lab7;
lab4:
  if (CondSVA(var4)) goto lab5; else goto lab6;
lab5:
  trail_push_check(w, var4);
  goto lab6;
lab6:
  *TagpPtr(2, var4) = var5;
  goto lab7;
lab7:
  var0[1 - 1] = Tagp(0, &var0[1 - 1]);
  var6 = var0[1 - 1];
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(0) = var0[2 - 1];
  DEREF(var7, X(2));
  if (IsVar(var7)) goto lab63; else goto lab8;
lab8:
  if (TagH3_Is7(var7)) goto lab10; else goto lab9;
lab9:
  return FAIL_INSNP;
lab10:
  if (TaggedToHeadfunctor(var7) == append__12) goto lab12; else goto lab11;
lab11:
  return FAIL_INSNP;
lab12:
  var0 = TagpPtr(7, var7) + 1;
  DEREF(var8, var6);
  DEREF(var9, var0[1 - 1]);
  var10 = var8;
  var11 = var9;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var10, goto lab13;, goto lab31;, goto lab43;);
lab13:
  Sw_HVA_CVA_SVA_Other(var11, goto lab14;, goto lab22;, goto lab25;, goto lab28;);
lab14:
  if (var10 == var11) goto lab61; else goto lab15;
lab15:
  if (YoungerHeapVar(var11, var10)) goto lab16; else goto lab19;
lab16:
  if (CondHVA(var11)) goto lab17; else goto lab18;
lab17:
  trail_push_check(w, var11);
  goto lab18;
lab18:
  *TagpPtr(0, var11) = var10;
  goto lab61;
lab19:
  if (CondHVA(var10)) goto lab20; else goto lab21;
lab20:
  trail_push_check(w, var10);
  goto lab21;
lab21:
  *TagpPtr(0, var10) = var11;
  goto lab61;
lab22:
  if (CondHVA(var10)) goto lab23; else goto lab24;
lab23:
  trail_push_check(w, var10);
  goto lab24;
lab24:
  *TagpPtr(0, var10) = var11;
  goto lab61;
lab25:
  if (CondSVA(var11)) goto lab26; else goto lab27;
lab26:
  trail_push_check(w, var11);
  goto lab27;
lab27:
  *TagpPtr(2, var11) = var10;
  goto lab61;
lab28:
  if (CondHVA(var10)) goto lab29; else goto lab30;
lab29:
  trail_push_check(w, var10);
  goto lab30;
lab30:
  *TagpPtr(0, var10) = var11;
  goto lab61;
lab31:
  Sw_HVA_CVA_SVA_Other(var11, goto lab32;, goto lab35;, goto lab39;, goto lab42;);
lab32:
  if (CondHVA(var11)) goto lab33; else goto lab34;
lab33:
  trail_push_check(w, var11);
  goto lab34;
lab34:
  *TagpPtr(0, var11) = var10;
  goto lab61;
lab35:
  if (var10 == var11) goto lab61; else goto lab36;
lab36:
  if (YoungerHeapVar(var11, var10)) goto lab37; else goto lab38;
lab37:
  trail_push_check(w, var11);
  *TagpPtr(1, var11) = var10;
  IncWakeCount();
  goto lab61;
lab38:
  trail_push_check(w, var10);
  *TagpPtr(1, var10) = var11;
  IncWakeCount();
  goto lab61;
lab39:
  if (CondSVA(var11)) goto lab40; else goto lab41;
lab40:
  trail_push_check(w, var11);
  goto lab41;
lab41:
  *TagpPtr(2, var11) = var10;
  goto lab61;
lab42:
  trail_push_check(w, var10);
  *TagpPtr(1, var10) = var11;
  IncWakeCount();
  goto lab61;
lab43:
  Sw_HVA_CVA_SVA_Other(var11, goto lab44;, goto lab47;, goto lab50;, goto lab58;);
lab44:
  if (CondSVA(var10)) goto lab45; else goto lab46;
lab45:
  trail_push_check(w, var10);
  goto lab46;
lab46:
  *TagpPtr(2, var10) = var11;
  goto lab61;
lab47:
  if (CondSVA(var10)) goto lab48; else goto lab49;
lab48:
  trail_push_check(w, var10);
  goto lab49;
lab49:
  *TagpPtr(2, var10) = var11;
  goto lab61;
lab50:
  if (var10 == var11) goto lab61; else goto lab51;
lab51:
  if (YoungerStackVar(var11, var10)) goto lab52; else goto lab55;
lab52:
  if (CondSVA(var11)) goto lab53; else goto lab54;
lab53:
  trail_push_check(w, var11);
  goto lab54;
lab54:
  *TagpPtr(2, var11) = var10;
  goto lab61;
lab55:
  if (CondSVA(var10)) goto lab56; else goto lab57;
lab56:
  trail_push_check(w, var10);
  goto lab57;
lab57:
  *TagpPtr(2, var10) = var11;
  goto lab61;
lab58:
  if (CondSVA(var10)) goto lab59; else goto lab60;
lab59:
  trail_push_check(w, var10);
  goto lab60;
lab60:
  *TagpPtr(2, var10) = var11;
  goto lab61;
lab61:
  X(2) = var0[2 - 1];
  goto lab62;
lab62:
  return append_3aag__n3_l;
lab63:
  var12 = Tagp(7, G->heap_top);
  var0 = G->heap_top + 1;
  var0[0 - 1] = append__12;
  G->heap_top = G->heap_top + (1 + 2);
  var13 = var7;
  var14 = var12;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var13, goto lab64;, goto lab67;, goto lab68;);
lab64:
  if (CondHVA(var13)) goto lab65; else goto lab66;
lab65:
  trail_push_check(w, var13);
  goto lab66;
lab66:
  *TagpPtr(0, var13) = var14;
  goto lab71;
lab67:
  trail_push_check(w, var13);
  *TagpPtr(1, var13) = var14;
  IncWakeCount();
  goto lab71;
lab68:
  if (CondSVA(var13)) goto lab69; else goto lab70;
lab69:
  trail_push_check(w, var13);
  goto lab70;
lab70:
  *TagpPtr(2, var13) = var14;
  goto lab71;
lab71:
  var0[1 - 1] = var6;
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab62;
}
/* append:ag#6/0 */
bcp_t append_3aag_236__n0(worker_t *w) {
  choice_t *var0;
  uint32_t *var1;
  uint32_t *var2;
  uint32_t var3;
  choice_t *var4;
  int32_t var5;
  var0 = w->choice;
  ResetWakeCount();
  var1 = G->trail_top;
  var2 = var0->trail_top;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab4;
lab0:
  TrailDec(var1);
  var3 = *var1;
  if (IsVar(var3)) goto lab2; else goto lab1;
lab1:
  G->trail_top = var1;
  goto lab5;
lab2:
  *TaggedToPointer(var3) = var3;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab3;
lab3:
  G->trail_top = var1;
  goto lab4;
lab4:
  G->heap_top = var0->heap_top;
  goto lab5;
lab5:
  var4 = w->choice;
  if (IsDeep()) goto lab6; else goto lab7;
lab6:
  DEBUG_DEEP_BACKTRACKING();
  var5 = 3;
  w->previous_choice = ChoiceCont0(var4, var5);
  SetShallowRetry();
  G->frame = var4->frame;
  G->next_insn = var4->next_insn;
  G->next_alt = var4->next_alt;
  G->local_top = var4->local_top;
  G->x[0] = var4->x[0];
  G->x[1] = var4->x[1];
  G->x[2] = var4->x[2];
  goto lab7;
lab7:
  return append_3aag_234__n3_l;
}
/* append:ag#1/3 */
bool_t append_3aag_231__n3(worker_t *w) {
  return cunify(w, X(2), X(1));
}
/* append:ag#2/3 */
bcp_t append_3aag_232__n3(worker_t *w) {
  uint32_t *var0;
  uint32_t var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  uint32_t var6;
  DEREF(var1, X(0));
  var0 = TagpPtr(7, var1) + 1;
  var2 = var0[1 - 1];
  X(0) = var0[2 - 1];
  DEREF(var3, X(2));
  if (IsVar(var3)) goto lab8; else goto lab0;
lab0:
  if (TagH3_Is7(var3)) goto lab2; else goto lab1;
lab1:
  return FAIL_INSNP;
lab2:
  if (TaggedToHeadfunctor(var3) == append__12) goto lab4; else goto lab3;
lab3:
  return FAIL_INSNP;
lab4:
  var0 = TagpPtr(7, var3) + 1;
  if (!cunify(w, var2, var0[1 - 1])) goto lab5; else goto lab6;
lab5:
  return FAIL_INSNP;
lab6:
  X(2) = var0[2 - 1];
  goto lab7;
lab7:
  return append_3aag__n3_l;
lab8:
  var4 = Tagp(7, G->heap_top);
  var0 = G->heap_top + 1;
  var0[0 - 1] = append__12;
  G->heap_top = G->heap_top + (1 + 2);
  var5 = var3;
  var6 = var4;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var5, goto lab9;, goto lab12;, goto lab13;);
lab9:
  if (CondHVA(var5)) goto lab10; else goto lab11;
lab10:
  trail_push_check(w, var5);
  goto lab11;
lab11:
  *TagpPtr(0, var5) = var6;
  goto lab16;
lab12:
  trail_push_check(w, var5);
  *TagpPtr(1, var5) = var6;
  IncWakeCount();
  goto lab16;
lab13:
  if (CondSVA(var5)) goto lab14; else goto lab15;
lab14:
  trail_push_check(w, var5);
  goto lab15;
lab15:
  *TagpPtr(2, var5) = var6;
  goto lab16;
lab16:
  var0[1 - 1] = var2;
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab7;
}
/* append:ag#3/3 */
bcp_t append_3aag_233__n3(worker_t *w) {
  uint32_t var0;
  choice_t *var1;
  int32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  w->previous_choice = w->choice;
  if (ValidLocalTop()) goto lab0; else goto lab1;
lab0:
  G->local_top = G->local_top;
  goto lab3;
lab1:
  G->local_top = w->choice->local_top;
  if (StackYounger(G->local_top, G->frame)) goto lab3; else goto lab2;
lab2:
  G->local_top = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab3;
lab3:
  G->next_alt = append__1;
  w->choice = ChoiceNext0(w->choice, append__1->arity);
  w->choice->flags = 0;
  w->choice->trail_top = G->trail_top;
  w->choice->local_top = G->local_top;
  w->choice->heap_top = G->heap_top;
  SetShallowTry();
  w->global_uncond = Tagp(0, w->choice->heap_top);
  w->local_uncond = Tagp(2, w->choice->local_top);
  w->choice = w->choice;
  TEST_CHOICE_OVERFLOW(w->choice, CHOICEPAD);
  DEREF(var0, X(0));
  if (IsVar(var0)) goto lab9; else goto lab4;
lab4:
  if (var0 == append__2) goto lab6; else goto lab5;
lab5:
  return append_3aag_238__n3_l;
  goto lab6;
lab6:
  if (!cunify(w, X(2), X(1))) goto lab7; else goto lab8;
lab7:
  return append_3aag_238__n3_l;
  goto lab8;
lab8:
  var1 = w->choice;
  var1->frame = G->frame;
  var1->next_insn = G->next_insn;
  var1->next_alt = G->next_alt;
  var2 = 3;
  var1->x[0] = G->x[0];
  var1->x[1] = G->x[1];
  var1->x[2] = G->x[2];
  SetDeep();
  w->choice->next_alt = append__18;
  G->next_alt = append__18;
  G->local_top = NULL;
  return SUCCESS_INSNP;
lab9:
  var3 = append__2;
  var4 = var0;
  var5 = var3;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var4, goto lab10;, goto lab13;, goto lab14;);
lab10:
  if (CondHVA(var4)) goto lab11; else goto lab12;
lab11:
  trail_push_check(w, var4);
  goto lab12;
lab12:
  *TagpPtr(0, var4) = var5;
  goto lab6;
lab13:
  trail_push_check(w, var4);
  *TagpPtr(1, var4) = var5;
  IncWakeCount();
  goto lab6;
lab14:
  if (CondSVA(var4)) goto lab15; else goto lab16;
lab15:
  trail_push_check(w, var4);
  goto lab16;
lab16:
  *TagpPtr(2, var4) = var5;
  goto lab6;
}
/* append:ag#7/3 */
bcp_t append_3aag_237__n3(worker_t *w) {
  uint32_t *var0;
  choice_t *var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  uint32_t var5;
  uint32_t var6;
  uint32_t var7;
  uint32_t var8;
  uint32_t var9;
  uint32_t var10;
  G->local_top = NULL;
  var1 = w->previous_choice;
  G->next_alt = var1->next_alt;
  w->global_uncond = Tagp(0, var1->heap_top);
  w->local_uncond = Tagp(2, var1->local_top);
  w->choice = var1;
  DEBUG_CUT(var1);
  ConcChptCleanUp(TopConcChptFun(), var1);
  SetDeep();
  DEREF(var2, X(0));
  if (IsVar(var2)) goto lab23; else goto lab0;
lab0:
  if (TagH3_Is7(var2)) goto lab2; else goto lab1;
lab1:
  return FAIL_INSNP;
lab2:
  if (TaggedToHeadfunctor(var2) == append__12) goto lab4; else goto lab3;
lab3:
  return FAIL_INSNP;
lab4:
  var0 = TagpPtr(7, var2) + 1;
  var3 = var0[1 - 1];
  X(0) = var0[2 - 1];
  goto lab5;
lab5:
  DEREF(var4, X(2));
  if (IsVar(var4)) goto lab14; else goto lab6;
lab6:
  if (TagH3_Is7(var4)) goto lab8; else goto lab7;
lab7:
  return FAIL_INSNP;
lab8:
  if (TaggedToHeadfunctor(var4) == append__12) goto lab10; else goto lab9;
lab9:
  return FAIL_INSNP;
lab10:
  var0 = TagpPtr(7, var4) + 1;
  if (!cunify(w, var3, var0[1 - 1])) goto lab11; else goto lab12;
lab11:
  return FAIL_INSNP;
lab12:
  X(2) = var0[2 - 1];
  goto lab13;
lab13:
  return append_3aag__n3_l;
lab14:
  var5 = Tagp(7, G->heap_top);
  var0 = G->heap_top + 1;
  var0[0 - 1] = append__12;
  G->heap_top = G->heap_top + (1 + 2);
  var6 = var4;
  var7 = var5;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var6, goto lab15;, goto lab18;, goto lab19;);
lab15:
  if (CondHVA(var6)) goto lab16; else goto lab17;
lab16:
  trail_push_check(w, var6);
  goto lab17;
lab17:
  *TagpPtr(0, var6) = var7;
  goto lab22;
lab18:
  trail_push_check(w, var6);
  *TagpPtr(1, var6) = var7;
  IncWakeCount();
  goto lab22;
lab19:
  if (CondSVA(var6)) goto lab20; else goto lab21;
lab20:
  trail_push_check(w, var6);
  goto lab21;
lab21:
  *TagpPtr(2, var6) = var7;
  goto lab22;
lab22:
  var0[1 - 1] = var3;
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(2) = var0[2 - 1];
  goto lab13;
lab23:
  var8 = Tagp(7, G->heap_top);
  var0 = G->heap_top + 1;
  var0[0 - 1] = append__12;
  G->heap_top = G->heap_top + (1 + 2);
  var9 = var2;
  var10 = var8;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var9, goto lab24;, goto lab27;, goto lab28;);
lab24:
  if (CondHVA(var9)) goto lab25; else goto lab26;
lab25:
  trail_push_check(w, var9);
  goto lab26;
lab26:
  *TagpPtr(0, var9) = var10;
  goto lab31;
lab27:
  trail_push_check(w, var9);
  *TagpPtr(1, var9) = var10;
  IncWakeCount();
  goto lab31;
lab28:
  if (CondSVA(var9)) goto lab29; else goto lab30;
lab29:
  trail_push_check(w, var9);
  goto lab30;
lab30:
  *TagpPtr(2, var9) = var10;
  goto lab31;
lab31:
  var0[1 - 1] = Tagp(0, &var0[1 - 1]);
  var3 = var0[1 - 1];
  var0[2 - 1] = Tagp(0, &var0[2 - 1]);
  X(0) = var0[2 - 1];
  goto lab5;
}
/* append:ag#8/3 */
bcp_t append_3aag_238__n3(worker_t *w) {
  choice_t *var0;
  uint32_t *var1;
  uint32_t *var2;
  uint32_t var3;
  var0 = w->choice;
  ResetWakeCount();
  var1 = G->trail_top;
  var2 = var0->trail_top;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab4;
lab0:
  TrailDec(var1);
  var3 = *var1;
  if (IsVar(var3)) goto lab2; else goto lab1;
lab1:
  G->trail_top = var1;
  goto lab5;
lab2:
  *TaggedToPointer(var3) = var3;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab3;
lab3:
  G->trail_top = var1;
  goto lab4;
lab4:
  G->heap_top = var0->heap_top;
  goto lab5;
lab5:
  return append_3aag_237__n3_l;
}
/* append:ag#9/0 */
bcp_t append_3aag_239__n0(worker_t *w) {
  choice_t *var0;
  uint32_t *var1;
  uint32_t *var2;
  uint32_t var3;
  choice_t *var4;
  int32_t var5;
  var0 = w->choice;
  ResetWakeCount();
  var1 = G->trail_top;
  var2 = var0->trail_top;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab4;
lab0:
  TrailDec(var1);
  var3 = *var1;
  if (IsVar(var3)) goto lab2; else goto lab1;
lab1:
  G->trail_top = var1;
  goto lab5;
lab2:
  *TaggedToPointer(var3) = var3;
  if (TrailYounger(var1, var2)) goto lab0; else goto lab3;
lab3:
  G->trail_top = var1;
  goto lab4;
lab4:
  G->heap_top = var0->heap_top;
  goto lab5;
lab5:
  var4 = w->choice;
  if (IsDeep()) goto lab6; else goto lab7;
lab6:
  DEBUG_DEEP_BACKTRACKING();
  var5 = 3;
  w->previous_choice = ChoiceCont0(var4, var5);
  SetShallowRetry();
  G->frame = var4->frame;
  G->next_insn = var4->next_insn;
  G->next_alt = var4->next_alt;
  G->local_top = var4->local_top;
  G->x[0] = var4->x[0];
  G->x[1] = var4->x[1];
  G->x[2] = var4->x[2];
  goto lab7;
lab7:
  return append_3aag_237__n3_l;
}
/* append:gb/1 */
void append_3agb__n1(worker_t *w) {
  frame_t *var0;
  uint32_t var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  if (ValidLocalTop()) goto lab0; else goto lab1;
lab0:
  var0 = G->local_top;
  goto lab3;
lab1:
  var0 = w->choice->local_top;
  if (StackYounger(var0, G->frame)) goto lab3; else goto lab2;
lab2:
  var0 = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab3;
lab3:
  var0->x[0] = X(0);
  var0->x[1] = Tagp(2, &var0->x[1]);
  X(0) = var0->x[1];
  var0->next_insn = G->next_insn;
  var0->frame = G->frame;
  G->frame = var0;
  G->next_insn = append__20;
  G->local_top = StackCharOffset(var0, FrameSize(G->next_insn));
  if (OffStacktop(var0, Stack_Warn)) goto lab4; else goto lab5;
lab4:
  SetEvent();
  goto lab5;
lab5:
  /* append:gb2#3/1 */
  if (TestEventOrHeapWarnOverflow(G->heap_top)) goto lab6; else goto lab7;
lab6:
  v__handle_event(w, 1);
  goto lab7;
lab7:
  G->local_top = NULL;
  var0 = G->frame;
  DEREF(var1, var0->x[1]);
  DEREF(var2, var0->x[0]);
  var3 = var1;
  var4 = var2;
  SwHVAorCVAorSVA_HVA_CVA_SVA(var3, goto lab8;, goto lab26;, goto lab38;);
lab8:
  Sw_HVA_CVA_SVA_Other(var4, goto lab9;, goto lab17;, goto lab20;, goto lab23;);
lab9:
  if (var3 == var4) goto lab56; else goto lab10;
lab10:
  if (YoungerHeapVar(var4, var3)) goto lab11; else goto lab14;
lab11:
  if (CondHVA(var4)) goto lab12; else goto lab13;
lab12:
  trail_push_check(w, var4);
  goto lab13;
lab13:
  *TagpPtr(0, var4) = var3;
  goto lab56;
lab14:
  if (CondHVA(var3)) goto lab15; else goto lab16;
lab15:
  trail_push_check(w, var3);
  goto lab16;
lab16:
  *TagpPtr(0, var3) = var4;
  goto lab56;
lab17:
  if (CondHVA(var3)) goto lab18; else goto lab19;
lab18:
  trail_push_check(w, var3);
  goto lab19;
lab19:
  *TagpPtr(0, var3) = var4;
  goto lab56;
lab20:
  if (CondSVA(var4)) goto lab21; else goto lab22;
lab21:
  trail_push_check(w, var4);
  goto lab22;
lab22:
  *TagpPtr(2, var4) = var3;
  goto lab56;
lab23:
  if (CondHVA(var3)) goto lab24; else goto lab25;
lab24:
  trail_push_check(w, var3);
  goto lab25;
lab25:
  *TagpPtr(0, var3) = var4;
  goto lab56;
lab26:
  Sw_HVA_CVA_SVA_Other(var4, goto lab27;, goto lab30;, goto lab34;, goto lab37;);
lab27:
  if (CondHVA(var4)) goto lab28; else goto lab29;
lab28:
  trail_push_check(w, var4);
  goto lab29;
lab29:
  *TagpPtr(0, var4) = var3;
  goto lab56;
lab30:
  if (var3 == var4) goto lab56; else goto lab31;
lab31:
  if (YoungerHeapVar(var4, var3)) goto lab32; else goto lab33;
lab32:
  trail_push_check(w, var4);
  *TagpPtr(1, var4) = var3;
  IncWakeCount();
  goto lab56;
lab33:
  trail_push_check(w, var3);
  *TagpPtr(1, var3) = var4;
  IncWakeCount();
  goto lab56;
lab34:
  if (CondSVA(var4)) goto lab35; else goto lab36;
lab35:
  trail_push_check(w, var4);
  goto lab36;
lab36:
  *TagpPtr(2, var4) = var3;
  goto lab56;
lab37:
  trail_push_check(w, var3);
  *TagpPtr(1, var3) = var4;
  IncWakeCount();
  goto lab56;
lab38:
  Sw_HVA_CVA_SVA_Other(var4, goto lab39;, goto lab42;, goto lab45;, goto lab53;);
lab39:
  if (CondSVA(var3)) goto lab40; else goto lab41;
lab40:
  trail_push_check(w, var3);
  goto lab41;
lab41:
  *TagpPtr(2, var3) = var4;
  goto lab56;
lab42:
  if (CondSVA(var3)) goto lab43; else goto lab44;
lab43:
  trail_push_check(w, var3);
  goto lab44;
lab44:
  *TagpPtr(2, var3) = var4;
  goto lab56;
lab45:
  if (var3 == var4) goto lab56; else goto lab46;
lab46:
  if (YoungerStackVar(var4, var3)) goto lab47; else goto lab50;
lab47:
  if (CondSVA(var4)) goto lab48; else goto lab49;
lab48:
  trail_push_check(w, var4);
  goto lab49;
lab49:
  *TagpPtr(2, var4) = var3;
  goto lab56;
lab50:
  if (CondSVA(var3)) goto lab51; else goto lab52;
lab51:
  trail_push_check(w, var3);
  goto lab52;
lab52:
  *TagpPtr(2, var3) = var4;
  goto lab56;
lab53:
  if (CondSVA(var3)) goto lab54; else goto lab55;
lab54:
  trail_push_check(w, var3);
  goto lab55;
lab55:
  *TagpPtr(2, var3) = var4;
  goto lab56;
lab56:
  G->next_insn = var0->next_insn;
  G->frame = var0->frame;
  if (TestEventOrHeapWarnOverflow(G->heap_top)) goto lab57; else goto lab58;
lab57:
  v__handle_event(w, 0);
  goto lab58;
lab58:
  G->local_top = NULL;
  return;
}
/* append:gg/0 */
bcp_t append_3agg__n0(worker_t *w) {
  frame_t *var0;
  if (TestEventOrHeapWarnOverflow(G->heap_top)) goto lab0; else goto lab1;
lab0:
  v__handle_event(w, 0);
  goto lab1;
lab1:
  if (ValidLocalTop()) goto lab2; else goto lab3;
lab2:
  var0 = G->local_top;
  goto lab5;
lab3:
  var0 = w->choice->local_top;
  if (StackYounger(var0, G->frame)) goto lab5; else goto lab4;
lab4:
  var0 = StackCharOffset(G->frame, FrameSize(G->next_insn));
  goto lab5;
lab5:
  var0->x[0] = Tagp(2, &var0->x[0]);
  var0->next_insn = G->next_insn;
  var0->frame = G->frame;
  G->frame = var0;
  G->next_insn = append__22;
  G->local_top = StackCharOffset(var0, FrameSize(G->next_insn));
  if (OffStacktop(var0, Stack_Warn)) goto lab6; else goto lab7;
lab6:
  SetEvent();
  goto lab7;
lab7:
  G->next_insn = append__23;
  return DEF_INSNP(append__24);
}
/* append:gg#0/0 */
bcp_t append_3agg_230__n0(worker_t *w) {
  frame_t *var0;
  uint32_t var1;
  uint32_t var2;
  uint32_t var3;
  uint32_t var4;
  var0 = G->frame;
  var0 = G->frame;
  DEREF(var1, var0->x[0]);
  var2 = var1;
  if (TagH3_Pre0124567_Is2(var2)) goto lab0; else goto lab4;
lab0:
  if (UnsafeVar(var0, var2)) goto lab1; else goto lab4;
lab1:
  var3 = var2;
  var4 = Tagp(0, G->heap_top);
  var2 = var4;
  *G->heap_top = var4;
  G->heap_top = G->heap_top + 1;
  if (CondSVA(var3)) goto lab2; else goto lab3;
lab2:
  trail_push_check(w, var3);
  goto lab3;
lab3:
  *TagpPtr(2, var3) = var2;
  goto lab4;
lab4:
  X(0) = var2;
  G->next_insn = var0->next_insn;
  G->frame = var0->frame;
  return DEF_INSNP(append__25);
}
void append__init(worker_t *w) {
  append__0 = register_cbool("append:le#3", 2, append_3ale_233__n2);
  append__1 = def_retry_cinsnp(w, NULL, 3);
  append__2 = GET_ATOM("[]");
  LIVEINFO__INIT(append__3, 0, 3);
  append__4 = register_cinsnp("append:ap", 3, append_3aap__n3);
  append_3aap_230__n3_l = def_exec_cinsnp(w, append_3aap_230__n3);
  append_3aap_233__n3_l = def_exec_cinsnp(w, append_3aap_233__n3);
  append_3aap_232__n3_l = def_exec_cinsnp(w, append_3aap_232__n3);
  append__5 = register_cinsnp("append:ap#0", 3, append_3aap_230__n3);
  append_3aap_234__n3_l = def_exec_cinsnp(w, append_3aap_234__n3);
  append__6 = def_retry_cinsnp(w, append_3aap_236__n0, 3);
  append_3aap__n3_l = def_exec_cinsnp(w, append_3aap__n3);
  append__7 = register_cbool("append:ap#1", 3, append_3aap_231__n3);
  append__8 = register_cinsnp("append:ap#2", 3, append_3aap_232__n3);
  append__9 = register_cinsnp("append:ap#3", 3, append_3aap_233__n3);
  append_3aap_238__n3_l = def_exec_cinsnp(w, append_3aap_238__n3);
  append__10 = def_retry_cinsnp(w, append_3aap_239__n0, 3);
  append_3aap_237__n3_l = def_exec_cinsnp(w, append_3aap_237__n3);
  append__11 = register_cinsnp("append:ag", 3, append_3aag__n3);
  append_3aag_230__n3_l = def_exec_cinsnp(w, append_3aag_230__n3);
  append__12 = deffunctor("c", 2);
  append_3aag_232__n3_l = def_exec_cinsnp(w, append_3aag_232__n3);
  append_3aag_233__n3_l = def_exec_cinsnp(w, append_3aag_233__n3);
  append__13 = register_cinsnp("append:ag#0", 3, append_3aag_230__n3);
  append_3aag_234__n3_l = def_exec_cinsnp(w, append_3aag_234__n3);
  append__14 = def_retry_cinsnp(w, append_3aag_236__n0, 3);
  append_3aag__n3_l = def_exec_cinsnp(w, append_3aag__n3);
  append__15 = register_cbool("append:ag#1", 3, append_3aag_231__n3);
  append__16 = register_cinsnp("append:ag#2", 3, append_3aag_232__n3);
  append__17 = register_cinsnp("append:ag#3", 3, append_3aag_233__n3);
  append_3aag_238__n3_l = def_exec_cinsnp(w, append_3aag_238__n3);
  append__18 = def_retry_cinsnp(w, append_3aag_239__n0, 3);
  append_3aag_237__n3_l = def_exec_cinsnp(w, append_3aag_237__n3);
  append__19 = register_cvoid("append:gb", 1, append_3agb__n1);
  append__20 = def_success_cinsnp(w, NULL, 2);
  append__21 = register_cinsnp("append:gg", 0, append_3agg__n0);
  append__22 = def_success_cinsnp(w, NULL, 1);
  append__23 = def_success_cinsnp(w, append_3agg_230__n0, 1);
  append__24 = query_predicate("foo:h0", 0);
  append__25 = query_predicate("foo:h", 1);
}
void append__end(worker_t *w) {
  unregister_cbool("append:le#3", 2);
  unregister_cinsnp("append:ap", 3);
  unregister_cinsnp("append:ap#0", 3);
  unregister_cbool("append:ap#1", 3);
  unregister_cinsnp("append:ap#2", 3);
  unregister_cinsnp("append:ap#3", 3);
  unregister_cinsnp("append:ag", 3);
  unregister_cinsnp("append:ag#0", 3);
  unregister_cbool("append:ag#1", 3);
  unregister_cinsnp("append:ag#2", 3);
  unregister_cinsnp("append:ag#3", 3);
  unregister_cvoid("append:gb", 1);
  unregister_cinsnp("append:gg", 0);
}
