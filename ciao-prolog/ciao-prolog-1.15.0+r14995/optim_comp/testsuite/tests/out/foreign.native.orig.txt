#include <engine/basiccontrol.native.h>
#include <engine/engine__ciao_gluecode.h>
definition_t *foreign__0;
definition_t *foreign__1;
definition_t *foreign__2;
void obtain_list(long, long *, long **);
void show_list(long, long *);
bool_t gluecode_obtain_list(worker_t *);
bool_t gluecode_show_list(worker_t *);
bool_t gluecode_obtain_list(worker_t *w) {
  ERR__FUNCTOR("foreign:obtain_list", 3);
  ciao_term t0;
  ciao_term t1;
  ciao_term t2;
  long c0;
  long c1;
  long *c2;
  ciao_term u1;
  ciao_term u2;
  DECL_STATE;
  INIT_STATE;
  ciao_frame_begin_s(state);
  t0 = ciao_ref(state, X(0));
  t1 = ciao_ref(state, X(1));
  t2 = ciao_ref(state, X(2));
  if (!ciao_is_integer_s(state, t0)) ERROR_IN_ARG(X(0), 0 + 1, INTEGER);
  c0 = ciao_to_integer_s(state, t0);
  IMPLICIT_STATE;
  GLUECODE_TRY(obtain_list(c0, &c1, &c2));
  u1 = ciao_integer_s(state, c1);
  u2 = ciao_int_listn(state, c2, c1);
  if (!ciao_unify_s(state, u1, t1)) CBOOL__FAIL;
  if (!ciao_unify_s(state, u2, t2)) CBOOL__FAIL;
  ciao_frame_end_s(state);
  CBOOL__PROCEED;
}
bool_t gluecode_show_list(worker_t *w) {
  ERR__FUNCTOR("foreign:show_list", 2);
  ciao_term t0;
  ciao_term t1;
  long c0;
  long *c1;
  DECL_STATE;
  INIT_STATE;
  ciao_frame_begin_s(state);
  t0 = ciao_ref(state, X(0));
  t1 = ciao_ref(state, X(1));
  if (!ciao_is_int_list(state, t1)) USAGE_FAULT("foreign interface: list length or data inconsistency.");
  if (!ciao_is_integer_s(state, t0)) ERROR_IN_ARG(X(0), 0 + 1, INTEGER);
  c1 = ciao_list_to_int_array(state, t1);
  c0 = ciao_to_integer_s(state, t0);
  IMPLICIT_STATE;
  GLUECODE_TRY(show_list(c0, c1));
  ciao_frame_end_s(state);
  CBOOL__PROCEED;
}
bool_t prolog_random(worker_t *);
void foreign__init(worker_t *w) {
  foreign__0 = register_cbool("foreign:obtain_list", 3, gluecode_obtain_list);
  foreign__1 = register_cbool("foreign:show_list", 2, gluecode_show_list);
  foreign__2 = register_cbool("foreign:random", 1, prolog_random);
  register_builtin("foreign:random", 1, prolog_random);
}
void foreign__end(worker_t *w) {
  unregister_cbool("foreign:obtain_list", 3);
  unregister_cbool("foreign:show_list", 2);
  unregister_cbool("foreign:random", 1);
}
