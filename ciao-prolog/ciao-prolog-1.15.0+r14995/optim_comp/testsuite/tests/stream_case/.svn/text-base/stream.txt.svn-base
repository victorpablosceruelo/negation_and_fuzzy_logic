Some numbers for the stream interpreter (naive version).

Name                Speed Description
ptoc_stream             1 Prolog version using bytecode
ptoc_stream_c          14 handmade translation to C using malloc
ptoc_stream_c_array    33 handmade, nontrivial translation to C using arrays
ptoc_stream(2)        1.5 Compiled to C (no analysis info)

Use dostream.sh to compile.

jfran@huygens:~/svn/ciaojf/testsuite/ptoc$ ~/bin/energy --show; time ./ptoc_stream_c_array; time ./ptoc_stream_c; time ./ptoc_stream.car/run

real	0m0.097s
user	0m0.082s
sys	0m0.015s

real	0m0.233s
user	0m0.196s
sys	0m0.035s

real	0m2.811s
user	0m2.748s
sys	0m0.038s

(enable ptoc properties)

How to compile and run the ptoc version:
  rm ptoc_stream.car/ -rf; ciaotool uc; ./dostream.sh; ./ptoc_stream.car/run




Notes about changes in the initial Prolog version:

  predicates like this, where the first is an input argument and the
  second the output:

    a([], []) :- !.
    a([X|Xs], [Y|Ys]) :- a(Xs, Ys).

  are not correctly written. The correct version would be:

    a([], Zs) :- !, Zs = [].
    a([X|Xs], Zs) :- Zs = [Y|Ys], a(Xs, Ys).

  In the first version the guard is polluted with other operations and
  compilation cannot emit efficient code. That is why it is better to
  use if-then-else sometimes. 

  However indexing and indexing transformation (index=true) may in
  part solve the problem! (in those cases user cuts may be
  unnecessary). Other transformation is factorizing heads.
