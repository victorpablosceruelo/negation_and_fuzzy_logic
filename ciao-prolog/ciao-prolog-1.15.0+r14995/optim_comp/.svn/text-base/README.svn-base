===========================================================================
                      Optimizing Ciao Compiler
===========================================================================

INTRODUCTION
---------------------------------------------------------------------------

OptimComp is the experimental branch of the Ciao compiler and engine that
implements the techniques described in:

  Jose F. Morales
  "Advanced Compilation Techniques for Logic Programming".
  Ph.D. Thesis, July 2010
  http://www.clip.dia.fi.upm.es/~clip/papers/jfran-phd.pdf

Due to the experimental nature of the extensions, some of them
introduced slight language incompatibilities, this code is still not
part of the default Ciao compiler and engine. The most relevant
features and differences in this branch can be classified in:

  a) Programming style and module system

     - improved module system with OO features
     - scopes and fluid variables (similar to extended DCGs)
     - a dialect for writing low-level imperative code (imProlog) in a
       logic style (used to write our emulator and some builtins)

  b) Engine and runtime
   
     - highly parametric tagging schemes (supporting 64-bits)
     - many parts of the emulator generated automatically from:
       * imProlog code
       * an abstract machine emulator
     - backend for compilation to C (mixed with bytecode)
     - backend for other languages (currently JavaScript, under
       development)

CURRENT STATUS
---------------------------------------------------------------------------

We are in the process of merging the main and experimental branches of
the compiler and engines in Ciao. The integration plan is composed of
these phases (which may overlap a bit in time):

 - merge of libraries (removing incompatibilities and using conditional
   code as last resort)

 - merge of engine and C code (note that many code in optim_comp is
   automatically generated)

 - merge of the compiler (which includes merging of the program
   representation)

BUGS AND MISSING FEATURES
---------------------------------------------------------------------------

 - system-wide installation is not possible; this feature will be
   recovered as the build/installation code is merged with the main
   branch.

QUICK INSTALLATION INSTRUCTIONS (WITHOUT THE REST OF CIAO)
---------------------------------------------------------------------------
 
Due to its few dependencies, OptimComp can be compiled and used even
without a full Ciao installation.

  * Setting up the environment for 'bash'

    $ eval `./ciaotool bash-env`

  * Setting up the environment for 'csh'

    $ eval `./ciaotool csh-env`

  * Compiling the system for local usage

    $ ciaotool build

All the compilation files and binaries will be stored in a private
directory '~/.ciao-cache' in your home directory. Nothing is written
in the sources and no installation is required to use the system, as
long as the sources are accessible and the environment is set. If the
sources directory changes, the environment can be updated without
recompiling. If the sources change, you may consider rebuilding the
binaries.



