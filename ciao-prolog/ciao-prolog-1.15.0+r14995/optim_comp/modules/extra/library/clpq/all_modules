set_prolog_flag(compress_lib, no ).
use_module(library(gen_asr_file)).
make_po('clpcompiler_q.pl').
gaf('clpcompiler_q.pl').
display(user_error,'clpcompiler_q.pl').
nl(user_error).
make_po('clpq_attr.pl').
gaf('clpq_attr.pl').
display(user_error,'clpq_attr.pl').
nl(user_error).
make_po('clpq_dump.pl').
gaf('clpq_dump.pl').
display(user_error,'clpq_dump.pl').
nl(user_error).
make_po('clpq_rt.pl').
gaf('clpq_rt.pl').
display(user_error,'clpq_rt.pl').
nl(user_error).
make_po('clpqtr.pl').
gaf('clpqtr.pl').
display(user_error,'clpqtr.pl').
nl(user_error).
make_po('eval_q.pl').
gaf('eval_q.pl').
display(user_error,'eval_q.pl').
nl(user_error).
make_po('expand_q.pl').
gaf('expand_q.pl').
display(user_error,'expand_q.pl').
nl(user_error).
make_po('solver_q.pl').
gaf('solver_q.pl').
display(user_error,'solver_q.pl').
nl(user_error).
nl.
