;;---------------------------------------------------------------------------
;; Emacs additional support for the CiaoPP preprocessor 
;; when working on Java files (complementary to ciao.el).
;; M. Hermenegildo
;;---------------------------------------------------------------------------

;; Setup: add the following lines to your .emacs (editing the load
;; path) after the lines included automatically by the Ciao installation.

;; ;; Auto loading of java-ciaopp sub mode.
;; (setq load-path 
;;       (cons "/home/herme/MySVN/Systems/CiaoDE/ciao/emacs-mode" load-path)) 
;; (defun load-java-ciaopp-mode ()
;;  (require 'java-ciaopp)
;;  (java-ciaopp-setup))
;; (add-hook 'java-mode-hook 'load-java-ciaopp-mode)

; ---------------------------------------------------------------------------

(require 'easymenu)
(require 'ciao)
(provide 'java-ciaopp)

; ---------------------------------------------------------------------------

(defun java-ciaopp-setup ()
  (interactive)
  ;; option in the menu
  (easy-menu-define ciao-java-menu-ciaopp java-mode-map 
    "CiaoPP Mode Menus" ciao-mode-menus-java)
  (easy-menu-add ciao-java-menu-ciaopp)
  ;; toolbar
  (ciao-java-setup-tool-bar)
 )

; ---------------------------------------------------------------------------
; Key bindings

(define-key java-mode-map "\C-cA"    'ciao-analyze-buffer)
(define-key java-mode-map "\C-cT"    'ciao-check-assertions)
(define-key java-mode-map "\C-cO"    'ciao-optimize-buffer)
(define-key java-mode-map "\C-cM"    'ciao-browse-preprocessor-options)
(define-key java-mode-map "\C-c\C-v" 'ciao-show-preprocessor-output)
(define-key java-mode-map "\C-c`"    'ciao-find-last-run-errors)
(define-key java-mode-map "\C-ce"    'ciao-unmark-last-run-errors)
(define-key java-mode-map "\C-c\C-r" 'run-ciao-preprocessor)
(define-key java-mode-map "\C-ch"    'ciao-fontify-buffer)
(define-key java-mode-map "\C-c\C-i" 'ciao-help-on-current-symbol)
(define-key java-mode-map "\C-c/"    'ciao-complete-current-symbol)
(define-key java-mode-map "\C-c\C-m" 'ciao-goto-ciao-manuals)
(define-key java-mode-map "\C-ct"    'run-ciao-toplevel)
(define-key java-mode-map "\C-cl"    'ciao-load-buffer)

; ---------------------------------------------------------------------------
; Menus

(defconst ciao-mode-menus-java
  (list "CiaoPP"
     "CiaoPP Java Preprocessor (beta)"
     "----"
     "----"
     ["Analyze buffer"                         ciao-analyze-buffer t]
     ["Check buffer assertions"                ciao-check-assertions t]
     ["Optimize buffer"                        ciao-optimize-buffer t]
     ["Browse analysis/checking/optimizing options"         
                                           ciao-browse-preprocessor-options t]
     "----"
     ["Show last preprocessor output file"     ciao-show-preprocessor-output t]
     ["Go to (next) preproc/compiler error msg" ciao-find-last-run-errors t]
     ["Remove error (and dbg) marks in buffers"  ciao-unmark-last-run-errors t]
     "----"
;;      ["Preprocess buffer (w/previous options) and show output"  
;;                                 ciao-preprocess-buffer-and-show-output t]
     ["(Re)Start Ciao preprocessor"              run-ciao-preprocessor t]
     ["Update syntax-based coloring"             ciao-fontify-buffer t]
     "----"
     ["Go to manual page for symbol under cursor" ciao-help-on-current-symbol]
     ["Complete symbol under cursor"        ciao-complete-current-symbol t]
     ["Ciao manuals area in info index" ciao-goto-ciao-manuals t]
     "----"
     ["(Re)Start Ciao top level"                 run-ciao-toplevel t]
     ["(Re)Load buffer into top level"           ciao-load-buffer  t]
     "----"
     ["Customize all Ciao environment settings" 
                                       (customize-group 'ciao-environment)] 
     ["Ciao environment (mode) version" ciao-report-mode-version t]
     )
  "Menus for CiaoPP mode.")

; ---------------------------------------------------------------------------
; Tool bar

(defun ciao-java-setup-tool-bar () 
  (interactive)
  (set (make-local-variable 'tool-bar-map) 
       (if (display-graphic-p) 
	   (let ((tool-bar-map (make-sparse-keymap)))
;; General stuff
;; 	     (tool-bar-add-item "icons/ciaopl" 'find-file 'find-file 
;;               :help "Open or create a (Ciao) file") 
	     (tool-bar-add-item-from-menu 'dired "open")
	     (tool-bar-add-item-from-menu 'kill-this-buffer "close")
	     (tool-bar-add-item-from-menu 'save-buffer "save" nil
			       :visible '(or buffer-file-name
					     (not (eq 'special
						      (get major-mode
							   'mode-class)))))
	     (tool-bar-add-item-from-menu 'write-file "saveas" nil
			       :visible '(or buffer-file-name
					     (not (eq 'special
						      (get major-mode
							   'mode-class)))))
	     (tool-bar-add-item-from-menu 'undo "undo" nil
			       :visible '(not (eq 'special (get major-mode
								'mode-class))))
	     (tool-bar-add-item-from-menu 'kill-region "cut" nil
			       :visible '(not (eq 'special (get major-mode
								'mode-class))))
	     (tool-bar-add-item-from-menu 'menu-bar-kill-ring-save "copy")
	     (tool-bar-add-item-from-menu 'yank "paste" nil
			       :visible '(not (eq 'special (get major-mode
								'mode-class))))
	     (tool-bar-add-item-from-menu 
                               'nonincremental-search-forward "search")
	     (tool-bar-add-item-from-menu 'print-buffer "print")
;; Ciao-specific stuff. Stuff that is not in menus will not work.
	     (tool-bar-add-item-from-menu 
	      'ciao-analyze-buffer "icons/ciaoanalysis" java-mode-map)
 	     (tool-bar-add-item-from-menu 
 	      'ciao-check-assertions "icons/checkassertions" java-mode-map)
 	     (tool-bar-add-item-from-menu 
 	      'ciao-optimize-buffer "icons/ciaopeval" java-mode-map)
	     (tool-bar-add-item-from-menu 
 	      'ciao-browse-preprocessor-options
 	      "icons/ciaocustomize" java-mode-map)
	     (tool-bar-add-item-from-menu 
	      'ciao-find-last-run-errors "jump_to" java-mode-map)
	     (tool-bar-add-item-from-menu 
	      'ciao-unmark-last-run-errors "icons/clear" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-debug-buffer "icons/ciaodebug" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-gen-buffer-doc "icons/lpdoc" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-start-viewer "icons/lpdocview" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'run-ciao-toplevel "icons/ciao" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-load-buffer "icons/ciaoload" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-check-buffer-syntax "icons/ciaoasr" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-make-exec "icons/ciaoexeout" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-insert-script-header "icons/ciaoscrt" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-make-po "icons/ciaopo" java-mode-map)
;; 	     (tool-bar-add-item-from-menu 
;; 	      'ciao-make-exec "icons/ciaoitf" java-mode-map)
	     (tool-bar-add-item "icons/manuals" 
              'ciao-goto-ciao-manuals 'ciao-goto-ciao-manuals 
	      :help "Go to area containing the Ciao system manuals")
	     (tool-bar-add-item-from-menu 
	      'ciao-help-on-current-symbol "icons/wordhelp" java-mode-map)
	     (tool-bar-add-item-from-menu 
	      'ciao-complete-current-symbol "icons/complete" java-mode-map)
	     (tool-bar-add-item "preferences" 
				(lambda ()
				  (interactive)
				  (customize-group 'ciao-environment))
				'ciao-customize
 	      :help "Edit (customize) preferences for Ciao, CIaoPP, LPdoc")
	     (tool-bar-add-item-from-menu 
	      'ciao-fontify-buffer "icons/ciaorehighlight" java-mode-map)
	     tool-bar-map))))

; ---------------------------------------------------------------------------

