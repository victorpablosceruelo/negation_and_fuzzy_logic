#!/bin/bash
##
## runtool.sh
## 
## Made by Edison Mera
## Login   <edison@clip.dia.fi.upm.es>
## 
## Started on  Tue Aug 14 12:33:19 2007 Edison Mera
## Last update Mon Jul 27 14:40:21 2009 Edison Mera
##

set -e

TIMESTAMP=`date +%G%m%d_%H%M%S`

COMMAND=$1

SAVELOGFILES=<SAVELOGFILES>

# ---------------------------------------------------------------------------
# The active branches that we want to treat
#
# Note: branches are identified by the relative path in the
#       repository, thus we treat trunk/ and tags/V as branches.

function svn_active_branches() {
    MAKEOPTS="-f SHARED HOSTNAME=${HOSTNAME}"
    REPOSITORYROOT=`make -s ${MAKEOPTS} CIAOVERSION= CIAOPPVERSION= LPDOCVERSION= get_repositoryroot`
    # (uses 'sed' to remove comments from the file)
    svn cat ${REPOSITORYROOT}/ciaobot-config/active | sed "/#.*/d"

#    svn ls ${REPOSITORYROOT}/branches/|sed -e s:'/'::g
#    echo ES_PASS-20081221
#    echo branches/dummybranch
}

# ---------------------------------------------------------------------------

# input: BRANCH environment variable
function domake() {
    MAKEOPTS="-f SHARED BRANCH=${BRANCH} HOSTNAME=${HOSTNAME}"
    NEWVERSION=`make -s ${MAKEOPTS} CIAOVERSION= CIAOPPVERSION= LPDOCVERSION= get_newversion`
    if [ x${NEWVERSION} = x ]
    then
	echo ":: Error: At `date`, branch '${BRANCH}', unable to get repository revision number." 1>&2
	echo ":: Error: See the command: make -s -f SHARED HOSTNAME=${HOSTNAME} CIAOVERSION= CIAOPPVERSION= LPDOCVERSION= get_newversion" 1>&2
	exit 1
    fi
    LOGSRCPATH=`make -s ${MAKEOPTS} NEWVERSION=${NEWVERSION} CIAOVERSION= CIAOPPVERSION= LPDOCVERSION= get_logsrcpath`
    
    LOGDIR="${LOGSRCPATH}regr/command/${COMMAND}"
    mkdir -p "${LOGDIR}"
    
    if [ x${SAVELOGFILES} = x"yes" ]
    then
	domake_ $* >> "${LOGDIR}/${TIMESTAMP}.log" 2>&1
    else
	domake_ $*
    fi
}

function domake_() {
    # TODO: message should go to stderr (but it has to be tested)
    if [ x${FIXEDBRANCH} = x"" ]; then
	echo ":: In branch '${BRANCH}'" 1>&2
    else
	true
    fi
    make ${MAKEOPTS} TIMESTAMP=${TIMESTAMP} SOURCETYPE=svn NEWVERSION=${NEWVERSION} $*
}

# ---------------------------------------------------------------------------

make_all_branches() {
    if [ x${FIXEDBRANCH} = x"" ]; then
	# Try in all branches
	for b in `svn_active_branches`; do
	    BRANCH="${b}"
	    domake $*
	done
    else
	# Try in the given branch
	# TODO: This code is ugly; rewrite the ciaobot logic
	# TODO: used for showlpv, do not show any message...
	BRANCH="${FIXEDBRANCH}"
	domake ${FIXEDBRANCH} $*
    fi
}

make_all_branches $*
