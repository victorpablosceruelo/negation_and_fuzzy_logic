         A prototype for a Ciao back-end to Javascript
         =============================================
                      
                      Jose F. Morales

---------------------------------------------------------------------------
Notes:

  - Terms are translated as Javascript objects. No heap stack is
    created.

  - We distinguish between normal code and basal code. Predicates
    marked as basal are compiled at the emulator level. The language
    runtime is defined in this way. This is similar to what has been
    done in ImProlog for C.

  - It has been designed to output code that runs efficiently with
    modern JIT-based JavaScript engines.

---------------------------------------------------------------------------
Status:

  - The entry point for the compiler is core/compiler/ptojs__main.pl
    (invoked from apps/comp_js.pl)

  - Preliminary support for attributed variables.

  - Indexing is not implemented.

  - Although the input language is very close to optim_comp/complang,
    the language is not 100% compatible yet. Many compiler parts need
    to be integrated with the main compilation framework.

  - The back-end is in an alpha state, but it is able to execute some
    classic benchmarks.

  - Some primitive interface with the JS objects (as well as the DOM)
    is implemented.

---------------------------------------------------------------------------
How to debug Javascript code with NodeJS:

 - Print x.__proto__ to show the prototype of a datum.
 - Use node-inspector, as follows:

    $ node-inspector &
    $ node --debug-brk myapp.js

 In practice, tracing programs with console.log messages seem much
 easier.
 
---------------------------------------------------------------------------
How to test this backend:
  
  $ ciaotool update-apps # rebuilds some apps, including the compiler with JS backend 
  $ ciaotool js-backend check-all # check that all modules are compiled correctly
  $ ciaotool js-backend regr-all  # check that all tests modules produce the correct output

  Make sure that you have fetched a copy of the CiaoRegressionData
  repository in CIAOROOT/.

---------------------------------------------------------------------------
Running individual examples:

  $ cd examples/
  $ ciaotool js-backend --target-platform nodejs try-exec hello_world # run 'hello_world' on the console
  $ ciaotool js-backend --target-platform nodejs try-exec testsuite_run # run 'testsuite_run' on the console
  $ ciaotool js-backend --target-platform chrome try-exec testsuite_ui # run 'testsuite_ui' on a browser
  $ ciaotool js-backend --target-platform chrome try-exec demo # run 'demo' on a browser

  (execute 'ciaosetup js-backend' for help)

