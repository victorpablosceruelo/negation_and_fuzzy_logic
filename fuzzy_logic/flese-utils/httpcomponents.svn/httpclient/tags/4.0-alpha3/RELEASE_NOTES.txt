Release 4.0 Alpha 3
-------------------

ALPHA3 release brings another round of API refinements and improvements in 
functionality. As of this release HttpClient requires Java 5 compatible 
runtime environment and takes full advantage of generics and new concurrency
primitives.     

This release also introduces new default cookie policy that selects a cookie 
specification depending on the format of cookies sent by the target host. 
It is no longer necessary to know beforehand what kind of HTTP cookie support 
the target host provides. HttpClient is now able to pick up either a lenient 
or a strict cookie policy depending on the compliance level of the target host.

Another notable improvement is a completely reworked support for multipart 
entities based on Apache mime4j library.

-------------------

HttpClient 3.x features that have NOT yet been ported:
-------------------

* NTLM authentication scheme

-------------------

Changelog:
-------------------

* [HTTPCLIENT-742] common interface for HttpRoute and RouteTracker
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-741] Fixed concurrency issues in AbstractClientConnAdapter.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-726] testcase for spurious wakeups in ThreadSafeClientConnManager
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-643] Automatic connect fail-over for multi-home remote servers.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-735] unsetting of DEFAULT_PROXY and FORCED_ROUTE in hierarchies
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-723] route planner based on java.net.ProxySelector
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-740] don't start connection GC thread in pool constructor
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-736] route planners use SchemeRegistry instead of ConnManager
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-730] Fixed rewriting of URIs containing escaped characters
  Contributed by Sam Berlin <sberlin at gmail.com> and 
  Oleg Kalnichevski <olegk at apache.org>
 
* [HTTPCLIENT-667] Added 'Meta' cookie policy that selects a cookie 
  specification depending on the format of the cookie(s).
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-729] Move HttpRoute and related classes to routing package.
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-725] Use TimeUnit arguments for timeouts in connection manager.
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-677] Connection manager no longer uses Thread.interrupt().
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-716] Allow application-defined routes.
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-712] Improve HttpRoute API
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-711] Bad route computed for redirected requests
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-715] Remove RoutedRequest from API
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-705] Fixed incorrect handling of URIs with null path component.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-688] HttpOptions#getAllowedMethods can now handle multiple 
  Allow headers.
  Contributed by Andrea Selva <selva.andre at gmail.com>

--------------------------------------

HttpClient API changes (generated by JarDiff 0.2)
--------------------------------------
Class removed: 
  public abstract org.apache.http.client.RoutedRequest extends java.lang.Object
Class removed: 
  public org.apache.http.client.RoutedRequest.Impl extends java.lang.Object implements org.apache.http.client.RoutedRequest
Class removed: 
  public org.apache.http.conn.BasicRouteDirector extends java.lang.Object implements org.apache.http.conn.HttpRouteDirector
Class removed: 
  public final org.apache.http.conn.HttpRoute extends java.lang.Object implements java.lang.Cloneable
Class removed: 
  public abstract org.apache.http.conn.HttpRouteDirector extends java.lang.Object
Class removed: 
  public abstract org.apache.http.conn.HttpRoutePlanner extends java.lang.Object
Class removed: 
  public final org.apache.http.conn.RouteTracker extends java.lang.Object implements java.lang.Cloneable
Class removed: 
  public abstract org.apache.http.conn.ssl.HostnameVerifier extends java.lang.Object implements javax.net.ssl.HostnameVerifier
Class removed: 
  public org.apache.http.impl.conn.tsccm.ConnPoolByRoute.WaitingThread extends java.lang.Object
Class added: 
  public org.apache.http.client.methods.HttpDelete extends org.apache.http.client.methods.HttpRequestBase
Class added: 
  public org.apache.http.conn.params.HttpRouteParams extends java.lang.Object
Class added: 
  public org.apache.http.conn.routing.BasicRouteDirector extends java.lang.Object implements org.apache.http.conn.routing.HttpRouteDirector
Class added: 
  public final org.apache.http.conn.routing.HttpRoute extends java.lang.Object implements org.apache.http.conn.routing.RouteInfo, java.lang.Cloneable
Class added: 
  public abstract org.apache.http.conn.routing.HttpRouteDirector extends java.lang.Object
Class added: 
  public abstract org.apache.http.conn.routing.HttpRoutePlanner extends java.lang.Object
Class added: 
  public abstract org.apache.http.conn.routing.RouteInfo extends java.lang.Object
Class added: 
  public final org.apache.http.conn.routing.RouteInfo.LayerType extends java.lang.Enum
Class added: 
  public final org.apache.http.conn.routing.RouteInfo.TunnelType extends java.lang.Enum
Class added: 
  public final org.apache.http.conn.routing.RouteTracker extends java.lang.Object implements org.apache.http.conn.routing.RouteInfo, java.lang.Cloneable
Class added: 
  public abstract org.apache.http.conn.ssl.X509HostnameVerifier extends java.lang.Object implements javax.net.ssl.HostnameVerifier
Class added: 
  public org.apache.http.conn.util.SocketUtils extends java.lang.Object
Class added: 
  public org.apache.http.impl.client.RedirectLocations extends java.lang.Object
Class added: 
  public abstract org.apache.http.impl.client.RoutedRequest extends java.lang.Object
Class added: 
  public org.apache.http.impl.client.RoutedRequest.Impl extends java.lang.Object implements org.apache.http.impl.client.RoutedRequest
Class added: 
  public org.apache.http.impl.conn.ProxySelectorRoutePlanner extends java.lang.Object implements org.apache.http.conn.routing.HttpRoutePlanner
Class added: 
  public org.apache.http.impl.conn.tsccm.WaitingThread extends java.lang.Object
Class added: 
  public org.apache.http.impl.cookie.BestMatchSpec extends java.lang.Object implements org.apache.http.cookie.CookieSpec
Class added: 
  public org.apache.http.impl.cookie.BestMatchSpecFactory extends java.lang.Object implements org.apache.http.cookie.CookieSpecFactory
Class added: 
  public org.apache.http.impl.cookie.NetscapeDraftHeaderParser extends java.lang.Object
Class changed: org.apache.http.client.ClientRequestDirector
  Methods removed:
    public abstract org.apache.http.HttpResponse execute(org.apache.http.client.RoutedRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;

  Methods added:
    public abstract org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;

Class changed: org.apache.http.client.CookieStore
  Methods removed:
    public abstract org.apache.http.cookie.Cookie[] getCookies();

  Methods added:
    public abstract java.util.List getCookies();

Class changed: org.apache.http.client.HttpClient
  Methods removed:
    public abstract org.apache.http.HttpResponse execute(org.apache.http.client.RoutedRequest) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;
    public abstract org.apache.http.HttpResponse execute(org.apache.http.client.RoutedRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;

  Methods added:
    public abstract org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;
    public abstract org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;

Class changed: org.apache.http.client.methods.HttpOptions
  Method changed:
  old:
    public java.util.Set getAllowedMethods(org.apache.http.HttpResponse) throws org.apache.http.ParseException;

  new:
    public java.util.Set getAllowedMethods(org.apache.http.HttpResponse);

Class changed: org.apache.http.client.params.CookiePolicy
  Fields added:
    public final static java.lang.String BEST_MATCH = best-match;

Class changed: org.apache.http.client.utils.URLUtils
  Methods added:
    public static java.net.URI createURI(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws java.net.URISyntaxException;
    public static java.net.URI rewriteURI(java.net.URI, org.apache.http.HttpHost) throws java.net.URISyntaxException;
    public static java.net.URI rewriteURI(java.net.URI, org.apache.http.HttpHost, boolean) throws java.net.URISyntaxException;

Class changed: org.apache.http.conn.ClientConnectionManager
  Methods removed:
    public abstract void closeIdleConnections(long);
    public abstract org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.HttpRoute) throws java.lang.InterruptedException;
    public abstract org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.HttpRoute, long) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;

  Methods added:
    public abstract void closeIdleConnections(long, java.util.concurrent.TimeUnit);
    public abstract org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute) throws java.lang.InterruptedException;
    public abstract org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute, long, java.util.concurrent.TimeUnit) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;

Class changed: org.apache.http.conn.ManagedClientConnection
  Methods removed:
    public abstract org.apache.http.conn.HttpRoute getRoute();
    public abstract void open(org.apache.http.conn.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;

  Methods added:
    public abstract org.apache.http.conn.routing.HttpRoute getRoute();
    public abstract void open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;

Class changed: org.apache.http.conn.params.ConnRoutePNames
  Fields added:
    public final static java.lang.String FORCED_ROUTE = http.route.forced-route;
    public final static java.lang.String LOCAL_ADDRESS = http.route.local-address;

  Field changed:
  old:
    public final static java.lang.String DEFAULT_PROXY = http.default-proxy;

  new:
    public final static java.lang.String DEFAULT_PROXY = http.route.default-proxy;

Class changed: org.apache.http.conn.params.HttpConnParams
  Fields removed:
    public final static java.lang.String DEFAULT_PROXY = http.default-proxy;

Class changed: org.apache.http.conn.params.HttpConnectionManagerParams
  Methods removed:
    public static int getMaxConnectionsPerHost(org.apache.http.params.HttpParams, org.apache.http.conn.HttpRoute);
    public static void setMaxConnectionsPerHost(org.apache.http.params.HttpParams, org.apache.http.conn.HttpRoute, int);

  Methods added:
    public static int getMaxConnectionsPerHost(org.apache.http.params.HttpParams, org.apache.http.conn.routing.HttpRoute);
    public static void setMaxConnectionsPerHost(org.apache.http.params.HttpParams, org.apache.http.conn.routing.HttpRoute, int);

Class changed: org.apache.http.conn.ssl.AbstractVerifier
  Methods added:
    public AbstractVerifier();

  Class descriptor changed:
  old:
    public abstract org.apache.http.conn.ssl.AbstractVerifier extends java.lang.Object implements org.apache.http.conn.ssl.HostnameVerifier
  new:
    public abstract org.apache.http.conn.ssl.AbstractVerifier extends java.lang.Object implements org.apache.http.conn.ssl.X509HostnameVerifier
Class changed: org.apache.http.conn.ssl.SSLSocketFactory
  Methods removed:
    public org.apache.http.conn.ssl.HostnameVerifier getHostnameVerifier();
    public void setHostnameVerifier(org.apache.http.conn.ssl.HostnameVerifier);

  Methods added:
    public org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier();
    public void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier);

Class changed: org.apache.http.cookie.CookieIdentityComparator
  Methods removed:
    public int compare(java.lang.Object, java.lang.Object);

  Methods added:
    public int compare(org.apache.http.cookie.Cookie, org.apache.http.cookie.Cookie);

  Class descriptor changed:
  old:
    public org.apache.http.cookie.CookieIdentityComparator extends java.lang.Object implements java.util.Comparator
  new:
    public org.apache.http.cookie.CookieIdentityComparator extends java.lang.Object implements java.io.Serializable, java.util.Comparator
Class changed: org.apache.http.cookie.CookiePathComparator
  Methods removed:
    public int compare(java.lang.Object, java.lang.Object);

  Methods added:
    public int compare(org.apache.http.cookie.Cookie, org.apache.http.cookie.Cookie);

  Class descriptor changed:
  old:
    public org.apache.http.cookie.CookiePathComparator extends java.lang.Object implements java.util.Comparator
  new:
    public org.apache.http.cookie.CookiePathComparator extends java.lang.Object implements java.io.Serializable, java.util.Comparator
Class changed: org.apache.http.cookie.CookieSpec
  Methods removed:
    public abstract org.apache.http.Header[] formatCookies(org.apache.http.cookie.Cookie[]);
    public abstract org.apache.http.cookie.Cookie[] parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

  Methods added:
    public abstract java.util.List formatCookies(java.util.List);
    public abstract java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

Class changed: org.apache.http.impl.client.AbstractHttpClient
  Methods removed:
    protected abstract org.apache.http.conn.HttpRoutePlanner createHttpRoutePlanner();
    protected abstract org.apache.http.client.RoutedRequest determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException;
    public org.apache.http.HttpResponse execute(org.apache.http.client.RoutedRequest) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;
    public final org.apache.http.HttpResponse execute(org.apache.http.client.RoutedRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;
    public final synchronized org.apache.http.conn.HttpRoutePlanner getRoutePlanner();
    public synchronized void setInterceptors(java.util.List);
    public synchronized void setRoutePlanner(org.apache.http.conn.HttpRoutePlanner);

  Methods added:
    protected abstract org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner();
    public final org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;
    public final org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;
    public final synchronized org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner();
    public synchronized void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner);

  Class descriptor changed:
  old:
    public abstract org.apache.http.impl.client.AbstractHttpClient extends java.lang.Object implements org.apache.http.client.HttpClient, org.apache.http.protocol.HttpRequestInterceptorList, org.apache.http.protocol.HttpResponseInterceptorList
  new:
    public abstract org.apache.http.impl.client.AbstractHttpClient extends java.lang.Object implements org.apache.http.client.HttpClient
Class changed: org.apache.http.impl.client.BasicCookieStore
  Methods removed:
    public synchronized org.apache.http.cookie.Cookie[] getCookies();

  Methods added:
    public synchronized java.util.List getCookies();

Class changed: org.apache.http.impl.client.ClientParamsStack
  Methods removed:
    public boolean isParameterSet(java.lang.String);

  Methods added:
    public boolean removeParameter(java.lang.String);

Class changed: org.apache.http.impl.client.DefaultClientRequestDirector
  Methods removed:
    public DefaultClientRequestDirector(org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.params.HttpParams);
    protected org.apache.http.conn.ManagedClientConnection allocateConnection(org.apache.http.conn.HttpRoute, long) throws org.apache.http.HttpException, org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;
    protected org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.HttpRoute, org.apache.http.protocol.HttpContext);
    protected boolean createTunnelToProxy(org.apache.http.conn.HttpRoute, int, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;
    protected boolean createTunnelToTarget(org.apache.http.conn.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;
    protected void establishRoute(org.apache.http.conn.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;
    public org.apache.http.HttpResponse execute(org.apache.http.client.RoutedRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;
    protected org.apache.http.client.RoutedRequest handleResponse(org.apache.http.client.RoutedRequest, org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;

  Methods added:
    public DefaultClientRequestDirector(org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.params.HttpParams);
    protected org.apache.http.conn.ManagedClientConnection allocateConnection(org.apache.http.conn.routing.HttpRoute, long) throws org.apache.http.HttpException, org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;
    protected org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext);
    protected boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute, int, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;
    protected boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;
    protected org.apache.http.impl.client.RoutedRequest determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException;
    protected void establishRoute(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;
    public org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException, java.lang.InterruptedException;
    protected org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest, org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;

  Fields added:
    protected final org.apache.http.conn.routing.HttpRoutePlanner routePlanner;

Class changed: org.apache.http.impl.client.DefaultHttpClient
  Methods removed:
    protected org.apache.http.conn.HttpRoutePlanner createHttpRoutePlanner();
    protected org.apache.http.client.RoutedRequest determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException;

  Methods added:
    protected org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner();

Class changed: org.apache.http.impl.conn.AbstractClientConnAdapter
  Methods removed:
    protected final void assertWrappedConn();

  Methods added:
    protected final void assertNotAborted() throws java.io.InterruptedIOException;
    protected final void assertValid(org.apache.http.conn.OperatedClientConnection);
    protected void detach();
    protected org.apache.http.conn.ClientConnectionManager getManager();
    protected org.apache.http.conn.OperatedClientConnection getWrappedConnection();

  Fields removed:
    protected org.apache.http.conn.ClientConnectionManager connManager;
    protected boolean markedReusable;
    protected org.apache.http.conn.OperatedClientConnection wrappedConnection;

Class changed: org.apache.http.impl.conn.AbstractPoolEntry
  Methods removed:
    protected AbstractPoolEntry(org.apache.http.conn.OperatedClientConnection, org.apache.http.conn.HttpRoute);
    public void open(org.apache.http.conn.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;

  Methods added:
    protected AbstractPoolEntry(org.apache.http.conn.OperatedClientConnection, org.apache.http.conn.routing.HttpRoute);
    public void open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;

Class changed: org.apache.http.impl.conn.AbstractPooledConnAdapter
  Methods removed:
    public org.apache.http.conn.HttpRoute getRoute();
    public void open(org.apache.http.conn.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;

  Methods added:
    public org.apache.http.conn.routing.HttpRoute getRoute();
    public void open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;

  Class descriptor changed:
  old:
    public abstract org.apache.http.impl.conn.AbstractPooledConnAdapter extends org.apache.http.impl.conn.AbstractClientConnAdapter implements org.apache.http.conn.ManagedClientConnection
  new:
    public abstract org.apache.http.impl.conn.AbstractPooledConnAdapter extends org.apache.http.impl.conn.AbstractClientConnAdapter
Class changed: org.apache.http.impl.conn.DefaultHttpRoutePlanner
  Methods removed:
    public DefaultHttpRoutePlanner(org.apache.http.conn.ClientConnectionManager);
    public org.apache.http.conn.HttpRoute determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException;
    public void setConnectionManager(org.apache.http.conn.ClientConnectionManager);

  Methods added:
    public DefaultHttpRoutePlanner(org.apache.http.conn.SchemeRegistry);
    public org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException;

  Fields added:
    protected org.apache.http.conn.SchemeRegistry schemeRegistry;

  Class descriptor changed:
  old:
    public org.apache.http.impl.conn.DefaultHttpRoutePlanner extends java.lang.Object implements org.apache.http.conn.HttpRoutePlanner
  new:
    public org.apache.http.impl.conn.DefaultHttpRoutePlanner extends java.lang.Object implements org.apache.http.conn.routing.HttpRoutePlanner
Class changed: org.apache.http.impl.conn.SingleClientConnManager
  Methods removed:
    public void closeIdleConnections(long);
    public org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.HttpRoute);
    public final org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.HttpRoute, long);

  Methods added:
    public void closeIdleConnections(long, java.util.concurrent.TimeUnit);
    public org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute);
    public final org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute, long, java.util.concurrent.TimeUnit);

Class changed: org.apache.http.impl.conn.SingleClientConnManager.ConnAdapter
  Methods removed:
    protected SingleClientConnManager.ConnAdapter(org.apache.http.impl.conn.SingleClientConnManager, org.apache.http.impl.conn.SingleClientConnManager.PoolEntry, org.apache.http.conn.HttpRoute);

  Methods added:
    protected SingleClientConnManager.ConnAdapter(org.apache.http.impl.conn.SingleClientConnManager, org.apache.http.impl.conn.SingleClientConnManager.PoolEntry, org.apache.http.conn.routing.HttpRoute);

Class changed: org.apache.http.impl.conn.tsccm.AbstractConnPool
  Methods removed:
    public synchronized void closeIdleConnections(long);
    public abstract org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.HttpRoute, long, org.apache.http.conn.ClientConnectionOperator) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;
    protected abstract void handleLostEntry(org.apache.http.conn.HttpRoute);

  Methods added:
    public void closeIdleConnections(long, java.util.concurrent.TimeUnit);
    public void enableConnectionGC() throws java.lang.IllegalStateException;
    public abstract org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute, long, java.util.concurrent.TimeUnit, org.apache.http.conn.ClientConnectionOperator) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;
    protected abstract void handleLostEntry(org.apache.http.conn.routing.HttpRoute);

  Fields added:
    protected final java.util.concurrent.locks.Lock poolLock;

  Method changed:
  old:
    public synchronized void handleReference(java.lang.ref.Reference);

  new:
    public void handleReference(java.lang.ref.Reference);

  Method changed:
  old:
    public synchronized void shutdown();

  new:
    public void shutdown();

Class changed: org.apache.http.impl.conn.tsccm.BasicPoolEntry
  Methods removed:
    public BasicPoolEntry(org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.HttpRoute, java.lang.ref.ReferenceQueue);
    protected final org.apache.http.conn.HttpRoute getPlannedRoute();
    protected final java.lang.ref.WeakReference getWeakRef();

  Methods added:
    public BasicPoolEntry(org.apache.http.conn.ClientConnectionOperator, org.apache.http.conn.routing.HttpRoute, java.lang.ref.ReferenceQueue);
    protected final org.apache.http.conn.routing.HttpRoute getPlannedRoute();
    protected final org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef();

Class changed: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef
  Methods removed:
    public final org.apache.http.conn.HttpRoute getRoute();

  Methods added:
    public final org.apache.http.conn.routing.HttpRoute getRoute();

Class changed: org.apache.http.impl.conn.tsccm.ConnPoolByRoute
  Methods removed:
    public synchronized int getConnectionsInPool(org.apache.http.conn.HttpRoute);
    public synchronized org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.HttpRoute, long, org.apache.http.conn.ClientConnectionOperator) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;
    protected synchronized org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.HttpRoute, boolean);
    protected synchronized void handleLostEntry(org.apache.http.conn.HttpRoute);
    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.HttpRoute);

  Methods added:
    protected java.util.Queue createFreeConnQueue();
    protected java.util.Map createRouteToPoolMap();
    protected java.util.Queue createWaitingThreadQueue();
    public int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute);
    public org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute, long, java.util.concurrent.TimeUnit, org.apache.http.conn.ClientConnectionOperator) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;
    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute, boolean);
    protected void handleLostEntry(org.apache.http.conn.routing.HttpRoute);
    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute);
    protected org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition, org.apache.http.impl.conn.tsccm.RouteSpecificPool);

  Fields added:
    protected java.util.Queue freeConnections;
    protected final java.util.Map routeToPool;
    protected java.util.Queue waitingThreads;

  Method changed:
  old:
    protected synchronized org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, org.apache.http.conn.ClientConnectionOperator);

  new:
    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, org.apache.http.conn.ClientConnectionOperator);

  Method changed:
  old:
    public synchronized void deleteClosedConnections();

  new:
    public void deleteClosedConnections();

  Method changed:
  old:
    protected synchronized void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry);

  new:
    protected void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry);

  Method changed:
  old:
    protected synchronized void deleteLeastUsedEntry();

  new:
    protected void deleteLeastUsedEntry();

  Method changed:
  old:
    public synchronized void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry);

  new:
    public void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry);

  Method changed:
  old:
    protected synchronized org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool);

  new:
    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool);

  Method changed:
  old:
    protected synchronized void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool);

  new:
    protected void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool);

  Method changed:
  old:
    public synchronized void shutdown();

  new:
    public void shutdown();

Class changed: org.apache.http.impl.conn.tsccm.RouteSpecificPool
  Methods removed:
    public RouteSpecificPool(org.apache.http.conn.HttpRoute);
    public final org.apache.http.conn.HttpRoute getRoute();

  Methods added:
    public RouteSpecificPool(org.apache.http.conn.routing.HttpRoute);
    public org.apache.http.impl.conn.tsccm.WaitingThread dequeueThread();
    public final org.apache.http.conn.routing.HttpRoute getRoute();
    public boolean hasThread();
    public void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread);
    public void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread);

  Fields added:
    protected java.util.LinkedList freeEntries;
    protected int numEntries;
    protected final org.apache.http.conn.routing.HttpRoute route;
    protected java.util.Queue waitingThreads;

Class changed: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager
  Methods removed:
    public void closeIdleConnections(long);
    public org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.HttpRoute) throws java.lang.InterruptedException;
    public org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.HttpRoute, long) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;
    public int getConnectionsInPool(org.apache.http.conn.HttpRoute);

  Methods added:
    public void closeIdleConnections(long, java.util.concurrent.TimeUnit);
    public org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute) throws java.lang.InterruptedException;
    public org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute, long, java.util.concurrent.TimeUnit) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException;
    public int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute);

Class changed: org.apache.http.impl.cookie.AbstractCookieSpec
  Methods removed:
    protected java.util.Iterator getAttribHandlerIterator();

  Methods added:
    protected java.util.Collection getAttribHandlers();

Class changed: org.apache.http.impl.cookie.BrowserCompatSpec
  Methods removed:
    public org.apache.http.Header[] formatCookies(org.apache.http.cookie.Cookie[]);
    public org.apache.http.cookie.Cookie[] parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

  Methods added:
    public java.util.List formatCookies(java.util.List);
    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

Class changed: org.apache.http.impl.cookie.CookieSpecBase
  Methods removed:
    protected org.apache.http.cookie.Cookie[] parse(org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

  Methods added:
    protected java.util.List parse(org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

Class changed: org.apache.http.impl.cookie.NetscapeDraftSpec
  Methods removed:
    public org.apache.http.Header[] formatCookies(org.apache.http.cookie.Cookie[]);
    public org.apache.http.cookie.Cookie[] parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

  Methods added:
    public java.util.List formatCookies(java.util.List);
    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

Class changed: org.apache.http.impl.cookie.RFC2109Spec
  Methods removed:
    public org.apache.http.Header[] formatCookies(org.apache.http.cookie.Cookie[]);
    public org.apache.http.cookie.Cookie[] parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

  Methods added:
    public java.util.List formatCookies(java.util.List);
    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

Class changed: org.apache.http.impl.cookie.RFC2965Spec
  Methods removed:
    public org.apache.http.cookie.Cookie[] parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

  Methods added:
    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException;

API diff generated by JarDiff http://www.osjava.org/jardiff/

--------------------------------------

Release 4.0 Alpha 2
-------------------

ALPHA2 release is another milestone in the redesign of HttpClient. It includes 
a number of improvements since ALPHA1, among which are improved connection 
pooling, support for proxy chains, redesigned HTTP state and authentication
credentials management API, improved RFC 2965 cookie specification.   

-------------------

HttpClient 3.x features that have NOT yet been ported
-------------------
* NTLM authentication scheme

* Support for multipart MIME coded entities  

-------------------

Changelog
-------------------

* [HTTPCLIENT-698] Resolve non-absolute redirect URIs relative to 
  the request URI
  Contributed by Johannes Koch <johannes.koch at fit.fraunhofer.de>

* [HTTPCLIENT-697] Throw a more intelligible exception when connection
  to a remote host cannot be established.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-689] Caching of SimpleDateFormat in DateUtils
  Contributed by Daniel Müller <strider at digitalstrider.com>

* [HTTPCLIENT-689] stackable parameters in AbstractHttpClient
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-477] Use distinct instances of the authentication handler 
  interface for authentication with target and proxy hosts
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-690] ManagedClientConnection provides access to SSLSession
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-692] ClientConnectionManager throws InterruptedException
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCORE-116] moved parameter names to interfaces
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-649] support for proxy chains in HttpConn
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-636] refactor ThreadSafeClientConnManager in separate package
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-669] new HttpRoutePlanner interface and implementation
  Contributed by Andrea Selva <selva.andre at gmail.com>

* [HTTPCLIENT-653] detached connection wrapper no longer prevents
  garbage collection of ThreadSafeClientConnManager
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-674] use org.apache.http.util.VersionInfo instead of a local one
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-666] Replaced HttpState with CredentialsProvier and CookieStore interfaces 
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCORE-100] revised HttpContext hierarchy
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-618] eliminate class HostConfiguration
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-672] re-sync with API changes in core alpha6-SNAPSHOT
  Contributed by Roland Weber <rolandw at apache.org>

--------------------------------------

Release 4.0 Alpha 1
-------------------

HttpClient 4.0 represents a complete, ground-up redesign and almost a complete
rewrite of the HttpClient 3.x codeline. This release finally addresses several
design flaws that existed since the 1.0 release and could not be fixed without
a major code overhaul and breaking API compatibility.

The HttpClient 4.0 API is still very experimental and is bound to change
during the course of the ALPHA development phase. Several important features
have not yet been ported to the new API.

Architectural changes
---------------------

* Redesign of the HttpClient internals addressing all known
  major architectural shortcomings of the 3.x codeline

* Cleaner, more flexible and expressive API   

* Better performance and smaller memory footprint due to a more 
  efficient HTTP transport based on HttpCore. HttpClient 4.0 is 
  expected to be 10% to 25% faster than HttpClient 3.x codeline

* More modular structure   

* Pluggable redirect and authentication handlers   

* Support for protocol incerceptors

* Improved connection management 

* Improved support for sending requests via a proxy or a chain of 
  proxies 

* Improved handling redirects of entity enclosing requests

* More flexible SSL context customization 

* Reduced intermediate garbage in the process of
  generating HTTP requests and parsing HTTP responses 

-------------------

HttpClient 3.x features that have NOT yet been ported
-------------------
* NTLM authentication scheme

* RFC2965 cookie policy (Cookie2)

* Support for multipart MIME coded entities  

-------------------

Changelog
-------------------

The following is a list of contributions tracked in JIRA.
Note that this is not a complete list of contributions or changes.
Since the API was redesigned completely, tracking everything outside
of the source code repository would have been too burdensome.

* [HTTPCLIENT-655] User-Agent string no longer violates RFC
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-541] Virtual host API redesign
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-614] Allow for different strategies when checking
  CN of x509 certificates
  Contributed by Julius Davies <juliusdavies at gmail.com>

* [HTTPCLIENT-136] Fixed inadequate proxy support
  Long standing architectural problem. Issue opened on 19/Dec/2002.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-63] Support for pluggable redirect and authentication handlers
  Long standing architectural problem. Issue opened on 15/Jul/2002. 
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-245] Fixed redirect handling. HttpClient can now automatically
  handle redirects of entity enclosing requests. 
  Long standing architectural problem. Issue opened on 14/Jul/2003.
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-613] HTTPS connections now verify CN of x509 certificates
  Contributed by Julius Davies <juliusdavies at gmail.com>

* [HTTPCLIENT-497] Wire/header logger names consistent with class loggers
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-484] AuthSSLProtocolSocketFactory in the main distribution
  Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-589] Do not consume the remaining response content if
  the connection is to be closed
  Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-475] Support for unconnected sockets. HTTP requests can now be
  aborted while network socket is still being connected.
  Contributed by Roland Weber <rolandw at apache.org>

