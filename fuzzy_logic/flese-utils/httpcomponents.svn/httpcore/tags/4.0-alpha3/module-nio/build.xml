<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/*
 * Copyright 2006 The Apache Software Foundation.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 -->

<project name="HttpCoreNIO" basedir="." default="compile-src">
<description>
Jakarta HttpComponents Core, Module NIO
This build file is typically imported by the HttpCore main build file.
</description>


<!-- Definition of the local environment.

        External dependencies for which there is a default location:
          HttpCoreMain

        External dependencies for which there is no default location:
          junit.jar           - for test and clover targets
  -->
<property name="local.properties" location="../../project/build.properties" />
<property file="${local.properties}" />

<!-- no external dependencies with default location at this time -->
<!-- HttpCoreMain is a special case, see the <import/> below. -->


<!-- directory structure of the source tree -->
<property name="comp.core.home" value="${basedir}/.."/>

<property name="comp.core.nio.home"
      location="${comp.core.home}/module-nio"/>
<property name="comp.core.nio.src"
      location="${comp.core.nio.home}/src/main/java"/>
<property name="comp.core.nio.tests"
      location="${comp.core.nio.home}/src/test/java"/>
<property name="comp.core.nio.xmpls"
      location="${comp.core.nio.home}/src/examples"/>

<!-- need HttpCoreMain, import the build file -->
<property name="comp.core.main.home"
      location="${comp.core.home}/module-main"/>
<import file="${comp.core.main.home}/build.xml" />

<!-- locations for intermediate and final build results
        For consistency with other builds, the temporary files are
        located by default below "target/", final results below "dist/".
  -->
<property name="build.core.nio.home"
      location="${comp.core.nio.home}/target"/>
<property name="build.core.nio.classes"
      location="${build.core.nio.home}/classes"/>
<property name="build.core.nio.tests"
      location="${build.core.nio.home}/tests"/>
<property name="build.core.nio.xmpls"
      location="${build.core.nio.home}/examples"/>


<!-- compiler and javadoc setup -->
<property name="compile.debug"       value="true"/>
<property name="compile.deprecation" value="true"/>
<property name="compile.optimize"    value="true"/>
<property name="compile.source"      value="1.4"/>
<property name="compile.target"      value="1.4"/>


<!-- build targets ======================================================== -->

<target name="echo-properties">
<echo>
Module "NIO"
  base directory    ${basedir}
  component base    ${comp.core.home}
  module base       ${comp.core.nio.home}
  local properties  ${local.properties}

Source Tree
  src       ${comp.core.nio.src}
  tests     ${comp.core.nio.tests}
  examples  ${comp.core.nio.xmpls}

Dependencies
  JUnit     ${junit.jar}

Output
  temp      ${build.core.nio.home}
</echo>
</target>


<!-- compile and clean targets ================================================
        For compiling and recompiling specific parts of HttpCore code.
        These targets do NOT define dependencies between eachother.
        Direct invocation of these targets is for those who know what they do!
  -->

<target name="compile-src" depends="build-init">

	<mkdir dir="${build.core.nio.classes}" />
        <javac destdir     ="${build.core.nio.classes}"
               debug       ="${compile.debug}"
               deprecation ="${compile.deprecation}"
               optimize    ="${compile.optimize}"
               source      ="${compile.source}"
               target      ="${compile.target}"
               sourcepath  =""
        >
          <src>
            <pathelement location="${comp.core.nio.src}"/>
          </src>
          <classpath>
            <pathelement location="${build.core.main.classes}"/>
          </classpath>
        </javac>
</target>
<target name="clean-src">
	<delete dir="${build.core.nio.classes}" quiet="true" />
</target>


<target name="compile-tests" depends="build-init">

	<mkdir dir="${build.core.nio.tests}" />
        <javac destdir     ="${build.core.nio.tests}"
               debug       ="${compile.debug}"
               deprecation ="${compile.deprecation}"
               optimize    ="${compile.optimize}"
               source      ="${compile.source}"
               target      ="${compile.target}"
               sourcepath  =""
        >
          <src>
            <pathelement path="${comp.core.nio.tests}"/>
          </src>
          <classpath>
            <pathelement location="${build.core.main.classes}"/>
            <pathelement location="${build.core.nio.classes}"/>
            <pathelement location="${junit.jar}"/>
          </classpath>
        </javac>
        <copy todir="${build.core.nio.tests}" filtering="on">
          <fileset dir="${comp.core.nio.tests}" excludes="**/*.java" />
        </copy>
</target>
<target name="clean-tests">
	<delete dir="${build.core.nio.tests}" quiet="true" />
</target>


<target name="compile-examples" depends="build-init">
	<mkdir dir="${build.core.nio.xmpls}" />
        <javac destdir     ="${build.core.nio.xmpls}"
               debug       ="${compile.debug}"
               deprecation ="${compile.deprecation}"
               optimize    ="${compile.optimize}"
               source      ="${compile.source}"
               target      ="${compile.target}"
               sourcepath  =""
        >
          <src>
            <pathelement path="${comp.core.nio.xmpls}"/>
          </src>
          <classpath>
            <pathelement location="${build.core.main.classes}"/>
            <pathelement location="${build.core.nio.classes}"/>
          </classpath>
        </javac>
</target>
<target name="clean-examples">
	<delete dir="${build.core.main.xmpls}" quiet="true" />
</target>



<!-- verification targets ================================================= -->

<target name="run-tests"
     depends="build-init,compile-tests"
>
        <!-- don't use Ant optional JUnit tasks here -->

        <java classname="junit.textui.TestRunner"
              fork="yes" failonerror="yes"
        >
          <arg value="org.apache.http.nio.TestAll"/>
          <classpath>
            <pathelement location="${junit.jar}"/>
            <pathelement location="${clover.jar}"/>
            <pathelement location="${build.core.main.classes}"/>
            <pathelement location="${build.core.nio.classes}"/>
            <pathelement location="${build.core.main.tests}"/>
            <pathelement location="${build.core.nio.tests}"/>
          </classpath>
      </java>
</target>
<target name="run-tests-fs"
     depends="clean-build,compile-src,run-tests"
/>


<!-- generic and helper targets =========================================== -->

<target name="build-init">
        <mkdir dir="${build.core.nio.home}" />
</target>
<target name="clean-build">
        <delete dir="${build.core.nio.home}" quiet="true" />
</target>


</project><!-- HttpCore, Module NIO -->
