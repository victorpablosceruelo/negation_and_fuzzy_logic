%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: poster_08.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold Helvetica Courier Helvetica-Oblique
%%+ Helvetica-Bold Helvetica-BoldOblique
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o poster_08.ps poster_08.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.11.21:1039
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro
%!
% PostScript header file pst-text.pro
% Version 97, 94/04/20
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc
{
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow
{ /String exch def
  /CharCount 0 def
  String length
  { String CharCount 1 getinterval ShowChar
    /CharCount CharCount 1 add def
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar
{ /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
    currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def

end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known not {userdict /pdfmark systemdict /cleartomark get put}
if
 
@fedspecial end TeXDict begin
39158280 55380996 2074 600 600 (poster_08.dvi) @start
%DVIPSBitmapFont: Fa cmsy8 16.592 1
/Fa 1 1 df<007FBDFCA2BE1280A36C1C00A2590774A572>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr6 12.444 3
/Fb 3 54 df<EC0FF891B57E010314E0010F14F890391FF80FFC90397FC001FF49C76C7E
48486E7E49141F48486E7E000782491407000F82A248486E7EA2003F82A3491401007F82
A600FF1780B3A2007F1700A46D5C003F5EA4001F5EA26C6C4A5AA26C6C4A5AA26C6C4A5A
A26C6C4A5A6C6C6CEBFF806D6C4890C7FC90393FF80FFE010FB512F8010314E001001480
DA1FFCC8FC31477AC43F>48 D<EC0780140F143F147FEB03FF131F0007B5FCB6FC13FD13
E1EAF8011200B3B3B0497F010F13F0B8FCA4284574C43F>I<D8038015E001F8140F9039
FFC001FF91B6FC17C017005E5E16F05E168003FCC7FC01C313C001C0C9FCADEC1FFC01C1
B57E01C714E001DF14F89039FFF01FFC91380003FE01FC6D7E01F06D138049EC7FC049EC
3FE04915F0C9121F17F8A217FC160FA217FEA4121F487E487E12FF7FA217FC49141FA249
15F8007EC8FC007CED3FF0123C003EED7FE06C16C06DECFF806C6C491300D807F0EB07FE
D803FC495A3A01FF807FF86C6CB512E06D1480010749C7FC010013E02F4779C43F>53
D E
%EndDVIPSBitmapFont
/Fc 134[69 1[99 69 77 38 69 46 77 77 77 77 115 31 69
1[31 1[77 38 77 1[69 77 77 8[92 130 3[92 1[107 92 1[99
115 6[84 2[99 1[92 7[77 77 77 77 77 77 77 77 77 77 1[38
46 38 2[46 46 37[69 2[{TeXBase1Encoding ReEncodeFont}47
137.75 /Helvetica rf /Fd 137[63 1[38 63 44 2[69 69 1[31
2[31 1[69 38 63 1[63 1[63 25[88 29[38 38 40[{
TeXBase1Encoding ReEncodeFont}16 112.956 /Helvetica-Bold
rf /Fe 137[103 1[57 103 69 1[115 115 115 172 3[46 1[115
57 115 3[115 97[{TeXBase1Encoding ReEncodeFont}13 206.625
/Helvetica rf
%DVIPSBitmapFont: Ff cmmi8 16.592 4
/Ff 4 111 df<ED07C0ED1FE0ED3FF0ED7FF815FFA416F016E016C0ED7F80ED3F0092C7
FCB3EB01FE90380FFF804913E0497F90387F0FF89038FC07FCEA01F0D803E07FEA07C012
0F1380121FEB000F5A123E007E131F007C5CA200FC133F485CA2147FC75B14FF5DA25B5D
5B5DA25B92C7FCA25B5C131F5CA2013F143E5C017F147E4A137CA201FF14FC4A13F8A248
140102C013F0150316E0ED07C06C140FED1F80ED3F00017F137E90383FE1FC6DB45A6D5B
6D13C0010090C7FC275D7CDB32>105 D<F00F80F03FC0F07FE0F0FFF05FA25F19E0A271
13C01980711300187E95C7FCB3EE0FF8EE7FFE4BB57E03078092390FF83FE092391FC01F
F0DB3F007F037E130F4B804A5A4A5A5D4A5A020F141F5D141F4AC7FC023E143FA2027E5D
147C177F91C8FC60A217FFA260A25EA260A25EA260A25EA295C7FCA25EA25FA2161FA25F
A2163FA25FA2167FA25FA216FFA25FA25DA25FA25DA25FA25D94C8FCEA07E0486C495A48
7E486C495A007F143F5E4B5A4848495A4A5B49485B6C484890C9FC9038C01FFC003FEBFF
F86CB512E06C14806C01FCCAFCC613E03C7882DB3B>I<15FE49B5FC137F15FE90B5FCA2
7F9038007FFC143FA315F8A2147FA215F0A214FFA215E0A25BA215C0A25BA21580A25BA2
1500A25BA25CA2131FA25CA2133FA25CA2137FA25CA213FFA25CA25AA25CA25AA25CA25A
A291C7FCA25AA25BA2121FA25BA2123FA249137CA2007F14FC15F85BA2140100FF14F013
E0140315E0A2007FEB07C0A2EC0F80123F391FF01F00EBF87E6CB45A00035B6C5B38003F
C020617BDF2C>108 D<D91FE0913807FF80D97FF8023F13F0D9FFFE91B512FC486D0103
80D803F0903A800FFC07FF2A07E07FC01FE0017F01C09027E03F80007F260F803F017EC7
6C7E001FECF0F80100D9F1F081DBF3E0143F003EECF7C0EDFF804A90C8FC007E5C127C5D
00FC4948157F5A5DA2494915FF0000615DA2495E625DA2495E6292C8FC604995C7FC604A
5EA2011F161F614A183E183F013F4D137E1B7C4A157F61017F04FF14F8614A17011BF001
FF180307C013E04AEF07C01A0F481A80067FEB1F004AEEE07E95383FE1FC72B45A4A6F5B
6C90C900035B017C040090C7FC4F3D7CBB59>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmex10 24.888 5
/Fg 5 126 df[<F607E0F61FF0F63FFC1E7F547E8B65A25380A35380A35380A35380A353
80A35380A39AB67EA25281A35282A3524980A352496C7FA352496C7FA352496C7FA35249
6C7FA299B581547EA25183547EA2514A6C80A351496D80A351496E7FA351496E7FA35149
6E7FA251845380A298B5835380A2504A6E7FA35091C86C80A350496F80A35049707FA350
49707FA35049707FA250865282A297B5855282A24F4A707FA34F91CA6C80A34F497180A3
4F49727FA34F49727FA24F885184A24F885184A296B548727FA34E4A727FA34E91CC6C80
A34E497380A34E49747FA24E8A5086A24E8A5086A24E49747FA395B548747FA34D4A747F
A34D91CE6C80A34D497580A34D49767FA24D8C4F88A24D8C4F88A24D49767FA394B54876
7FA34C4A767FA34C91D06C80A34C497780A24C8E4E8AA24C8E4E8AA24C49787FA34C4978
7FA393B548787FA34B4A787FA34B91D26C80A24BA17E4D8BA24BA17E4D8CA24B497A7FA3
4B497A7FA34B497A7FA392B5487A7FA34A4A7A7FA34A91D46C80A24AA1804C8DA24AA180
4C8EA24A497C7FA34A497C7FA34A497C7FA391B5487C7FA3494A7C7FA249A18293D67EA2
49A1824B8FA24949A16C7FA34949A16C7FA34949A16C7FA34949A16C7FA390B548A16C7F
A248A1834BA17EA248A1188092D7C67EA24849A16D14C0A34849A16E13E0A34849A16E13
F0A34849A16E13F8A34849A16E13FCA2B5A117FE4AA180A34AA180A291D7C87E6CA118FC
6C48A16F13F8A1187FD80FF8A1EE3FE06C48A1EE1FC0>207 289
117 127 230 94 D<F5FFF00A7F13F8090FB5FC50B6FC1A0F1A7F0703B7FC191F197F06
03B8FC180F183F95B9FC17035F171F177F94BAFC16035E161F5E93BBFC5D4B1AF04B96C7
FC031F4DC8FC4B17804B04F8C9FC92B812804A04F8CAFC4A16C04A4BCBFC4A15F84A15C0
4A92CCFC4A14FC91B612F04915C04992CDFC495C4914F816E0495C495C4949CEFC5D90B5
5A485C485C15804891CFFC485B5C5A5C485B485B5CB55A91D0FCA25B5BA25B5BA26C5A65
4586985D>122 D<EA7FF8B512F0ECFF8015FCEDFF8016F016FEEEFFC017F017FE717E18
E018F818FE8419C019F08519FE851AC0861AF8866C85D8000784D9000318C0DA000F8303
0083040F82040082051F81050381050082061F81060781060181726C80071F8007078073
800700811A3F74807480080380867480757F757F1B0F757F751480871EC0877613E07613
F0887613F888A28888A2881D7FA2F53FF0654582985D>I<EA7FE0487EA27F7FA27F7FA2
806C7F806C7F6C7F807E806C7F6C8015E06C806C806D7F816D6D7E6D806D8016F86D14FE
6D806D15C06D15F06E14FC6E14FF6E15C06E15F86E15FE6EEDFFC06E16F86EEEFF806F16
F86FEEFF806F17FE030794B5FC6FF1FFF06F1AF881163F82160782160083171F17078317
00183F180F1803F0007F191F1903F1007F1A0F1A01F2000FF3007F0A0013F0654586C45D
>I<F53FF0F57FF8A21DFF64A26464A2645213F0645213E099B512C0631E806351140051
5B1B3F515B98B55A505C62080F5C505C505C97B6FC070392C7FC4F5C071F5C077F5C4EB6
5A06075D061F5D95B75A050393C8FC051F5D94B75A040F5E93B85A030F5F0203B95A0107
BAC9FC007FBA5ABB5A621AE06297CAFC6119F86119C096CBFC6018F818E018804DCCFC17
F017C04CCDFC16F0168003FCCEFC158002F0CFFCD87FF8D0FC654582C45D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr8 16.592 2
/Fh 2 51 df<153C157E15FE14031407141F14FF130748B5FCB6FCA2141F13F8EAFE00C7
FCB3B3B3B04A7E4A7F49B512E0007FB81280A5315C74DB49>49 D<913807FFC0023F13FC
49B67E010715E04915F890263FF80713FE903A7FC0007FFF49C7001F7FD801FC6E7F4848
02037FD807E06E7F48486E7F844848157F90C96C7E5A003E707E127E007C1880D87FE081
487E7F19C06D81A66C5A6C5A6C485DEA0780CA1480A25F1900A24D5AA260177F604D5A5E
604C5B4C5B95C7FC4C5A4C5A4C5A5F4C5A4C5A4B5B4B90C8FCED07FC4B5A4B5A4B5A4B5A
93C9FC15FE4A5A4A5A4A5A4A48EC07C04A5A4A5A4AC8EA0F8014FC495A495A495A494815
1F4948160049C9FC017E5E495E48B9FC5A5A485F5A5A5AB9FCA260A33A5C79DB49>I
E
%EndDVIPSBitmapFont
/Fi 139[56 1[66 2[104 104 4[47 3[94 30[104 70[{
TeXBase1Encoding ReEncodeFont}7 169.434 /Helvetica-BoldOblique
rf /Fj 134[122 2[122 122 122 122 2[122 122 122 1[122
2[122 1[122 122 122 1[122 122 2[122 4[122 122 122 21[122
122 1[122 1[122 1[122 122 8[122 122 122 122 122 122 2[122
122 40[{TeXBase1Encoding ReEncodeFont}33 203.526 /Courier
rf /Fk 136[158 113 124 68 113 79 2[124 124 1[57 2[57
3[113 1[113 124 113 18[147 10[147 67[{TeXBase1Encoding ReEncodeFont}16
203.321 /Helvetica-Bold rf
%DVIPSBitmapFont: Fl cmmi12 29.8656 9
/Fl 9 113 df<13FF000313C04813E0001F13F84813FCA24813FEA2B6FCA86C13FEA26C
13FCA26C13F8000713E06C13C0C6130018186B9743>58 D[<0503B5020FB56C040FB5EC
7FFF4D91B86C4C91B712805FA2A15A5570180071A15A94C76C04E0CB94C7FC07034BCC00
1F15E07303F8734AC8FC7303E07314F0744A1CC0744A7391C9FCA115FC7491CD5C771BE0
74525B7763A14ACAFC74525A774F5A7465774F5A74525A774F5AA14890CBFC74515A774E
5A75505A776175505A774E5AA1485A7550CCFC784C5A754F5A784C5A75190F784C5A595A
754F5A784C5A754E90CDFC785E754E5A585A784B5A764D5A784B5A764D5A784BCEFC765E
575A79495A764C5A79495A764C5A79495A6A764CCFFC79485A764B5A79485A764B5A7948
5A565A77147F79485A7790B5D0FC68775C6868775C68898C898CA2898C898CA2538065A2
5380655381F53FCFF57F8FE3FF0F80527FE203FE8152487EE20FF881F41FF052487EE27F
C081537E52C780514880514882515A514880514882514880097F845148805090C881505A
504881504884504881518450488150488450C9FC4F48824F48854F4883070F864F48834F
48854F5A4F48834E90CB814E48844F874E48844E5A4E48874E48844E48874ECC7E4D4888
0503864D5A4D48884D48864D48884D48864D48884C90CEFC4C488704078B4C48874C488A
4C488704FF8B5D4B4987030F8C5D037F53804AB56C6302075480023F6E518049B66C50B7
7E013FDBFF80070F16F8003FB800FC0603BA12C04866728CB9694E608B6C90C7003F4998
26C000015C>201 169 122 296 201 88 D<F007FF95B512E0050714F8051F80057F14FF
932701FFFE036D13FC0407903BF0007FC003FE4C0180903A1FE00FFF80043F90C76C6C5A
DC7FFC6E6C5A4B4848EC03FC4B4902015B4B49EC00FE4B5B4B49157F037F90C96CB5FC4B
5A4A497091C7FC4A5BA24A49824A49605C4A49824A5B6591B5CAFC5B495B65495B49615D
49635D4961A2494961A290B5485FA248645D4862A2654891CBFC98B5FC5A4A97C8FCA248
61A24A61A24861A24A61A24861A24A61A262A24A61B5FC62A2645C621F785214FCA24A4D
1501A25214F8A297B51403A299C713F07E4F1607A24F4915E01E0F6C604F17C0A24F4914
1F6C4E17804F163F6C6D93B5FC4E180007FD5E6C6DED03F9DE07F016FE6C4D5A6C6DDB3F
C04B5A95387F807F6C6DDBFF004B5A6D6C4A48133F013FDB07FC6E495A6D6C4A48011F4A
5A6D6CDA3FE06D6C131F6D9027C001FFC06D6D485A6DD9F00F90C76C6DB45A010090B548
6E90B5C7FC023F02F86E5C6E02E0033F13F8020391C9000F5B9126003FF8040113806E71
76ED7F>97 D<F13FFF0607B512F0063F14FE4DB77E050716E0051FD9F00113F8057F9039
80001FFC932601FFFCC7EA07FE040701F0913801FF804C01C0EC007F043F90C9EA3FC04C
48EE1FE04B4848EE0FF04B4916074B13E04B49EE03F8033F5B4B90CA12FF4B4816034A60
4A494C13FC4A495E4A495E4A4918F84A605E4A5B91B5FC4991CAFC1DF0495B491BE04949
19C0751380494994381FFE00755A4949EF01C04996C8FC5D90B5FCA2485CA25D5AA24891
CEFCA35A5C5AA25CA25AA25CA25AA25CA55CA2B5FCA35CA57EA41D701DF8F401FC7E1C03
F407F8F40FF06CF31FE0F43FC01C7F6C6DF1FF805113006C505A6E4E5A6C505A515A6C6D
F07FC06C505A6E050390C7FC6D6C4D5A013FF01FF86D6CEF7FF06D6D923801FFC06D6D03
0F90C8FC6D6DED3FFE6D01F8913801FFF89026007FFE021F13E091273FFFC007B5128002
0F90B600FCC9FC020316E0020093CAFC031F14F0030101FCCBFC5E7176ED68>99
D<F1FFF8061FEBFF804DB612F0050F15FC053F814CB539C01FFF8004079026FC00017F4C
01E06D6C7E043F01806E7EDCFFFEC8EA0FF84B01F86F7E03075B4B496F7E033F01801501
4B90C97F4B5A4A498202075B4A4918804A5B4A197F4A5B91B54817FF93CBFC491B00495B
495B49615D494F5A495B1B0749496090B5180F4B4D5A48634B173F48505A50485A4891CA
485B080F90C7FC48F13FFE4AEFFFF807075B48063F13C04A0307B5C8FC0503B512FC4802
03B712F091B9128007F8C9FC19804805C0CAFC0480CCFC02F0CEFCA3B5FC5CA55CA55CA9
91CFFCA4F401C06CF303E0F407F0801C0F6CF31FE0F43FC0F47F806CF3FF00636E4E5A6C
505A515A6C6D4E5A515A6C505A6E4D48C7FC6C4F5A6C6DEF0FFC6E4D5A017FF07FE06D6C
4C485A6D6C040790C8FC6D6DED3FFC6D6DEDFFF86D6D020713E0010001F8027F13806EB4
90261FFFFEC9FC021F90B612F002071680020103FCCAFC6E6C14C0030301F0CBFC5C7174
ED71>101 D[<9A3801FFC00B0F13FC0B3F13FF9AB612C052810A0701C013F8993A0FFE00
0FFC5248EB03FEE27FF8130152486D7E51150753011F13805149137F5192B5FC51495A66
63535A63A2515C6409FF1700A2785B505F525D785B50030013C079C7FC5291C8FC62A450
5BA46264A462A264A362A264A397B5FCA299CBFCA361A263A461A26394BBFC5E8B5E9CC8
FC826693C8000F01F8CBFCA263A361A263A461A263A361A263A396B5FCA298CCFCA360A3
62A360A262A360A262A360A262A360A362A360A262A360A262A395B5FCA297CDFCA45FA2
61A35FA261A35FA261A35F61A45F61A44D5BA54D5BA396CEFCA294B5FCA260A35E60A34C
5BA360A25E60A2017F5E48486C5B000713E0486D5D5A484B90CFFC487F5FB5FC4C5A5C5F
167F4A5C4C5A5C4A485B02005C01FC4990D0FCD87FF0495A13806C6C495A6D495AD81FF8
EB3FE06CB448B45A000390B55A6C4AD1FC6C6C5B011F13F001011380>121
226 115 302 120 I<F21FFC0703B57E071F14E0077F14F84EB67E06079026F80FFEEB03
F0061F903BC001FF800FF84E48C7397FC03FFEDEFFFC021F137F4D01F091380FE0FF0507
49814D49EC07F94D491403057F90C8EA01FD4D5A4C496FB5FC4C5B4C497013FC4C5B4C49
825E4C4918F895CA7E93B5FC4B5B4B1BF04B5B5F5D4B4919E0A24B615F4B1BC092B55A65
4A5C1F805C94CBB5FC5C1F005E4A61A24A635E645C4C61A24A61A24C61A291B560A24C61
A2645B4C61A264A24C61A264A26693CBFC99B5FCA29BC7FCA263A2655D63A2656D61A263
515B6E7E63636E95B55A62626E7F505C6E5F705D6EEF7FBF6E6DDBFF3F5B6EEE01FE704A
485A6E6DEC0FF86F6CDA1FF05C6F6CEC7FC0DB0FFF902603FF80B5FC6F9039E01FFE0003
0190B54892C8FC6F15F0043FECC0010407EBFE00040001F05D94C8FC62A264A262A264A2
62A264A262A264A262A26462A297B55A137F2601FFC04C91C9FC00077F486D4C5B486D60
48604F5B4862614F5BB54D5B634A93B5CAFC4E5B4A4B5B4A030F13F06C494B5B91C9485B
01FC93B5CBFCD83FF04B5B6C6C030713F86CB4033F13E06C01FC0103B512806C90B748CC
FCC617F8011F16C0010303FCCDFCD9000714806FA17CED74>I<DA07FC943801FFF89126
3FFFC0043FEBFF804A01F04BB612E049B56C030F15F84902FE033F15FE902707FC1FFF92
B5C66C7E90260FF0076D4901E0011F13C049486C6D010790C700077FD93FC06ED90FFC6E
7F4A6C6DD91FF06E7FD97F00EE7FC001FE6D6D49486E7F4E48C97F48486F4848167F4E5A
48484C48834E5A496F48488200074D48844ECAFC495E000F705A4B5C5B001F5F605B003F
4A5C6090C76395CBFC485C5F007E5EA200FE4A4995B5FC9DC8FC485EA24B611278C84A61
A24B61A24D61A24B61A24D616592B5FC6794CB5AA24A64655E674A62A24C629AB5FC5C9C
C9FC4C5FA24A63645E664A61F903C04C4FEC07E0644A1E0F525B4C1DC0664A4F161F2280
4C6152163F91B51E006693CBB55D217E4999C812FEA24B525A65496720034B6553140749
545AA24B525A565A5B0A7F4BC7FC4B1CFE1F0149083F4A5A555A4B726C495A766CEB3FE0
76903881FF804B7290B5C8FC4B06005C6D90CD6C13F86D48081F13E0D901F8080390C9FC
837179ED91>110 D<DC07FCEF7FF093263FFFC00307B5FC4C01F0031F14C04BB56C037F
14F04B02FE4AB612FC922707FC0FFF02079038C07FFE92260FF0076D903B0FFC000FFF80
4B486C6DD93FF001037F4B486C6DD97FC06D7F04806E49C780DB7F004B486E7F4B6D9026
F807FC6F7E4BEE0FF04A486F48486F7E5048824B4C488102034DC914804B6F4882020770
4818C0624B1DE0020F5F4D4A824B4C18F0021F5FA24B93CAFC023F4A4919F8A292C75CA2
4A5CA2027E5E21FC02FE5C674A5EA25F147891C85C675F21F861A24D61A261A294B56021
F096CBFCA24C97B5FCA24E1AE0A24C61A24E1AC0A24C61218060664C1C00A24E61665E68
4E5F685E545B60545B4C63A24E94B55AA293B54D91C7FC6795CA5A72604B4F5B535BA253
5B4B6E4C5B675390C8FC724C5A4B62724B5B525BDDFBF84B5B4B4E5BDDF9FC4B5BDDF1FE
4B90C9FC05F0EE7FFC4B027F4A485A726C4913E005E001E0010F5B726C013F90CAFC4B91
3A0FFE01FFFE0603B612F84D6C15E0726C91CBFC4B031F13F8070313804D90CEFCA292B5
FCA294D0FCA25CA25EA25CA25EA25CA25EA25CA25EA25CA25EA25CA25EA25CA25E91B5FC
A25B4980011F14FC007FB812C0B97EA460277FFE00015C7E9E88ED7A>112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr12 29.8656 2
/Fm 2 42 df[<180E183F187F18FEEF01FCEF03F8EF07F0170FEF3FE0EF7FC0EFFF804C
13005F4C5A16074C5A4C5A4C5A4C5A16FF5F4B90C7FC5D4B5A5E150F4B5A5E153F4B5AA2
4B5A5C5E5C4A90C8FCA24A5AA24A5AA24A5AA24A5AA24A5AA25B5D5B5DA25B92C9FC5BA2
495AA3495AA3495AA313FF5CA25AA25CA25AA25CA25AA35C5AA54890CAFCA65A5BA6127F
A35BA712FFB3AE127FA77FA3123FA67F7EA66C7FA57E80A37EA280A27EA280A27EA28013
7FA36D7EA36D7EA36D7EA27F817FA2817F817FA26E7EA26E7EA26E7EA26E7EA26E7EA26E
7F8082806F7EA26F7E151F826F7E1507826F7E816F7F83167F707E707E707E707E160370
7E83701380EF7FC0EF3FE0EF0FF01707EF03F8EF01FCEF00FE187F183F180E>56
248 104 313 94 40 D[<127012FC7E127F6C7E6C7E6C7E7FEA07FC6C7E6C7E6C7F137F
6D7E806D7E6D7E6D7E6D7E807F6D7F816E7E143F816E7E140F816E7EA26E7E8280826E7F
A26F7EA26F7EA26F7EA26F7EA26F7EA283818381A2838183A2707EA3707EA3707EA38382
A21880A282A218C0A282A218E0A38218F0A57013F8A618FC177FA618FEA3173FA718FFB3
AE18FEA7177FA318FCA617FF18F8A64C13F0A518E05EA318C0A25EA21880A25EA21800A2
5E5FA34C5AA34C5AA34C5AA25F5D5FA25D5F5D94C7FCA24B5AA24B5AA24B5AA24B5AA24B
5AA24A5B5E5C93C8FC4A5AA24A5A5D141F4A5A5D147F4A5A5D4990C9FC5B5C495A495A49
5A495A5C495A13FF4890CAFC485A485AEA0FF05B485A485A48CBFC12FE5A1270>56
248 115 313 94 I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmti12 29.8656 6
/Fn 6 111 df<F03FF80503B5FC050F14C0057F14F04CB67E4C9026F80FFCEB1F80040F
9026C003FEEB7FE04C48C76C497EDC7FFCEC7F814C48DA3FC37F030301E0141F4B4915E7
4B49140F4B90C8D807F75B4B5A4B486FB5FC15FF4A49604A49814A5B5C4A496F5C4A5BA2
4A90CAFC91B5715B495BA2495B4998C7FC5D4996B5FC5D49625D49605B4B6090B5FC4B5E
A2486392CAFC4861A248635C625A4A61A24861A24A61A24861A24A61A24861A24A96C8FC
A297B5FCA2B54860A261A2635C611E7C5114FEA291CA481501A25114FCA24F1503A25114
F8A24F15076C605114F0611D0F96B5FC6C4D17E04E4A131FA26C4D17C04E163F6E5D6C4D
1780DE7FDF90C7127F6C069F16006EDBFF0F5D6CEE01FE6EDA07FC6E485A6C4C487E6C6D
DA1FF04B5A6D6C4A486C4A5A013FDBFF8014C06D6C0103496C4A5A6DB4D90FFE6D6D485A
6D9026C07FF891397FF07FC06D90B5486EB55A010003C06E91C7FC023F91C800075B020F
01FC030113F8020101C09238003FE0677166ED7C>97 D<953801FFF0061F13FF95B612E0
050715F8051F81057F9038803FFF932801FFFC00031380040701E0010013C04C0180EC3F
E0043F90C8EA1FF0DC7FFCED0FF84B484815074B49ED03FC4B5B4B49ED01FE033F5B4B90
CAFC4B48160F4A49163F4A4993B5FC4A495D4A495D624A5B4A494B13FE5C91B5C9FC5D5B
494918FC5B4B18F8491AF04B7013E0497213804949933800FE0098C7FC5B5D90B5FC5D5A
A24891CDFCA3485BA25AA25C5AA25CA25AA25CA25AA25CA5B55AA55CA791CEFC7E1C701C
F81CFCF301FE1B036CF207FC6E19F81B0FF31FF06CF23FE0F37FC0F3FF806C6D4D130062
6CF107FC6E4D5A6CF13FF06E4D5A6C4F5A6C6D04035BDF0FFEC7FC6D6C4C5A6D6CEE7FF0
6D6C923803FFE06D6D020F13806D6DDA7FFEC8FC010101F0903803FFF86D01FE017F13E0
023FB712806E03FCC9FC020315E0020092CAFC030F13C0587165ED70>99
D<953803FFE0067F13FC0503B67E051F81057F15F04CB5C67F040701F0EB1FFE041F01C0
EB07FF047F90C700011380EEFFFC030301F06E13C04B49ED7FE0031F49153F4B4916F04B
48C9FC4B48161F4A5B5C4A4917F84A49160F4A5B4A5B4A181F91B5CAFC494918F05B5D49
193F495B4BEF7FE05B4949EFFFC0A249604B4C138090B54D13005D48F11FFE505A4891CA
485A4F485A48060713C04A041F5BDFFFFEC7FC48050F5B4A92B512F0057F14C048021FB6
48C8FC91B812F8198006F0C9FC4804F8CAFC03FCCCFC02F0CDFCA35A5CA55CA2B5FCA35C
A791CEFCA27EA41CE0F301F01CF86CF203FC1B07F30FF81CF06C6D181FF33FE0F37FC0F3
FF806C4F13006E4D5A6C1907F20FF86C6D4D5AF27FE06C4F5A6E4C5B6C060790C7FC6D6C
EE1FFC6D6C4C5AF1FFE06D6C03075B6D6C031F90C8FC6D6DECFFFC010101E0010713F06D
01FC90B512C0023FB7C9FC6E15F8020715C002004ACAFC031F1380567164ED70>101
D[<F51FF89AB57E0A0314E00A0F805214FC99397FF81FFE9939FFE003FF5149C6138051
ED7FC05149133F5190C7EAFFE051481303093F140F525B097F5C66515A9BB5FC626462A2
5017C0642080501700785AF61FF85049EB0FE09BC8FCA3505BA46299CAFCA397B5FCA263
A361A263A361A263A361A363A361A263A361A24CBA12C04C855EA3668293C8003F0180CA
FC61A298CBFCA396B5FCA262A360A262A360A262A460A262A360A262A360A262A360A262
A360A297CCFCA395B5FCA261A35FA261A45FA261A35FA261A35FA261A35FA261A35FA261
A35FA296CDFCA294B5FCA260A35EA260A35E60A35E60A44C5BA3605EA360A25E95CEFCA3
4C5AA301FE5DD803FF14FF000F01C05C487F5A484A5BA2B55DA24B5BA25F14C04B90CFFC
02805BEC000F495C01F8495A01E05CD87F80133F6D495A6C6C495A6C6C485B260FFE0790
D0FC6CB512FC6C5CC614E0013F5BD907FED1FC>115 226 134 302
74 I<F27FF0963807FFFE073F7F96B612C0060381060F9026E03FF8137E4E903B0007FC
01FF80DE7FFC6D6C4813C0DEFFF001015B0503496D6C4813E04D49EC7F8F4D49EC3F9F05
3F90C813DF4D48031F14C04D486FB5FC4C5B4C5B4C496F14805E4C5B4E814C1A004C90C9
FC4C5A4B844D605D4B5BA24B49605D4D5E5D664B5B6492B55A665C94CA5A5C664A5B64A2
4A635E645C4C61A24A61A24C96C7FCA24A96B5FCA24C60A26391B5FC4C60A263A24C60A2
63A2496393CAFC63A265A263A26D4961A263A2656398B5FCA2027F4D91C8FC62A2023F5F
6F4C5B626E5FA2505B6E6D92B5FC616E6D5C6EDC07FB5B70EC0FF36EEE3FE76E6DEC7FC7
6F6C902601FF875B6F6C903803FE076F6C90381FFC0F923A0FFF80FFF0030390B500E05C
6F15806F6C49485A041F13F8040101805D93C9FC62A264A262A299C9FCA297B5FCA263A2
61A263A261A26361A24F5BA2017E612603FF805E486D4C5B487F486D4C5B4897CAFC4895
B5FC4E5B62B54C5B4E5B4A4B5B4E5B4A4B5B4E90CBFC4A4B5A6C48C84813F8494B5BD83F
F0030F13C06D033F5B6CB4DBFFFECCFC000701FC010F13F86C90B712E0C61780013F03FC
CDFC010315E0D9000F01FCCEFC6BA174ED70>I<DA0FF8EF7FFCDA3FFF0407B512C091B5
00C0033F14F04902F04AB612FC01076E4A8190270FFC1FFC020F9039C03FFF8090271FF0
0FFE91273FFC00077F4A6C6CDA7FF06D7FD93FC091278001FF806D7F49486C4A90C78094
26C007FC80D9FF004B4882499226E01FE0157F00014D48824E5A48484CC9123FDDF1FE83
49EDF3FC000716F7495EEFFFF0000F5F495B4E84001F5FA24993CAFC003F4A4996C7FCA2
494B5F5F007F5C5F90C7FC5F484A96B5FC4D605A5F4B60127CC891CA5CA292B55FA24C61
A24A61A24C61645C664C5FA24A63A24C5FA24A63645E9BC8FC4A96B5FCA24C60635C654C
5EA24A4E5B203E93CA4A147F6391B51CFF654B4D16FEA249511301634B1CFC5313034961
20F84B96C7120798B5FC495015F01F0F4B1CE0A24950141F20C04B1B3F20804950147F20
004B636749525A1E034B057F5D545A49073F4A5A1E1F92CB6C6C495AF6FF8098270FFE07
FEC7FC4A72B55A09015C6D487214E0D91FF0073F1380D90FC0DF07FCC8FC78716BED88>
110 D E
%EndDVIPSBitmapFont
/Fo 139[69 124 83 2[138 138 207 55 2[55 2[69 4[138 18[179
7[151 2[179 67[{TeXBase1Encoding ReEncodeFont}13 247.95
/Helvetica-Oblique rf /Fp 134[81 2[81 2[81 3[81 81 7[81
81 3[81 7[81 81 24[81 14[81 1[81 81 3[81 81 40[{
TeXBase1Encoding ReEncodeFont}16 135.684 /Courier rf
%DVIPSBitmapFont: Fq cmsy10 24.888 7
/Fq 7 96 df<003FC112F04820F8C212FCA56C20F86C20F07E096FB7A1>0
D[<F501F0F503F81D071EFC1D0FA2F51FF8A2F53FF0A2F57FE0A2F5FFC0A2521380A252
1300A2525AA2525AA2525AA2525AA2525AA2525AA2515BA25190C7FCA2515AA2515AA251
5AA2515AA2515AA2515AA2505BA25090C8FCA2505AA2505AA2505AA2505AA2505AA2505A
A24F5BA24F90C9FCA24F5AA24F5AA24F5AA24F5AA24F5AA24F5AA24E5BA24E90CAFCA24E
5AA24E5AA24E5AA24E5AA24E5AA24E5A5F615F96CBFC5F604D5AA24D5AA24D5AA24D5AA2
4D5AA24C5BA24C90CCFCA24C5AA24C5AA24C5AA24C5AA24C5AA24C5AA24B5BA24B90CDFC
A24B5AA24B5AA24B5AA24B5AA24B5AA24B5AA24A5BA24A90CEFCA24A5AA24A5AA24A5AA2
4A5AA24A5AA24A5AA2495BA24990CFFCA2495AA2495AA2495AA2495AA2495AA2495AA248
5BA24890D0FCA2485AA2485AA2485AA2485AA2485AA2485AA25B127F90D1FC123E>102
193 99 275 0 54 D[<001EF60780007FF61FC06D1EE000FF1E3FA26D1D7F127F20C06D
1DFF003F1F806D64A2001F1F006D64000F66A26D1C070007666D1C0FA20003666D1C1F6C
666E1B3FA26C666E1B7F017F65A26E1BFF013F656E62A2011F9AC7FC6E62010F64A26E1A
070107646E1A0FA20103646E1A1F6D646F193FA26D646F197F027F6392BCFCA26E63A36E
98C8FCA26E62A203FCCB12070207626F180FA20203626F181F6E6270173FA26E6270177F
037F61A27017FF033F61705EA2031F96C9FC705E030F60A270160703076070160FA20303
6070161F6F6071153FA26F6071157F047F5FA27115FF043F5F715CA2041F94CAFC715C04
0F5EA271140704075E71140FA204035E71141F705E72133FA2705E72137F057F5DA27213
FF053F5D725AA2051F92CBFC725A050F5CA2F0FC0705075CF0FE0FA205035CF0FF1F715C
19BFA2715C19FF725BA3725BA37290CCFCA2725AA3725AA3725A725A>115
148 128 270 116 56 D[<003FBD12C0481CE0BE12F0A57E7ECF121FB3B3B3A40007BDFC
5A5AA57E7ECF121FB3B3B3A4003FBDFC5ABEFCA56C1CE06C1CC0>92
143 117 270 115 I<003FC01280481FC0C112E0A57E7ED2123FB3B3A8F71FC0A2F70700
733875C98A>I<F001F04E7E4E7EA34E7EA24E7EA24E7FA34E7FA295B57EA24DEBBFF0A2
4DEB1FF8A2F0FE0F050780F0FC07050F80A24D486C7EA24E7E053F814E7E057F81A24D48
6D7EA24C496D7EA295C7121F4C824D140F040782A24C486E7EA24D1403041F824D80043F
83A24C486E7FA24C486F7EA24D153F4B8494C9121F4B84A24B48707EA24C1607030F844C
1603031F84A24B48707FA24B48707FA24C177F03FF854C173F4A86A24A90CB6C7EA24B18
0F0207864B1807020F86A24A48727EA24A48727FA24B84027F874B197F02FF87A2494973
7EA292CD121F49884A1A0F010788A24948747EA24948747EA24A86013F894A86017F89A2
4948757EA24A1B3F488A91CF121F488AA24848767EA24848767EA2491C03001F8A498800
3F1F80A248487613C0A24848F57FE0A2491D3FA290D1121F6C1FC0003EF60F80738275FC
8A>94 D<003EF60F80007FF61FC0481FE06D1D3FA26D1D7FA26C6CF5FFC0A26C6C521380
A2001F1F006D64000F666D1C07A26C6C525AA26C6C525AA26C666E1B3F6C666E1B7FA26D
6C515AA2013F656E62011F9AC7FC6E62A26D6C505AA26D6C505AA20103646E1A1F6D646F
193FA26D6D4F5AA2027F636F19FF023F636F60A26E6C4E90C8FCA26E6C4E5AA20207626F
180F0203626F181FA26E6D4D5AA26E6270177F037F617017FFA26F6C4C5BA26F6C4C90C9
FCA2030F6070160703076070160FA26F6C4C5AA26F6071153F6F6071157FA2706C4B5AA2
706C4A5BA2041F94CAFC715C040F5E711407A2706C4A5AA204035E71141F705E72133FA2
706D495AA2716C495AA2053F5D725A051F92CBFC725AA2716C485AA205075CF0FE0F0503
5CF0FF1FA271EBBFF0A271EBFFE0A2725BA2725BA37290CCFCA2725AA2725AA3725A725A
738275FC8A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmr12 24.888 10
/Fr 10 94 df[<EA01F8EA07FE381FFF804813C04813E0A2B512F0AB6C13E0AD6C13C0AD
6C1380AD6C1300AD6C5AAD6C5AAD6C5AAD6C5A90C7FCB2EA01F8EA07FE381FFF804813C0
4813E0A2B512F0A86C13E0A26C13C06C13803807FE00EA01F8>20
147 110 274 56 33 D[<171E173E177E17F8EE01F01603EE07E0EE0FC0EE1F80EE3F00
167E5E15014B5A4B5A4B5A151F4B5A5E157F4BC7FC4A5AA24A5A14075D4A5A141F5D143F
5D147F5D14FF5B92C8FC5B5C13075CA2130F5C131FA2495AA3495AA213FF5CA25AA25CA2
5AA291C9FC5AA35B120FA4121F5BA4123FA25BA5127FA55BA412FFB3AA127FA47FA5123F
A57FA2121FA47F120FA412077FA37E80A27EA280A27EA280137FA26D7EA36D7EA2130F80
1307A2801303807F817F147F81143F81141F81140F6E7E8114036E7EA26E7E6F7E153F82
6F7E150F6F7E6F7E6F7E1500167E82EE1F80EE0FC0EE07E0EE03F01601EE00F8177E173E
171E>47 206 108 282 79 40 D[<127012F8127C7E7E7F6C7E6C7E6C7E6C7E6C7E137E
137F6D7E6D7E6D7E806D7E1303806D7E6D7EA26E7E81143F6E7E81140F81140781140381
8180828082157FA282153F82A26F7EA36F7EA2821507A282A281A21780A28117C0A38117
E0A417F0167FA417F8A2163FA517FCA5161FA417FEB3AA17FCA4163FA517F8A5167FA217
F0A416FF17E0A417C05DA317805DA21700A25DA25EA2150F5EA24B5AA34B5AA25E157F5E
A215FF5E5C93C7FC5C5D5D14075D140F5D141F5D4A5A147F5D4AC8FCA2495A495A5C1307
495A5C495A495A49C9FC137E5B485A485A485A485A485A90CAFC123E5A5A1270>47
206 117 282 79 I[<EE0FFF93B512F0030714FE033FECFFC09226FFF80113F04A9039C0
003FF8020790C7EA0FFEDA0FFCEC03FF4A486E7FDA7FF06E13E04A486F7E49496F7E4949
6F7E92C9120F4948707E010F844948707FA24948707FA24948707FA201FF854A177F4886
A248864A173FA24886A34849717EA3481B80A5481BC0A391CB7EA2481BE0AAB51AF0B3AE
6C1BE0A86E5F6C1BC0A66C1B80A46C6D4D1300A46C62A36C6D4D5AA26C62A26C6D4D5AA3
6D6C4C5B013F616E5E011F616E5E010F96C7FC6D6C4C5A6D6D4B5AA26D6D4B5A6D6D4B5A
6E6C4B5A6E6C4A5BDA0FFE020790C8FC6E6C4A5A020101C0EB3FF86E9039FC03FFF0033F
B612C003074AC9FC030014F0040F90CAFC>84 141 120 264 101
48 D[<160F4C7E163F167F16FF15035D151F157F4AB5FC140F91B6FC131FB8FC15BFECFE
3F14F0140013E0C8FCB3B3B3B3B3B14B7FA292B57E4A80023FECFF80007FBA12C0A6>66
137 110 264 101 I[<923801FFF8031FEBFFC092B612FC020315FF020F16C0023F16F0
91267FFC0014FC902601FFC0010F13FF4990C7000380D907FC020080D90FF0033F7F4948
6F7FD93F806F7F49C96C7F01FE707F4848707F72148048487113C0485A497113E0120F49
7113F0121F497113F8A2003F7213FC90CBFCA2481AFE01F08313FC13FFB56C18FF808580
A76C5BA26C495E6C90CAFC6C4819FE6C5ACCFCA24F13FCA34F13F8A34F13F0A21BE0611B
C0611B8096B51200A24E5B624E5BA24E5B4E5B624E5B4E90C7FC614E5A4E5A4D5B614D5B
4D5B4D90C8FC4D5A604D5A4D5A4D5A4C5B4C5B4C48C9FC5F4C5A4C5A4C5A4C5A4C5A4B90
CAFC4B5A5E4B5A4B5A4B5A4B48161F4B5A4BCAFC4A48173E5D4A5A4A5A4A5A4A5A4A4817
7E4ACB127C14FE495A5C494818FC495A495A4948EF01F849CBFC017E181F90BBFCA25A5A
481AF05A5A5A5ABCFCA21BE0A4>80 137 118 264 101 I<EA01F8EA07FE381FFF804813
C0A24813E0A2B512F0A66C13E0A26C13C0A26C13803807FE00EA01F8C8FCB3B3ADEA01F8
EA07FE381FFF804813C0A24813E0A2B512F0A66C13E0A26C13C0A26C13803807FE00EA01
F814596ED838>58 D<003FC212F04821F8C312FCA46C21F86C21F0D6FCB3AE003FC212F0
4821F8C312FCA46C21F86C21F0863075CB9D>61 D[<B612F8A890C8FCB3B3B3B3B3B3B3
B3B3B3AB90B512F8A8>29 207 106 282 56 91 D[<B612F8A8C71207B3B3B3B3B3B3B3
B3B3B3ABB6FCA8>29 207 124 282 56 93 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmmi12 24.888 17
/Fs 17 119 df<EA01F8EA07FE381FFF804813C0A24813E0A2B512F0A66C13E0A26C13C0
A26C13803807FE00EA01F814146E9338>58 D<EA03F8EA0FFE487E4813804813C014E0B5
FC14F0A214F8A414FC7EA27E6C13BC6C133CEA03FCC7FCA7147CA21478A414F814F0A213
0114E0A2130314C01307A21480130F14005B133EA25B5BA2485A485A485A120F485A90C7
FC121E120C163C6E9338>I[<99263FFFC0160E090FB500FE160F98B700C0151F080704F0
153F083F04FC157E4FB915FE07079126FC003F6D1301073F91C7000113E096B500F86E6C
6CEB03FC060302C0DB0FF81307060F49C96C6C130F4E01F8DC01FE131F067F01C0706CEB
3FF84DB5CBEA7F804D01FC063F137F050F4995381FC0FF4D01E0DE0FE113F04D49F007F3
94B5CCEA03F74C4997B5FC4C01F87314E0040F5B4C49854C5B4C90CE6C13C04C5A4B4987
4B5B4B491D804B49875D4B5B4B4975130092B5CFFC4A5B5E4A674A5B4A491C075C4C654A
5B5C91B55A6A4991D0FC5D5B494966A2495BA2494966491F0FA2495B6A4B1D0790B59BC8
FC5D5AA24891D4FCA3485BA3485BA35A5CA35A5CA35A5CA55CA2B5FCA65C200F68A36820
3E7E207E207CA220FC686E1C016C671F03681F076C676E1C0F555A6C9CC9FC676E1C7E6C
1E7C1FFC6C6D515A545A6C6D515A1E0F6C6D64545A6D6C51CAFC6D1C7E6F4F5A6D6D4F5A
6D6D4F5A6D515A6D6DF13FC06D6D4F5A6D01FE07FECBFC6E6CF003FC6E6DEF0FF86E01E0
EF3FF06E6DEFFFC06E01FC04035B020101FFDC0FFECCFC6E02E0ED7FF8033F01FC913807
FFE06FD9FFE090B51280030791B648CDFC030117F8DB003F16C004074BCEFCDC007F14F0
050301FCCFFC>144 149 118 272 145 67 D[<99261FFFE016070907B500FE178098B7
00C0150F080704F8151F083F04FEED3F004FB95D07079126FC001F01C05C071F02800101
7F077F01F8C8D83FF0495A4EB500C0DB0FFC1303060749C9D803FE1307061F01F8DC00FF
130F067F01E0716C485A95B50080173F050349CB381FC03F4D01F895380FE07F051F01E0
726C485A4D49F003F194B5CC13FB4C4973B5FC4C49735C4C13F0041F49864C5B4C49745B
93B5CEFC4B01FC874B5B4B49654B894B5B4B5B4B496592B5CF7E4A5BA24A499BC7FC4A5B
4A49885C4C654A5B5C5E91B5664991D0FC5D5B494966A2495BA249496621075B495B6A4B
1D0390B59BC9FC5D5AA24891D5FCA3485BA3485BA35A5CA35A5CA35A5CA55CA2B5FC0A3F
B9FC5284A3A0C7FC4A8599C7003F02FCC8FC0C0114E0785CA269A26C9DC9FCA266A26880
667E68A2666C7F68A26C6580687E6E637E6E657E6E636C676D6C63A26D6D97B5FC6D6D64
656D6D616D6D616D6D4F91CAFC6D6DF11FEF6D6DF13FCF6E6C6CF0FF8F6E6D4DEB07FE6E
01F0EF07FE6E6D94381FF8036E01FEEF7FF00201D9FFC04B48486C5A6E02F0030FEB8000
033F01FFDBFFFEC7FC030F02F8011F01F8147C030391B700E01438030006801418043F04
FCCEFC040716E0DC007F02FCCFFC050191D0FC>145 149 118 272
160 71 D[<0403B9040FB712FE4C5216FF69A2A114FE528293C704C00401EDFE00060F4A
CB6C14E07202F87291C7FC724A7213F8724A1AE051721380729AC8FCFA1FFC736D61585A
756173505A6B736D4EC9FCF901FC736D4D5A575A754D5A734F5A575A736D177F57CAFC73
6E4B5A69764B5A734E5A565A746D4B5A565A746D4BCBFC20FE764A5A744C5A555A746D14
0F555A746D4A5A555A7692CCFC7416FE545A746E485A545A77485A744B5A77485A754ACD
FC1EFE75EBF1FC1DF3F5FFF8755C66755C667591CEFC658987A27580A27580A28A63638A
635180F31FDFE13F9F7FF37F0F1BFE50486C7FF203F850486C7FF20FE0081F8250487EF2
7F8050C780624F486E7F4F5A4F48824F48804F5A4F486E7F4FC8FC07FE6F7F4E5A4E4883
0607824E5A4E486F7F614E48844EC97E06FE854D48824D5A4D48717F4D5A4D48854D4883
4DCBFC4D727F4C5A4C48727F4C5A4D864C48844C5ADC7F80727F4CCCFC4B48738015034B
48884B4885151F033F757FEDFFF04A8A02076D97B5FC021F518091B56C4F8001070A0F80
90B76C067FECFFE0007F04F8050FB812FCB86C5FA25FA26C4C65>168
141 123 268 168 88 D[<003FB800F0060FB712E048714E16F0A2B9481DE0A26C4D1DC0
D8000F03E0CDEDF00001004ACE003F91C7FC6E497513F84C1DE06E7713806E9CC8FCF81F
FC70646E535A70646E535A565A7099C9FC6E525A555A71F107F06E1C0F71626E525A555A
714FCAFC6F1BFE545A714E5A81714E5A6F505A545A714E5A6F50CBFC1EFE7117016F6271
4D5A6F4F5A535A724C5A6F4F5A53CCFC846F19FE724B5A704D5A525A724B5A704D5A1C3F
725E704DCDFC1CFE706D4A5A515A724A5A704C5A1B1F725D704C5A51CEFC706E13FE505A
73485A704B5AA273485A714A5A505A716D48CFFC1AFEF1F9FC7113FB62F1FFF0715C6271
5C97D0FC61836161A25FA261A25FA261A25FA261A25FA261A25FA296D1FCA294B5FCA260
A25EA260A25EA260A25EA260A25EA2605EA35E605E844BB5FC031F14FE0103B912E04984
A46D60>148 141 122 268 117 I[<057FBD12FE94BFFC5E22FEA25E0980C9000F13FC08
E0CA4813F84FCB4813F04C02F04E13E0078095B512C04ECB4814804C01F84E14004E4E5B
18C04C494E5B95CC485B4D4F5B4D4F5B4C4896B55A4D4E5C4D4E91C7FC047F614D624D4E
5B04FF4F5B94CC485B4C4F5B9BB55A4B484E5C5391C8FC5E03034F5B4C4E5B535B03074F
5B4C4E5B9AB55A4C4D5C030F609CC9FC4C4D5B031F4E5B525B93CB485B6F4E5B92CCB55A
515CA25191CAFC515B515B515B515B515B98B55A62655091CBFC505B505B505B505B505B
97B55AA24F5C4F91CCFC4F5B4F5B4F5B4F5B4F5B96B5FC634E5C4E91CDFC4E5B4E5B4E5B
4E5B4E5BA295B55A4D5C4D91CEFC4D5B4D49EF01C04D494D7E4D5B4D491707A294B54860
4C4A170F4C91CBFC4C49614C49181F4C5B4C4996C8FC4C626093B548183E4B4A187E4B91
CCFC4B4919FE4B49614B4918014B5B674B49180392B55A4A4A4E5A4A91CCFC4A49190F4A
494F5A4A5B4A1B3F4C4F5A4A5B91B54819FF494A604991CC485B49496149496149494F90
C9FC6549496149494F5A90B5481803484A180F4891CC003F5B48494EB5FC4849180F4897
B6FC4A057F5D4890BDFC5A66A2BFFC6C65>136 141 117 268 138
I<EF1FFC94B57E040780041F14F093277FFC0FF8137E923C01FFE001FC01FF0307902780
007E037F4B48C76C5ADB3FFCEC1F87DB7FF0EC0F8F4B4815CF4A4914074A496EB5FC4A90
C892C7FC4A824A5A4A5A4A486F5B14FF495B5B4B705A495B5B4B16FF49615B92CAFC495F
4A6013FFA248495E635A5C486063485BA26148625CA2614897C8FC5CA26148615CA2197F
6291CAFCB5FC19FF625BA24EED01E0501303A360494E1307007F1CC0A34EED0F80626000
3F4D151F4E16006D60001F4D5D95B5143E000F5EDD03F7157E6C6CDB07E7157CDD0FC315
FC6CDC1F835D6EDA3F0314016CDC7E015D6C6DD901FCECC0036D6C49486C5D6D6CD90FF0
017F495A6D6CD93FC090383FE00F6DB448B44890391FF83F800103D9FFFEC76CB5C7FC01
0002F86E5B023F01E0020113F8020790C9EA3FE05B5D78DA6A>97
D<943801FFF0053F13FF4CB612C0040715F0041F9038803FFC933A7FFC0003FE922601FF
E0EB00FF03070180EC3F804B90C8EA0FC0DB3FFCED07E04B5A4B48ED03F0020301C01501
4A49153F4A90C9EAFFF84A485D023F5E4A485D4A485D495B5B4B4B13F0495B5B494917E0
A24990C96C13C04919804A70130001FFEF01FC484993C8FCA25A5C5A5C5AA25C5AA25A5C
A35A5CA3B5FC91CDFCA45BA65BA61B601BF0007FF101F81BF01A03F207E0003FF10FC06D
F01F80F23F00001F197E626C6C4D5A6CF007F06E4C5A6CF03FC06C6D4C5A6C4D48C7FC6E
ED07FC6D6CED1FF86D6CED7FE0D90FFE913803FF806D6CDA3FFEC8FC6D9039E007FFF801
0090B612C0023F92C9FC020714F09126007FFECAFC4D5D77DA57>99
D<943801FFE0053F13FE0403B67E040F15E0047F9038807FF0923B01FFF8000FFC4B01E0
EB03FE030F01801300DB3FFEC8127FDB7FF816804A4848153F4A49ED1FC04A13804A90C9
13E04A48160F4A5A147F4A5A495B495B49181F494917C05B5D4990CA123F4919804A177F
01FF190048614A4C5A484E5A4A4C5A48F01FF0F17FE048494B485A06075BDE7FFEC7FC48
933807FFF84A0107B512E091B8C8FC18F84894C9FC94CAFC02C0CCFCA25A5CA491CDFCA4
B5FC5BA4127FA71B60003F1AF0F201F81BF01A03001FF107E0F20FC0F21F806C6CF03F00
1A7E6C616E4C5A6CF007F04F5A6C6DEE3FC06C4E5A6D6C4B48C7FC6D6CED07FC6D6CED1F
F86D6CED7FE06D6C913803FF806D6C6CD93FFEC8FC6D9039F007FFF86D6CB612C0021F92
C9FC020714F09126007FFECAFC4D5D77DA5E>101 D[<51B47E090F13F8093F13FE517F97
2601FF801380973A03FE001FC05048EB07E05048EB03F05048EB1FF85048137F087F14FF
50485A5213FC4F5C4F13805213F861A21B004F16F01EE0617613C0506D1300073FEC00FC
9AC7FCA34F5AA419FF62A46062A46062A56062A46062A2047FB812FC8893B9FCA3705F93
C7001F90CAFC6061A5187F61A418FF61A45F61A45F61A55F61A45F61A45F96CBFCA45FA2
60A4177F60A417FF60A45E60A45E60A54C5BA54C5BA495CCFC5EA35FA2163FA25FA2167F
5FA44C5AA35F5D5F13FCEA07FF4801805C485C4801C091CDFCA2484A5AA25EB512804B5A
A24A485A495C49495A6C5A01E0495A6CC748CEFC6D485A391FE003FC390FFC0FF86CB512
E000015C6C6C90CFFCEB0FFC>102 187 118 272 100 I[<17FEEE03FF4C13804C13C05E
5EA25EA41880180082705AEE0FF8EE07E093C8FCB3AAEC07FE91381FFF80027F13E049B5
7E903903FC0FF8903907F007FC90390FC003FED91F807FEB3F00013E81497F495B000182
5B485AA2485A5D485AA2121F90C7485BA2123E5D007E93C7FC007C5C5EA200FC147F485D
A215FFC85B5C5EA25C5EA25C5E5C5EA25C93C8FCA25C5D147F5DA214FF5DA25B5D5B5DEF
01E04915035DA24915074B14C05B92C7FCEF0F805B4A141F1800A24948143EA2177E177C
4A14FC5F4C5A133F4C5A4C5A011F140F5F010F023FC7FC167E6D6C485A903903FE07F86D
B55A6D14C0023F90C8FCEC07FC>51 138 122 263 69 105 D[<EE3FE00207B5FC0103B6
FC5BA317C07F90C7FC151F1780A41700A25DA25EA2157FA25EA215FFA25EA25CA25EA25C
A25EA25CA25EA25CA25EA25CA293C7FCA25CA25DA2147FA25DA214FFA25DA25BA25DA25B
A25DA25BA25DA25BA25DA25BA292C8FCA25BA25CA2137FA25CA213FFA25CA25AA25CA25A
A25CA25AA25CA25AA25CA25AA291C9FCA248153C167C5BA2127F16FC495CA2150100FF5D
5BA215035E5B15075EA2150F5E007F141F93C7FC5D003F143E6D137E001F5C000F5C3807
FC033903FF0FF06CEBFFE06C1480013F90C8FCEB07FC>43 145 119
270 60 108 D<DAFF80EEFFF8010301F0030F13FF4901FC037F14E0496D4AB67E90271F
C3FF8001079038807FFC49C66D903A1FF8001FFE017E017FDA3FC0EB07FF496E01FFC76C
7F484890273FF001FC82494B488000039226F807E082494B488000076F484882494BC9FC
177E000F4C83494B167FEEFDF0001F15FF90C75C4B5B485E003E1BFF94CAFC007E91B5FC
007C5D5EA200FC49495E48645EA24A60C7FC4C60A24A60655EA24A60655E634A97C8FCA2
93CA5A645C1B7F4B60A2027F18FF645D6202FF61A24B5E6449F401E05015034B60A2494E
15075214C04B5E99C7FC49F40F80624B4D141F1F005B50485C4B1A3E1E7E491C7C5114FC
92CA5E535A49183F535A4A1A07081F4A5A017F64080F023FC7FC4A72137E0807495A9739
03FE07F84A71B55A6D487114C04A063F5BD90F80DE07FCC8FC6B5D7ADA79>110
D<94381FFF800403B512F8041F14FE047F6E7E922701FFF00113E04B90C7EA1FF0DB0FFC
EC07F8DB1FF0EC01FCDB3FC0EC007E4B48814BC9FC4A48EE1F804A48160F14074B17C002
0F17FF4B1503021F5E5D023F5EA2027F4C13805DA26F170002FF705A62735A6FED00C06F
93C7FCA215FE8116C016F86EEBFFC017FEEFFFE06E15FC6E15FF19C06E826E826E16FC6E
8280033F81030F82030182ED001F040081170F1700063F7F180F84848484A201F8177FEA
03FEEA0FFF486D163F487F625AA2197FB5485FA26291CA12FF4995C7FC495E495F01E016
0300FCCA5B007C4D5A007E4D5A4E5A6C4D5A6C6C4C5A6D4CC8FC6C6CED03FED807F84B5A
D803FEED3FF82600FFC0903801FFE0D97FFC011F1380011FB648C9FC010715F001001580
020701F0CAFC4A5D75DA5F>115 D[<EE03F04C7E4C7E4C7E163FA2167FA25FA216FFA25F
A25DA25FA25DA25FA25DA25FA25DA25FA25DA294C8FCA25DA25EA2157FA2003FB912F848
18FCBAFCA219F87EC7000101F8C8FCA25EA25CA25EA25CA25EA25CA25EA25CA293C9FCA2
5CA25DA2147FA25DA214FFA25DA25BA25DA25BA25DA25BA25DA25BA25DA25BA292CAFCA2
49EE0780180F5C181F017F1700A24A5D183E187E01FF167C4A15FC601701604A4A5A1707
60170F4D5A95C7FC017F153E5F17FC013F4A5A6E495A011FEC0FE0010F4A5A6D6C017FC8
FC903903FF03FE6DEBFFFC6D14F0023F13C0DA07FEC9FC>62 131
123 256 73 I<DA07FCEF0FC091261FFF80EE3FF0027F01E0EE7FF849B56C16FF902703
FC0FF84B13FC902707F007FC5D90270FC003FE17FED91F807FD93F005F017E81137C4984
00018249844848841B7F485A4B173F4848191FA2001F1A0F90C7485B1B07123E4BEF03FC
007E93C9FC007C5C5EA200FC027FEF01F8485DA215FFC84917F05C4C1603A24A19E05EA2
4A18074C17C0A25C4C160F1C805C93CAFC1B1F4A19005D631B3E147F4B177E1B7CA202FF
605D1A0163A249494C5AA2505AA21A0F631A1F98C7FC1A3EA2627F624F5AA24F5A6E6C4B
5A190F023F5F6F4BC8FC021F163E6E6C15FC6F4A5A6E6D495A6E6DEB0FE0020001F0EB3F
C092277FFE01FFC9FC6FB55A030714F8030114E0DB000F90CAFC575D7ADA62>118
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmex10 29.8656 4
/Ft 4 63 df<973801FF80080713C01A1F6297B5FC190361191F6196B6FC60060715804E
15004E14FC067F5C95B612E04D5D4D5D4D92C7FC051F14FC4D5C4D5C94B65A4C5D4C5D4C
92C8FC4C5C4C5C4C5C4C5C93B65A4B5D5D614B92C9FC4B5C4B5C5D604B5C92B65A5C604A
5D5C95CAFC5C4A5C5F5C4A5CA291B65AA2495DA2495DA2495DA24992CBFCA25B5E5B5E5B
A290B65AA3485DA3485DA35A5EA25AA25EA25AA393CCFC5AA45D5AA8B65AB3B3B3B3B3B3
AF003F14F052E1217EDC>56 D<003FB512F0B612FCB3B3B3B3B3B3AF6C80A87E81A47E82
A37EA282A27EA2827EA36C81A36C81A36D80A27F827F827FA26D81A26D81A26D81A26D81
A26E80A26E8080836E808084806E8184806F806F8084816F806F806F8185816F81708070
80708070807080708170817081718071807180050714FF7181718171817214F8061F8072
14FF721580060115C084193F8519078519001A3F861A070801138052E12182DC>58
D[<4EB61280060715E0B3B3B3B3B3B3AE4E15C0A81C80A260A31C00A360A263A36063A3
95B65AA3635FA263A25F63A24D5DA298C7FC5FA2625F625F62A24D5CA294B65AA24C5D62
5E97C8FC5E614C5CA24C5C615E4C5C6193B6FC614B92C9FC4B5CA24B5C4B5C4B5C604B5C
5D92B65A95CAFC4A5C4A5C4A5C4A5C4A5C4A5C4A5C91B6CBFC495C4914F8495C495C495C
495C4991CCFC90B512FC00035C485C4814C0003F5C4849CDFCB55A14F05C148049CEFCA2
6D7E14E08014FC6C7F6C6D7E000F806C14F06C80C6806D13FF6D806D806D806D806D806D
14FE6D806E806E806E806E806E806E806E806E80846F80816F80846F806F806F80A26F80
6F81858285708082857080A2708085828682867081A27180A27180A28683868386A28387
A27181A28783A287A28387A37280A38784A387A284A31C80A384A21CC0A87215E0B3B3B3
B3B3B3AE06011580>83 452 86 130 220 60 D<003FB512F0B612FCB3B3B3B3A6003F14
F01E502182DC>62 D E
%EndDVIPSBitmapFont
/Fu 107[83 83 24[124 124 124 179 124 138 69 124 83 138
138 138 138 207 55 124 1[55 138 138 69 138 138 124 138
138 9[234 3[165 2[165 193 179 1[138 2[69 2[151 165 179
179 1[165 6[69 11[69 2[145 1[83 83 55 36[124 2[{
TeXBase1Encoding ReEncodeFont}46 247.95 /Helvetica rf
%DVIPSBitmapFont: Fv cmsy10 29.8656 6
/Fv 6 59 df<001FC412E0007F23F8A2C512FCA46C23F8A2001F23E0960A6BC2C1>0
D<EFFFFE041FEBFFF093B612FE0307EDFFC0031F16F0037F16FC4AB9FC020718C04A844A
84027F18FC91BA7E498549864986498649864986A2498690BC7E4887A2481C80A2481CC0
A2481CE0A2481CF0A3481CF8A3481CFCA5BE12FEAF6C1CFCA56C1CF8A36C1CF0A36C1CE0
A26C1CC0A26C1C80A26C1C00A26C636D626D62A26D626D626D626D626D97C7FC6D616E60
021F18F06E606E60020195C8FC6E6C16FC031F16F0030716C003004BC9FC041F14F00400
49CAFC5F5F72ED7C>15 D<001FC5B41280007FA113E0A2C5B512F0A46CA113E07E6CA113
80D7C8FCB3B3A4001FC5B41280007FA113E0A2C5B512F0A46CA113E0A2001FA11380D7C8
FCB3B3A4001FC5B4128048A113E05AC5B512F0A46CA113E0A2001FA11380A46E72F4C1>
17 D[<FA3F80587E8FA28F223F8F221F8F220F8F7C7EA27C7F7C7FA27C7FA27D7E7D7EA1
7E231F7D7EA17E7D7F8F7D7FA17F7D7FA16C7EA16C7EA16C7EA2A16C7EA16C7FA16C7FA1
6C7FA16C7FA1EB7FFC001FC5B47E007FA17FA181C5B67EA181A115F8A1816CA180A16F7E
001FA181D7C7000713F0A16E7FA16E13FEA16E7FA1033F13C0A16F13F0A1030713FCA16F
7FA103006D7EA17013E0A1041F13FCA17013FFA1040314E0A1040014F8A1053F13FFA171
14E0A1050714FEA10501ECFFC0A1DD003F14E0A1180FA2A1183FA14DB612C0A10507ECFE
00A1051F14E0A14D91C7FCA194B512F8A1040314E0A1040F91C8FCA14C13FCA1047F13E0
A193B51280A1030349C9FCA14B5BA1031F13F0A14B13C0A192B5CAFCA14A5BA14A13F8A1
4A5B001FC5B612C0007FA15DA14BCBFCC5B65AA15DA115E0A15D6CA15CA192CCFC001FA1
5BD7C66C5AA1EBFFF0A1485BA1485BA1485BA14890CDFCA1485AA2A1485AA1485AA1485A
595BA15B595B6B5990CEFCA15A595A233FA15A595A595AA2585BA2585B5890CFFCA2585A
6B221F6B223F6B227F6BA26B7C5A>219 138 114 258 248 41 D[<001FBF12C0007F1E
F0A2C012F8A47EA2121FD1121FB3B3B3B10003BFFC5A5AA25AA27EA27E7ED1121FB3B3B3
B1001FBFFC127FA2C0FCA46C1EF0A2001F1EC0>109 172 114 299
138 57 D<001FC212F8007F21FEA2C4FCA47EA2121FD41203B3B3B1F901FEA2F900FC88
4272D7A5>I E
%EndDVIPSBitmapFont
/Fw 105[39 31[35 39 20 35 24 1[39 39 39 59 16 2[16 1[39
20 39 1[35 1[39 14[51 3[51 4[20 5[51 1[47 7[39 39 39
39 39 39 39 39 39 39 20 20 46[{TeXBase1Encoding ReEncodeFont}34
70.5976 /Helvetica rf /Fx 138[102 1[102 102 1[102 102
102 102 2[102 102 2[102 102 3[102 32[102 17[102 46[{
TeXBase1Encoding ReEncodeFont}14 169.605 /Courier rf
/Fy 75[47 27[47 29[71 3[71 79 39 71 47 1[79 79 79 118
31 2[31 2[39 79 79 71 1[79 11[102 1[94 2[94 2[118 2[71
39 2[86 13[79 1[79 3[79 1[79 3[39 44[{TeXBase1Encoding ReEncodeFont}31
141.195 /Helvetica rf /Fz 134[179 179 258 179 199 119
139 159 1[199 179 199 297 99 199 1[99 199 179 119 159
199 159 1[179 9[357 3[199 258 278 218 1[258 337 3[139
2[218 238 1[258 1[258 65[{TeXBase1Encoding ReEncodeFont}34
357.117 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 4 1
4 3 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 5222 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -11.38092 190.63329
355.65929 221.93147 .5 Frame  gsave 0.28 0.24 0.55 setrgbcolor fill
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -11.38092 -19.91682
128.03734 -38.41138 .5 Frame  gsave 0.28 0.24 0.55 setrgbcolor fill
grestore end
 
@endspecial
7450 5613 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial 392
w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial 392 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial 392 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end


@endspecial 392 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial
392 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial 392 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial 392 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end


@endspecial 392 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial
392 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial 4854 1302
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial -147 x @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end
 
@endspecial -147 x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0.75 setgray  0.0 0.0 1.2 SD  end


@endspecial 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001
3450 a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /R >> >> /PUT pdfmark end
 5001 3450
a 5001 3450 a
SDict begin [ /Page 4/View [ /XYZ null null null ] /Title (Interpretation of Quantif{ic}ations)
/OUT pdfmark end
 5001 3450 a 4903 1736 a
 0.75 setgray
 4903 1736 a Fz(Inter)l(pr)-6
b(etation)85 b(of)k(Quantifications)9915 1736 y
 0 setgray
 9915
1736 a 4973 2274 a
 0. setgray
 4973 2274 a 6283 2825 a
 0. 0. 1. setrgbcolor
 6283 2825
a Fn(naf)6670 2825 y
 0. setgray
 6670 2825 a Fm(\()p Fl(p)p Fm(\()p
6980 2626 221 10 v Fl(X)21 b Fm(\)\))138 b Fv(\021)g(:9)p
8162 2626 V Fl(X)20 b(:)70 b(p)p Fm(\()p 8736 2626 V
Fl(X)20 b Fm(\))5113 3254 y
 0. 0. 1. setrgbcolor
 5113 3254 a Fv(\017)5237
3254 y
 0. setgray
 5237 3254 a 102 w Fl(naf)26 b Fm(\()p Fl(p)p Fm(\()p
6067 3055 221 10 v Fl(X)21 b Fm(\))69 b Fu(chec)-5 b(ks)69
b(if)g Fl(p)p Fm(\()p 7697 3055 V Fl(X)20 b Fm(\))69
b Fu(is)g(\223tr)t(ue\224)e(or)h(\223f)-7 b(alse\224)68
b Fv(\))5339 3538 y Fk(No)56 b(v)l(ariab)n(le)g(instantiation)6419
4374 y
 0. 0. 1. setrgbcolor
 6419 4374 a Fn(cne)-12 b(g)6900 4374 y
 0. setgray
 6900 4374
a Fm(\()p Fl(p)p Fm(\()p 7210 4174 221 10 v Fl(X)20 b
Fm(\)\))139 b Fv(\021)f(9)p 8227 4174 V Fl(X)20 b(:)69
b Fv(:)p Fl(p)p Fm(\()p 8965 4174 V Fl(X)20 b Fm(\))5113
4957 y
 0. 0. 1. setrgbcolor
 5113 4957 a Fv(\017)5237 4957 y
 0. setgray
 5237 4957 a 102
w Fl(cneg)9 b Fm(\()p Fl(p)p Fm(\()p 6136 4757 221 10
v Fl(X)20 b Fm(\))69 b Fu(pro)l(vides)f(the)g(v)-6 b(alues)68
b(of)p 8989 4757 V 68 w Fl(X)88 b Fu(that)68 b(mak)-5
b(e)5339 5279 y(f)e(alse)68 b Fl(p)p Fm(\()p 6140 5080
V Fl(X)20 b Fm(\))69 b Fv(\))g Fk(Constructive)56 b(ans)m(wer)4973
5445 y
 0 setgray
 4973 5445 a 10245 5222 a
 0 setgray
 10245 5222 a 8940 5847
a
 0. setgray
 8940 5847 a 8940 5847 a
 0. setgray
 8940 5847 a Fw(A)20 b(Real)g(Implementationf)
n(or)e(Constr)q(uctiv)n(e)i(Negation)g(\226)g(p)n(.)f(4/13)10739
5847 y
 0 setgray
 10739 5847 a 10739 5847 a
 0 setgray
 10739 5847 a 4500 6000
a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
