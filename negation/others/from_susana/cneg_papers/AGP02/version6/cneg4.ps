%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: cneg4.dvi
%%Pages: 15
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o cneg4.ps cneg4.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.06.04:1912
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (cneg4.dvi)
@start
%DVIPSBitmapFont: Fa cmti9 9 44
/Fa 44 122 df<923803FF80031F13F092383F00F803F8133C4A48133E4A48137E17FE4A
5A17FC17384A481300A3141F92C8FCA55C143E011FB612E0A217C09039007E0007147C16
0F1780A214FC4A131F1700A301015C4A133EA3167E0103147C5C1718EEFC1CEEF83C0107
15385C1778177016F0010F15F04AEBF8E01679EE3FC0011FEC0F0093C7FC91C9FCA3133E
A21238EA7E3C137CEAFE7812FC485AEA79E0EA3FC0000FCAFC2F4582B42B> 12
D<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA07001206120E5A5A5A
5A5A0B176FB318> 39 D<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203
EA07001206120E5A5A5A5A5A0B177A8718> 44 D<B51280A46C1300110579911B> I<12
1C127F12FFA412FE12380808778718> I<EC1FC0EC7FF0903801E0F8903807C03CEB0F00
011E131E133E013C131F5B13F85B1201A2485AA20007143F5BA2120F153E49137E121FA3
48C712FCA4007EEB01F8A4007CEB03F012FCA2EC07E0A24814C0A2EC0F80A2EC1F00A214
1E5C0078137C5C387C01F0383C03E0381F0F80D80FFEC7FCEA03F8203477B127> 48
D<EC0FE0EC3FF8ECF03E903803C01F903907800F80EB0F00011EEB07C0131C5BD978C013
E0EB70E0EBF06013E0120113C0ECE00F000301C013C013801381EC801F01831480903887
003F018E1400D801FC137ED800F05B90380001F84A5A4A5A4A5A4AC7FC147E14F8EB03E0
EB0FC049C8FC133E13784848EB0380485A4913074848140048C75A121E001C141E003F14
3E01F85B397DFF80F838781FFF486C5BD8E0035B6D1380D9007EC7FC23347AB127> 50
D<150E151FA2153F153EA3157E157CA215FC15F8A2140115F0A2EC03E0A3EC07C0A2EC0F
80A2EC1F00A2143EA25C147814F85C1301903803E0E0ECC1F0EB0781EB0F83EC03E0131E
133CEB7C0701F813C0EA01F0EA03E03807C00FD80F801380EA1FFC383FFFCF48EBFF82D8
F00313FF3860003FC7EA1FF8EC3F00143EA3147E147CA314FC5CA4146020417DB127> 52
D<EC07E0EC3FFC4A7E903801F81F903903E00F809038078007D90F0013C0491303131E5B
A21507017C1480A2150F1600017E131E017F133E6E5A6D6C5AECE1E090381FFBC06DB4C7
FC6D5A6D7E497F011E7F90387C7FE09038F01FF048486C7E3807C007EB8003380F000100
1E1300123E003C1478127C1278A215F800F85C5A6C495A007813035D007C495A003C011F
C7FC003E133E381F81FC380FFFF0000313C0C648C8FC223479B127> 56
D<EC0FC0EC7FF0ECFFFC903803F07E903807C03E49487EEB1F00013E7F017E14805BA248
5AA2485A151FA212075BA2ED3F00A2485A5DA2000714FEA21401140300035CEBE0070001
131E3900F039F8EB7FF1EB0FC190380003F0A24A5AA25D4A5A141F003891C7FC007E133E
00FE137E5C48485A48485A48485A38781F80D87FFFC8FCEA1FFCEA07E0213478B127> I<
161C163CA2167C16FCA21501821503A2ED077E150F150E151CA21538A2157015F015E0EC
01C0A2913803807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49C7
EA1F80A2130E131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFE
A32F367BB539> 65 D<0107B612C04915F017FC903A003F8000FE177FEF3F8092C7121F
A24A15C0A2147EA214FE18804A143FA20101ED7F00177E4A5C16010103EC03F04C5A4AEB
1FC091B6C7FC495C9139F0007F804AEB0FC0707E010F6E7E834A1301A2011F81A25CA213
3F5F91C71203A2494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01FE0001EC07FC007FB6
12F0B712C04BC8FC32337BB236> I<DB1FF013C09238FFFC010203EBFF03913A0FF00F87
8091393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E
137E13FE485A4848153CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FE
A2EE03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB
07C06C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437> I<
0107B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F014
7E170102FE15F8A25CA21301A25CA2130317035CA2130718F04A1407A2130F18E04A140F
18C0011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A04
7EC7FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A> I<0107B712F05B18E0
903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A130EA20101EC1E03041C
13804A91C7FC163C13035E9138F001F891B5FC5B5EECE0011500130F5E5C1707011F0101
5BEEC00E0280141E92C7121C133F173C91C812381778495DA2017E14014C5A01FE14074C
5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234> I<010FB51280A21600903800
3FC05DA292C7FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA2
5CA2131FA25CA2133FA291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>
73 D<91381FFFFE5C16FC9138003F80A31600A25D157EA315FE5DA314015DA314035DA3
14075DA3140F5DA3141F5DA3143F92C7FCA2121C007E5B00FE137EA214FE485BEAF80100
E05B495A387007E038780FC06C48C8FCEA1FFCEA07F0273579B228> I<0107B512C05BA2
9026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A2
5CA2130FA25C17E0011F140117C05C1603013F1580160791C7FCEE0F005B5E017E143EA2
01FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB230> 76
D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027BED0EFC610273
151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF070301031607050E
5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE0380011E017C
5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370ED3FC001F0
EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C46337BB245> I<90
2607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B140360EC
71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103151EEE801CEC801F
A20107ECC03C030F1338140016E049010713781770010E14F01503011E15F0705A011C13
01A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC1201EA07F8267FFF
807FB5140EA23A337BB239> I<0107B612C04915F883903A003F8001FEEE003FEF1F8092
C713C0170F5C18E0147EA214FEEF1FC05CA201011680173F4A1500177E010315FE5F4AEB
03F8EE07E00107EC3FC091B6C7FC16F802E0C9FC130FA25CA2131FA25CA2133FA291CAFC
A25BA2137EA213FEA25B1201387FFFF0B5FCA233337CB234> 80
D<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7127F835C1880147EA2
14FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F016C0
9138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FEA291C7FCA24913015E
137EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8EE07
E032357BB238> 82 D<913901FC018091380FFF03023F13C791387E07EF903A01F801FF
0049487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D7E
14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA200
1E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80FC0
00F0B5C8FC38E03FFC38C00FF029377AB42B> I<B53CC03FFFF003FFF8601480280FF000
01FCC7EA7F806C484AEC3E00193CA219386115036115074E5A030F140361031D4AC7FCA2
DB38FC130EA203705C15F06C6C01E05C140103C05CDA038014F060DA0700130160020E4A
5AA24A4AC8FCA24A140E147802705C5C5FD9F1C014781770D9F3805CA201F7C7EA7FC0A2
01FE5DA26C4892C9FCA249147E5B167C5B1678491470453570B24D> 87
D<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A238
1F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E147E
007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C020
2278A027> 97 D<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0073807
E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC03
C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023> 99
D<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8
EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005B
A2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01
FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0223578B327> I<EB03F8
EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E
133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F0000
3C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023> I<151FED7FC0EDF0E00201
13F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3
D9007EC7FC147CA414FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8FCA35B
133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418> I<143FECFF
80903803E1E6903807C0FF90380F807FEB1F00133E017E133F49133EA24848137EA24848
137CA215FC12074913F8A21401A2D80FC013F0A21403120715E01407140F141F3903E03F
C00001137FEBF0FF38007FCF90381F0F801300141FA21500A25C143E1238007E137E5C00
FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA023> I<EB0FC0EA03FFA25C
EA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F090
38FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB
0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C1407160000FC140E15
1E48EB07F80070EB01F023357BB327> I<EB0180EB07E0A2130FEB07C0EB038090C7FCAB
EA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60FCC65AA21201
5BA212035BA2000713C0EBC1E0000F13C01381A21383EB038013071400130E131EEA07F8
EA01F013337AB118> I<EB0FC0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137EA2137C
A213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1C0
1C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F81300150C
48141E151C123EA2007E143C1538127C157800FCEB787015E048EB3FC00070EB0F802035
7BB323> 107 D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203
A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC
1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314> I<2703C0
03F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026
383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F814801200
0001021F130360491400A200034A13076049013E130FF081800007027EEC83C0051F1380
49017C1403A2000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF000
0E6D48EB03E03A227AA03F> I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3D
E00F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F8120000015C
153E5BA20003147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578EDE070
018014F016E0001FECE1C015E390C7EAFF00000E143E26227AA02B> I<14FCEB07FF9038
1F07C090383E03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214
014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C38
1F01F0380F83E03803FF80D800FCC7FC1E2278A027> I<011E137C90387F81FF9039F3C3
87C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307
000313C01200010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A201
7EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25B
A21203A25BA21207A25BB5FCA325307FA027> I<3903C00FC0390FF03FF0391E78F07839
1C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812
001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>
114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EBE00414007F
EBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3147C00F01378
4813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F> I<1303EB0F80A3131F
A21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA2
1207A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB07005BEA0F1E
EA07F8EA01E015307AAE19> I<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8
783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100035C13E016
6002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC3000190383FE380
9038F071E73A007FE0FF0090381F803C24227AA029> I<01F01338D803FC13FCEA0F1E12
0E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A1578000114705B
A215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0
EB1F801E227AA023> I<13F0D803FC1307D80F1E130F000E141F121C123C0038143FD878
3E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA21401000314F013E0
A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEFEB1F8F
EB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C1FC7FCEA
0FFCEA07F020317AA025> 121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy9 9 4
/Fb 4 96 df<1630167816F8A2ED01F0A2ED03E0A2ED07C0A2ED0F80A2ED1F00A2153EA2
5DA25DA24A5AA24A5AA24A5AA24A5AA24AC7FCA2143EA25CA25CA2495AA2495AA2495AA2
495AA249C8FCA2133EA25BA25BA2485AA2485AA2485AA2485AA248C9FCA2123EA25AA25A
A25A1260254675B500> 54 D<0060ED018000F0ED03C06C1507A200781680007C150FA2
003C1600003E5DA26C153EA26C153C6D147CA26C6C5CA200035D90B6FCA26C5DA29038F0
00036C6C495AA201785C017C130FA2013C91C7FC013E5BA26D133EA26D133CEC807CA201
071378ECC0F8A2903803E1F0A201015B14F3A26DB45AA26E5AA36EC8FCA3141E140C2A36
80B32B> 56 D<140C141E143FA24A7EA34A7EA2903801F3E0A2903803E1F0A214C00107
7FA290380F807CA249487EA2011E131E013E131FA2496D7EA2496D7EA2491303000181A2
48486D7EA248486D7EA2491478000F157CA248C87EA2003E81A2003C81007C1680A248ED
07C0A24815030060ED01802A307CAD33> 94 D<0060ED018000F0ED03C06C1507A2007C
ED0F80A2003C1600003E5DA26C153EA26C6C5CA2000715786D14F8A26C6C495AA26C6C49
5AA200005D6D1307A2017C495AA26D49C7FCA2011E131E011F133EA26D6C5AA26D6C5AA2
01035B14E1A2903801F3E0A26DB45AA26E5AA36EC8FCA2141E140C2A307CAD33> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi9 9 11
/Fc 11 116 df<123C127E12FFA4127E123C08087A8715> 58 D<123C127EB4FCA21380
A2127F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715> I<153015
7815F8A215F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2
147814F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA213
7813F8A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA21278
12F8A25A12601D4B7CB726> 61 D<16035E5EA24C7EA2163F167FA216FFA2ED01BFED03
3F831506161F150C1518A215301570156015C083EC01800203130F15001406A25C141C14
184A80A2027FB5FC91B6FCA2903901800007A249C7FC1306835B16035B5B1370136013E0
1201D807F04A7EB549B512F0A25B34367DB53A> 65 D<0103B539C007FFFC5BA2902600
0FFCC713804BECFC00020715F0606E6C495A4D5A02014AC7FC6F130E5F6E6C5B5F92387F
80605F92383F818004C3C8FC16C6ED1FEC16F86F5AA2150782A282150FED1DFE15391570
4B7E4A5A4A486C7E150002066D7E5C4A131F4A805C4A6D7E495A49C76C7E1306010E1403
013C81137CD803FE4A7EB500C090387FFFFCA2603E337EB23F> 88
D<267FFFF8ECFFFEB5FCA2000390C8EA1FE06C48ED0F006C6C151E171C5F6D6C14605F6D
6C13014C5A4CC7FC6D6C13065E5E6D6C5B5E6D6C13E04B5A4B5AD903FC90C8FC15065D6D
6C5A5D6D6C5A15E05D6E5A92C9FCA2147E14FEA35C1301A35C1303A35C1307A2130F0007
B512E0A337337EB22D> I<EB01F8EB07FE90381F071C90387C03FEEBF801EA01F0000313
0048485B5B120F381F80015DEA3F00A21403485C127EA2140700FE5C5A1640020F1360ED
C0E016C0127CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7C300390F0787C73907
FE03FE3900F800F823227EA029> 97 D<14FE903807FF8090381F03C090387C01E03801
F800485A485A485A485A1401D83F0013C01403007EEB0F80ECFE00387FFFF8B5128000FC
C8FCA45AA415186C1438007C147015E0003CEB01C0003EEB07806CEB1E00380F80FC3803
FFE0C690C7FC1D227DA024> 101 D<ED0F80ED3FE0ED7870913801F0F815E31403A20207
13F0A291380FC1C0EDC000A4141F5DA4143F92C7FC011FB512805B1600D9007FC7FC147E
A414FE5CA513015CA413035CA413075CA4130F5CA45C131FA291C8FC121CEA7F1E133EA2
EAFE3C5B1278EA70F0EA3FC0EA0F8025457CB425> I<EB1F80EA07FF5A1400C67EA3137E
A213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7
FCA25AA2127E1304EAFE0E130C12FCA2131C131812F81338EA7C701360EA3FE0EA0F8011
357DB317> 108 D<EB01FCEB0FFF90383E03C090387800E04913603901E001E014030003
130713C013E0EC03806DC7FC13FF14F014FC6C7F6C7F6D1380130F9038007FC0141F140F
007E130700FE1480A3EC0F005A00C0131E6C5B00705B383C01F0380FFFC0D803FEC7FC1B
227CA024> 115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmtt9 9 42
/Fd 42 122 df<EB01C0EB03E0130F131FEB3FC0EB7F80EBFE00485A5B1203485A5B485A
A2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7EA26C7E7F6C7E12017F6C7EEB7F
80EB3FC0EB1FE0130F1303EB01C0133A73B327> 40 D<127012F812FE7E6C7E6C7EEA0F
E06C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0A4EB07E0ACEB0FC0A4EB1F80A3EB
3F00A2137EA25B1201485A5B1207485AEA3FC0485A48C7FC5A12F81270133A7AB327> I<
120FEA3FC013E0EA7FF0A213F8A2123FA2120F120113F01203EA07E0121FEA7FC0EAFF80
13005A12700D14738927> 44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A728927>
46 D<1538157C15FCA2140115F8140315F0140715E0140F15C0141F1580143F1500A25C
147E14FE5C13015C13035C13075C130F5CA2131F5C133F91C7FC5B137E13FE5B12015B12
035BA212075B120F5B121F5B123F90C8FC5A127E12FE5AA25A12781E3A7CB327> I<130E
131FA25B5BA25B5A5A127FB5FCA213BFEA7E3F1200B3AA003FB512805A15C01580A21A2F
79AE27> 49 D<EB3FE03801FFF84813FE000FEBFF804814C0393FE07FE0EB800F397F00
07F0007EEB03F800FE13015A6C14FC1400A3127CC8FCA2140115F8A2140315F01407EC0F
E0EC1FC0143FEC7F80ECFF00495A495A495A495A495A495A495A01FEC7FC485AD807F813
78484813FC485A485A48B5FCB6FCA36C14F81E2F7CAE27> I<EB1FF8EBFFFE0003EBFF80
000F14C015E0391FF01FF0393FC007F8EB800115FC1400A26CC7FC1204C8FC140115F814
03EC07F0140FEC3FE090381FFFC0491380A215E06D13F09038001FF8EC03FC1401EC00FE
157E157F153FA21238127C12FEA2157F48147E6C14FE007FEB01FCEB8003393FF01FF86C
B512F06C14E000031480C6EBFE00EB1FF820307DAE27> I<EC3F804A7EA214FF5BA2EB03
F7EB07E7A2EB0FC71487131FEB3F07A2137E13FCA2EA01F813F01203EA07E0A2EA0FC0EA
1F80A2EA3F00123E127E5AB7128016C0A36C1580C73807C000A849B5FC491480A36D1400
222F7EAE27> I<001FB512E04814F0A315E090C8FCACEB1FF0EBFFFC14FF158015C09038
F03FE09038C00FF0EB0007003EEB03F8001C1301C7FC15FC1400A3127C12FEA2140115F8
4813036C14F0007F130F9038801FE0393FE07FC06CB512806C14006C5B000113F838007F
C01E2F7CAD27> I<14FF010713C0011F13F04913F890B5FC48EB81FC3803FE0113F8EA07
F0EA0FE09038C000F8001F1400485A90C8FCA25A127EEB0FF838FE3FFE48B51280B612C0
15E09038F80FF09038E007F890388001FC90C7FC15FE48147E157F153F5A7E127EA3127F
6C147F157E6C6C13FE9038C001FC120F9038F007F83907F81FF06CB512E06C14C06C1480
90383FFE00EB0FF820307DAE27> I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCAC12
1EEA7F80A2EAFFC0A4EA7F80A2EA1E000A20729F27> 58 D<120FEA3FC0A2EA7FE0A4EA
3FC0A2EA0F00C7FCAC120FEA3F8013C0127F13E0A3123FA2120F120713C0120FA2EA3F80
EA7F005A5A12F812700B2A739F27> I<007FB512FEB7FCA4003F14FEC9FCA6003FB512FE
B7FCA46C14FE20127D9F27> 61 D<387FFFC080B5FC7E5CD803F0C8FCB3AAED0780ED0F
C0A7007FB6FCA2B7FC7E1680222E7FAD27> 76 D<007FB5FCB612E081816C803907E003
FEEC00FF81ED3F80151F16C0150FA6151F1680153FED7F005DEC03FE90B55A5D5D5D92C7
FC01E0C8FCADEA7FFEB5FCA36C5A222E7FAD27> 80 D<393FFC1FFE387FFE3F815D383F
FC1F3903F00FE001F85B1201EBFC1F00005CEBFE3F017E90C7FCEB7F7FEB3F7E14FE6D5A
A26D5AA26D5AA21303130780130F80131F80EB3F7E147F497E017E7F141F01FC7F140FD8
01F87F14071203496C7E120701E07F3A7FFC0FFF8000FF15C06D5A497E007F1580222E7E
AD27> 88 D<3A7FFC03FFE06D5A00FF15F0007F15E0497E3A07F000FE0000035CEBF801
00015CA2EBFC0300005CEBFE07017E5BA26D485AA290381F9F80A3010F90C7FCA2EB07FE
A26D5AA26D5AAF90381FFF80497FA36D5B242E7FAD27> I<387FFFF0B512F8A314F000FC
C7FCB3B3ACB512F014F8A36C13F0153A71B327> 91 D<387FFFF0B512F8A37EEA0001B3
B3ACEA7FFFB5FCA36C13F0153A7EB327> 93 D<3803FFC0000F13F04813FC4813FF8113
80EC1FC0381F000F000480C71207A2EB0FFF137F0003B5FC120F5A383FFC07EA7FC01300
12FE5AA46C130F007F131FEBC0FF6CB612806C15C07E000313F1C69038807F8022207C9F
27> 97 D<EA7FE0487EA3127F1203A914FF01F313C090B512F08181EC81FE49C67E49EB
3F8049131F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF
83FEECFFFC5D5D01F313C02601E0FEC7FC232E7FAD27> I<EB0FFF017F13C048B512E048
14F05A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127EA2007F
14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0FF81D20
7B9F27> I<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5FC5A5A380FF83F381FE00F38
3FC007EB8003EA7F00007E1301A212FE5AA67E007E1303A2127F6C1307EB800F381FE01F
380FF03F6CB612C06C15E06C13FD38007FF9D91FE013C0232E7EAD27> I<EB0FF8EB3FFE
90B51280000314C04814E0390FFC0FF0391FE003F8EBC001D83F8013FC48C7FC127E157E
12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C7E01F013FE390FFC07FC6CB5
FC000114F86C14F0013F13C0903807FE001F207D9F27> I<EC1FF0ECFFF84913FC4913FE
5BEB0FF014C0011F137CEC8000A6007FB512F0B612F8A36C14F039001F8000B3A4003FB5
12C04814E0A36C14C01F2E7EAD27> I<153F90391FC0FF80D97FF313C048B612E05A4814
EF390FF07F873A1FC01FC3C0EDC000EB800F48486C7EA66C6C485AEBC01FA2390FF07F80
90B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15E015F84814FE4880EB8001007EC7
EA3F80007C140F00FC15C0481407A46C140F007C1580007F143F6C6CEB7F009038F807FF
6CB55A000714F86C5CC614C0D90FFCC7FC23337EA027> I<EA7FE0487EA3127F1203A914
7F9038F1FFC001F713F090B5FC8114C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C7
13F0A36C018313E0242E7FAD27> I<130F497E497EA46D5A6DC7FC90C8FCA7383FFF8048
7FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE27> I<EA7FE07F12FF127FA2
1201A991383FFFC04A13E0A36E13C0913803F8004A5A4A5A4A5A4A5A02FFC7FCEBF1FEEB
F3FCEBF7F8EBFFFC8080143F496C7E496C7E01F87FEBF0076E7E6E7E816E7E157E3A7FFF
C1FFF002C313F8B512E36C13C316F0252E80AD27> 107 D<387FFF80B57EA37EEA000FB3
B2007FB512F8B612FCA36C14F81E2E7CAD27> I<397F07C01F3AFF9FF07FC09039FFF9FF
E091B57E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FFC3FF48
6C01E3138001F913E701F813E36C4801C313002920819F27> I<387FE07F39FFF1FFC001
F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C
018313E024207F9F27> I<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391FC00FE0
393F8007F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F1303393F80
07F0A2391FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F27> I<
387FE0FFD8FFF313C090B512F0816C800003EB81FE49C67E49EB3F8049131F16C049130F
A216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313
C0D9F0FEC7FC91C8FCAC387FFF80B57EA36C5B23317F9F27> I<397FFC03FC39FFFE0FFF
023F13804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7FC5CA291C8
FCA2137EAD007FB57EB67EA36C5C22207E9F27> 114 D<9038FFF3800007EBFFC0121F5A
5AEB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC383FFFF06C13FC000713FF000114
80D8000F13C09038003FE014070078EB03F000FC1301A27E14036CEB07E0EBE01F90B512
C01580150000FB13FC38707FF01C207B9F27> I<133C137EA8007FB512F0B612F8A36C14
F0D8007EC7FCAE1518157EA415FE6D13FC1483ECFFF86D13F06D13E0010313C001001300
1F297EA827> I<397FE01FF8486C487EA3007F131F00031300B21401A21403EBFC0F6CB6
12E016F07EEB3FFE90390FF87FE024207F9F27> I<3A7FFE07FFE000FF15F06D5A497E00
7F15E03A0F80001F00A36D5B0007143EA414F0EBC1F83903E3FC7CA4EBE79EA200011478
A301F713F8A2EBFF0F6C5CA3EBFE0790387C03E024207F9F27> 119
D<393FFC1FFF486C5A168016006C487E3901F807E06C6C485A4A5A017E90C7FC6D5AEB1F
7E5C6D5A13076D5A5C80497E130F497E143EEB3E3FEB7E1F90387C0F8001F87F00016D7E
3803F0033A7FFE1FFF80A2B54813C06C486C1380A222207E9F27> I<3A7FFC0FFF80486C
4813C0A36C486C13803A07E000F800000313015D13F00001130301F85B1200A26D485A13
7CA290387E0F80133EA2011F90C7FC5CA2130F149E14BE130714FC1303A25C1301A25CA2
13035CA213075C1208EA3E0F007F5B131FD87E7FC8FCEA7FFE6C5A5B6C5AEA07C022317E
9F27> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr6 6 4
/Fe 4 53 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E> 49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E> I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E> I<14E01301A213031307A2130D131D13391331136113E113C1
EA01811203EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFF
A218227DA11E> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi5 5 7
/Ff 7 113 df<0003B512F815FE3A003E001F80ED07C0ED03E0150149EB00F0A216F8A2
5BA4484814F01501A216E04848130316C0ED0780ED0F004848131E5D15F8EC07E0B61280
02FCC7FC251C7C9B2E> 68 D<3801FFFC14F838001F00A4133EA45BA45BA4485AA4485A
A4EA7FFE12FF161C7D9B1A> 73 D<D803FFEB07FF14803A003FC000700137146080EB33
F0016314C0EB61F81360809039C07E0180A2143F141FD80180EB8300EC0FC3140715E339
030003E615F6EC01FE140000065C157CA2000E143CD8FFE01318A2281C7C9B2D> 78
D<0003B512E015FC39003E003FED0F80ED07C0A25BA3ED0F8049EB1F00153E15F890B512
E05A9038F003F0EC00F8A2485AA44848485AA2163016603AFFFC00F8E0ED7FC0C8EA1F00
241D7C9B2B> 82 D<137013F8A213F013E01300A6EA0F80EA1FC0EA31E01261A2EAC3C0
1203EA0780A3EA0F001308EA1E18A213301370EA0FE0EA07800D1D7D9C16> 105
D<3A0F01F807E03A3F87FE1FF83A33CE1F387C3A63D80F603CD8C3F013C001E01380D803
C01300A22607801E5BA3EEF04048484814C0ED01E0EEE18016E3001E90397800FF00000C
0130137C2A127D9133> 109 D<3803C0F8380FE3FE380CFF0F3918FC07803830F80313F0
1200A23801E007A3EC0F00EA03C0141E6D5A6D5A3807BFE0EB8F800180C7FCA248C8FCA4
EA7FE012FF191A7F911F> 112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr5 5 1
/Fg 1 50 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C> 49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmex10 10 6
/Fh 6 126 df<EE01E016034C7EA24C7EA34C7EA34C7EA34C7EA28304FF7FA2EEFE3F03
0180A2EEFC1F030380A2EEF80F030780A2EEF007030F80A24B486C7EA2EEC001033F80A2
EE8000037F80A293C77E4B81A24B143F020182A24B141F020382A24B140F020782A24B14
07020F82A24B1403021F82A24B1401023F82A24B1400027F82A292C97E4A83A24A163F01
0184A24A161F010384A24A160F010784A24A1607010F84A24A1603011F84A24A1601013F
84A24A1600017F84A249CB6C7EA249183F000186A249181F000386A249180F000786A249
1807000F86A2491803001F86A2491801003F86A2491800007F86A290CD7E481B80A2481A
3FA2007CF21F008751747B7F5C> 94 D<007C1A0F6300FEF23F80A26C1A7FA26C1B006D
61A2003F626D1801A2001F626D1803A2000F626D1807A20007626D180FA20003626D181F
A20001626D183FA20000626D187FA26D6C4DC7FCA2013F606E1601A2011F606E1603A201
0F606E1607A20107606E160FA20103606E161FA20101606E163FA20100606E167FA26E94
C8FC6F5DA2023F5E6F1401A2021F5E6F1403A2020F5E6F1407A202075E6F140FA202035E
6F141FA202015E6F143FA202005E6F147FA26F92C9FC705BA2033F5CEEC001A2031F5CEE
E003A26F6C485AA203075CEEF80FA203035CEEFC1FA203015CEEFE3FA203005CEEFF7FA2
047F90CAFC5FA2705AA3705AA3705AA3705AA2705A160151747B7F5C> I<EE7F80ED0FFF
157F4AB5FC140F143F5C49B6FC13075B4991C7FC4913E090B5C8FC4813F84813E0148048
48C9FC485AEA1FF0485A5B485A48CAFCA25A5A5A291B838925> 122
D<B4FC13F813FF14C014F814FE8015C015F081C66C7F01037F9039007FFF80020F7F0203
7F1400ED3FF06F7EED07FC6F7E15016F7EEE7F80A2163F161F160F291B818925> I<12F8
7E7E7EA26C7E6C7E7F6C7EEA0FFC6C7E6C6C7E14E06C13F86C13FF013F13E06D13FF6DEC
FF807F13016D7E80140F14016E7E150FED007F291B839A25> I<EE0F80161F163F167FA2
EEFF004B5A15034B5AED1FF84B5AEDFFE01403020F5B027F5B902603FFFEC7FC017F5BB6
5A5D15C092C8FC5C14F814C091C9FC13F890CAFC291B819A25> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi7 7 17
/Fi 17 121 df<013FB512FC16FF903A01FC001FC04AEB03E0EE01F801031400177C4A80
A2010781A25CA2130F18805CA2011F1600A24A5CA2133F173E91C8127E177C4915FC5F01
7E14015F01FE4A5AA2494A5A4C5A00014BC7FC167C495CED03E00003EC1FC0B600FEC8FC
15F031287DA736> 68 D<90383FFFF0A2903801FC005CA21303A25CA21307A25CA2130F
A25CA2131FA25CA2133FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203B512C0A2
1C287DA71D> 73 D<90263FFFF0EB7FF8A2D901FCC7EA1FC04AEC1E005F010315704C5A
4AEB03804CC7FC0107141C5E4A13E04B5A010FEB0780030EC8FC4A5A157C011F13FE14C3
EC877F149E90393FB83F8014F09138C01FC0148049486C7EA2017E6D7EA201FE6D7EA249
6D7EA200016E7EA249147FA2000382B539C007FFF8A235287DA738> 75
D<D93FFC903801FFF88001019138001F006E141E170C902603BF80131C1718EC1FC0A249
6C6C1338173090380607F0A290260E03F81370176090380C01FCA290261C00FE13E05F01
18137FA20138EB3F81031F5B013014C1150F017014E3030790C7FC016014F3150301E014
FF6F5A5B15001201167C5B486C143C1207D8FFFC1418A235287DA735> 78
D<013FB512E016FC903901FC007F4AEB0F80EE07C0010315E016035C17F01307EE07E05C
A2010FEC0FC017804AEB1F00163E011F14F8ED07F091B51280A290393F800FE0ED03F002
007F15015BA2137EA201FE1303A2495CA20001160817184914E017380003EDF070B5D8C0
0113E0923800FFC0C9EA3F002D297DA732> 82 D<91381FE0089138FFFC18903903E01E
3890390780077090390E0003F0491301491300017814E0137013F0A2000115C0A216007F
7F6CB47E14F86DB47E6D13F06D7F01077F01007F1407EC00FF153F81A3001880A2003814
1E12300038141C153C00781438007C5C007E5C0077EB03C026E3E00FC7FC38C0FFFE3880
1FF0252A7CA829> I<EB0FC0EB7FF0EBF0383803C01CEA0780EA0F005A121E003E133848
1370EB07E0387FFF8038FFFC0000F8C7FCA45AA214040078130C141800381330003C13E0
381E07C0380FFF00EA03F8161B7C991F> 101 D<130E131F5BA2133E131C90C7FCA7EA03
E0487EEA0C78EA187C1230A212605B12C0A2EA01F0A3485AA2485AA2EBC180EA0F81A238
1F0300A213066C5A131CEA07F06C5A11287DA617> 105 D<1407EC0F80141FA21500140E
91C7FCA7EB03E0EB07F8EB0C3C1318EB303E136013C0A248485AA2C7FCA25CA4495AA449
5AA4495AA4495AA21238D87C1FC7FC12FC133E485AEA70F8EA7FE0EA1F80193380A61B>
I<133EEA07FEA2EA007CA213FCA25BA21201A25BA21203EC07809038E01FC0EC38600007
EB61E014C3EBC187EBC307D80FC613C09038CC038001B8C7FC13E0487E13FEEB3F80EB0F
C0486C7E1303003E1460A2127EECC0C0127CECC18012FC903801E30038F800FE0070137C
1B297CA723> I<137CEA0FFCA2EA00F8A21201A213F0A21203A213E0A21207A213C0A212
0FA21380A2121FA21300A25AA2123EA2127EA2EA7C18A3EAF830A21320EA786013C0EA3F
80EA0F000E297EA715> I<3B07801FC007E03B0FE07FF01FF83B18F0E0F8783C3B30F180
7CE03E903AFB007D801ED860FEEB3F005B49133E00C14A133E5B1201A24848495BA35F48
48485A1830EE01F0A23C0F8003E003E060A218C0933801E180271F0007C013E3933800FF
00000E6D48137C341B7D993B> I<3907801FC0390FE07FF03918F0E0F83930F1807CEBFB
00D860FE133C5B5B00C1147C5B1201A248485BA34A5AEA07C01660EC03E0A23A0F8007C0
C0A2EDC180913803C300D81F0013C7EC01FE000EEB00F8231B7D9929> I<EB0FE0EB3FF8
EBF83C3801E00E3803C00F3907800780EA0F00121E123E003C14C0127C158048130FA315
00485BA2143E143C5C12785C383C03C0381E0F80D80FFEC7FCEA03F81A1B7C9921> I<90
38F007C03901FC1FF039031E78780006EBE03C90381FC01C000CEB801E14005B0018141F
133E1200137E153E137CA213FC157C5B1578000114F0A2EC01E0EC03C03903FC07809038
FE1F00EBE7FCEBE1F0D807E0C7FCA25BA2120FA25B121FEAFFF8A22025809922> I<3807
803E390FE0FF803818F3C13930F703C0EBFE073860FC0F13F8158039C1F0070091C7FC12
01A2485AA4485AA4485AA448C8FCA2120E1A1B7D991F> 114 D<90387C03C03901FF0FF0
3907079C30390E03B078000CEBF0F8001813E1123015F0396007C0E015001200A2495AA4
49C7FC15301238007C1460EAFC3E15C0EAF87E39F06F03803970C70700383F83FE381F01
F81D1B7D9926> 120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmsy7 7 3
/Fj 3 59 df<B712FEA327037A8F34> 0 D<13E0EA01F0EA03F8A3EA07F0A313E0A2120F
13C0A3EA1F80A21300A25A123EA35AA3127812F8A25A12100D1E7D9F13> 48
D<B712F0A3C91270AD24107C942D> 58 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr7 7 6
/Fk 6 62 df<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333> 43
D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521> 49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521> I<13FF000313E0380F01F8381C007C00
30137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC3800
01E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01
F03807FFC0C690C7FC19277DA521> I<1438A2147814F81301A2130313071306130C131C
131813301370136013C012011380EA03005A120E120C121C5A12305A12E0B612E0A2C7EA
F800A7497E90383FFFE0A21B277EA621> I<B812E0A3CBFCABB812E0A32B117D9633> 61
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmsy10 10 12
/Fl 12 104 df<007FB81280B912C0A26C17803204799641> 0 D<EB1FF0EBFFFE487F00
0714C04814E04814F04814F8A24814FCA3B612FEA96C14FCA36C14F8A26C14F06C14E06C
14C0000114006C5BEB1FF01F1F7BA42A> 15 D<007FB812F8B912FCA26C17F8CCFCAE00
7FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836287BA841> 17
D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8FCEA01F8485A485A485A
5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00F0C9FCA27EA21278127C
A27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512FE010314FF1300021F13
FE283279AD37> 50 D<EE0180EE03C01607A2EE0F80A2EE1F00A2163EA25EA25EA24B5A
A24B5AA24B5A150F5E4BC7FCA2153EA25DA25DA24A5AA24A5AA24A5AA24A5AA24AC8FCA2
143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133EA25B13FC5B485AA2485AA2
485AA2485AA248CAFCA2123EA25AA25AA25A12602A4E75BB00> 54
D<0060161800F0163C6C167CA200781678007C16F8A2003C16F0003E1501A26CED03E0A2
6C16C06D1407A2000716806D140FA26C6CEC1F00A26CB612FEA36C5D01F8C7127CA2017C
5CA2013C5C013E1301A2011E5C011F1303A26D6C485AA201075CECC00FA2010391C7FC6E
5AA2903801F03EA20100133CECF87CA2EC7878EC7CF8A2EC3FF0A26E5AA36E5AA36E5A6E
C8FC2E3C80B92F> 56 D<007FB612F0B712F8A27EC91278B3A5003FB612F85AA27EC912
78B3A5007FB612F8B7FCA26C15F0253A7CB92E> I<007FB712F8B812FCA27ECA123CB217
182E177C9D37> I<14034A7E4A7EA24A7EA34A7EA2EC7CF8A2ECF87CA2ECF03C0101133E
A249487EA249486C7EA249486C7EA2EC00034980A2013E6D7EA2496D7EA20178147801F8
147CA2484880A2484880A24848EC0F80A2491407000F16C0A248C8EA03E0A2003EED01F0
A2003C1500007C16F8A248167CA248163C006016182E347CB137> 94
D<0060161800F0163C6C167CA2007C16F8A2003C16F0003E1501A26CED03E0A26C6CEC07
C0A2000716806D140FA26C6CEC1F00A26C6C143EA26C6C5CA201781478017C14F8A26D49
5AA26D495AA26D5CEC8007A26D6C485AA26D6C48C7FCA2903801F03EA20100133CECF87C
A2EC7CF8A2EC3FF0A26E5AA36E5AA26E5A6EC8FC2E347CB137> I<EC01F8140FEC3F80EC
FC00495A495A495AA2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0
EA03F8EA00FE137F6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D
537ABD2A> 102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D
7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91
C7FC137E485AEA07F0EAFFC000FCC8FC1D537ABD2A> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi10 10 37
/Fm 37 121 df<027FB512C00103B612E0130F5B017F15C09026FF81FEC7FC3901FC007E
48487F485A497F484880485AA248C7FCA2127EA2153F00FE92C7FC5AA25D157E5A5DA24A
5AA24A5A007C495A5D003C495A003E013FC8FC6C137C380F81F83803FFE0C66CC9FC2B25
7DA32F> 27 D<121C127FEAFF80A5EA7F00121C0909798817> 58
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817> I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A2
15C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303
A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A2
5B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A
> 61 D<9339FF8001C0030F13E0037F9038F80380913A01FF807E07913A07F8000F0FDA
1FE0EB079FDA3F80903803BF0002FFC76CB4FCD901FC80495A4948157E495A495A494815
3E017F163C49C9FC5B1201484816385B1207485A1830121F4993C7FCA2485AA3127F5BA3
12FF90CCFCA41703A25F1706A26C160E170C171C5F6C7E5F001F5E6D4A5A6C6C4A5A1607
6C6C020EC8FC6C6C143C6C6C5C6CB4495A90393FE00FC0010FB5C9FC010313FC9038007F
C03A3D7CBA3B> 67 D<0103B7FC4916E018F8903B0007F80007FE4BEB00FFF03F80020F
ED1FC0180F4B15E0F007F0021F1503A24B15F81801143F19FC5DA2147FA292C8FCA25C18
035CA2130119F84A1507A2130319F04A150FA2010717E0181F4A16C0A2010FEE3F80A24A
ED7F00187E011F16FE4D5A4A5D4D5A013F4B5A4D5A4A4A5A057FC7FC017F15FEEE03FC91
C7EA0FF049EC7FC0B8C8FC16FC16C03E397DB845> I<0103B812F05BA290260007F8C712
3F4B1407F003E0020F150118005DA2141FA25D19C0143FA24B1330A2027F1470190092C7
126017E05C16014A495A160F49B6FCA25F9138FC000F01031407A24A6DC8FCA201075C18
034A130660010F160693C7FC4A150E180C011F161C18184A1538A2013F5E18F04A4A5AA2
017F15074D5A91C8123F49913803FF80B9FCA295C7FC3C397DB83D> I<0103B812E05BA2
90260007F8C7123F4B140FF003C0140F18015DA2141FA25D1980143FA25D1760027F14E0
95C7FC92C75AA24A1301A24A495A16070101141F91B6FC94C8FCA2903903FC001F824A13
0EA21307A24A130CA2010F141CA24A90C9FCA2131FA25CA2133FA25CA2137FA291CBFC49
7EB612C0A33B397DB835> I<DCFF8013E0030F13F0037F9038FC01C0913A01FF803E0391
3A07FC000F07DA0FE0EB038FDA3FC0903801DF804AC812FFEB01FED903F8157F4948ED3F
00495A495A494881017F161E49C9FC5B12014848161C5B1207485A1818121F4993C7FCA2
485AA3127F5BA312FF90CCFC93387FFFFE93B5FCA29338007FC0715A177F95C7FCA27E5F
5F7F123F16016C7E5F6C6C14036D14071207D803FCEC1EF86C6C143C26007F80EBF07890
393FF007E0010FB5EA8030010349C9FC9038003FE03B3D7DBA41> I<0107B512FCA216F8
90390007F8005DA2140FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301
A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497E
B6FCA326397DB824> 73 D<902603FFF891381FFFF8496D5CA2D90007030113006FEC00
7C02061678DA0EFF157081020C6D1460A2DA1C3F15E0705CEC181F82023815016F6C5C14
30150702706D1303030392C7FC02607FA2DAE0015C701306ECC0008201016E130EEF800C
5C163F0103EDC01C041F131891C713E0160F49EDF03818300106140717F8010E02031370
EFFC60130CEE01FE011C16E004005B011815FF177F1338600130153FA20170151F95C8FC
01F081EA07FCB512E01706A245397DB843> 78 D<0103B612F849EDFF8018E0903B0007
F8001FF84BEB03FCEF00FE020F157FA24BEC3F80A2021F16C0A25DA2143FF07F805DA202
7FEDFF006092C7485A4D5A4A4A5A4D5A4AEC1F80057FC7FC0101EC07F891B612E094C8FC
9139FC000FC00103EC03F0707E4A6D7E831307177E5C177F010F5D5F5CA2011F1401A25C
A2133F16034A4A1360A2017F17E019C091C71401496C01011480B61503933900FE0700EF
7E0ECAEA1FFCEF07F03B3B7DB83F> 82 D<0003B812FEA25A903AF8003FC00101C09138
80007E4848163C90C7007F141C121E001C92C7FCA2485CA200305C007017180060130112
E0485CA21403C716005DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA292C9
FCA25CA25CA21301A25CA21303A25CEB0FFC003FB6FC5AA237397EB831> 84
D<267FFFFC91383FFFC0B55DA2000390C83807FC006C48ED03E06060000094C7FC5F1706
5FA25F6D5DA26D5D17E05F4C5AA24CC8FC6E1306A2013F5C161C16185EA25E6E5BA2011F
495A150393C9FC1506A25D6E5AA2010F5B157015605DA2ECE18002E3CAFC14F3EB07F614
FE5C5CA25C5CA26D5AA25C91CBFC3A3B7CB830> 86 D<277FFFFC01B500F890B51280B5
FC60000390C7D807FCC7380FF80001FC4BEC03E000016204035E98C7FC621A0604075DA2
040F5DA2041B5D6216336D02735D1663000003C34A5A83DB01834AC8FC04815CDB030114
0603075D1506030C5DA203185D1970033015606115606D01E04A5A15C090267F01804AC9
FC17FEDA030014060400130E0206150C020E5D140C4A5DA24A5D18E04A5D715A5C4A92CA
FCA26DC85AA2013E157C1778133C1770133801301560513B7CB84E> I<49B500F890387F
FFF095B5FC1AE0D90003018090380FFC004BC713E00201ED07804EC7FC6E6C140E606F5C
705B606F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F03075B705A16F96FB45A94C9FC6F
5AA36F7EA34B7FED037F9238063FC0150E4B6C7E1538ED700F03E07F15C04A486C7EEC03
00020613034A805C4A6D7E14704A1300494880495A49C86C7E130E011E153F017E4B7ED8
03FF4B7E007F01E0011FEBFFC0B5FC6144397EB845> I<B500FC91383FFFE0A3000390C8
3807FC006CEE03E06C5F4D5A95C7FC6D6C140E5F5F6D6C14305F5F6D6C495A4CC8FC010F
5C6E130E160C01075C6E5B5E6D6C5B15014B5AD901FE90C9FC15065D6D6C5A5D15706E5A
5D5D6ECAFC5CA3147E14FEA35C1301A35C1303A35C1307A2130F000FB512F0A25D3B397D
B830> I<91B712FCA25B9239E00007F84AC7EA0FF0D903F8EC1FE04AEC3FC04AEC7F804A
150049485C91C7485A4C5A010E4A5A4C5A010C4A5A011C4A5A01185D167F4CC7FC90C748
5A4B5A4B5A4B5A5E151F4B5A4B5A4BC8FC4A5A4A5A4A5A5D140F4A5A4A5A4A48130C4AC7
FC495A4A141C01031518495A494814384948143049481470495A49C812F0495D00011501
4848140348484A5A4848140F4848141F4848EC7F804848EB07FF90B7FCB8FC94C7FC3639
7BB839> I<147E903803FF8090390FC1C38090391F00EFC0017E137F49133F485A4848EB
1F8012075B000F143F48481400A2485A5D007F147E90C7FCA215FE485C5AA214015D4815
0CA21403EDF01C16181407007C1538007E010F1330003E131F027B13706C01E113E03A0F
83C0F9C03A03FF007F80D800FCEB1F0026267DA42C> 97 D<133FEA1FFFA3C67E137EA3
13FE5BA312015BA312035BA31207EBE0FCEBE3FF9038E707C0390FFE03E09038F801F001
F013F8EBE000485A15FC5BA2123F90C7FCA214015A127EA2140312FE4814F8A2140715F0
5AEC0FE0A215C0EC1F80143F00781400007C137E5C383C01F86C485A380F07C06CB4C7FC
EA01FC1E3B7CB924> I<EC3FC0903801FFF0903807E03C90380F800E90383F0007017E13
1F49137F484813FF485A485A120F4913FE001F143848481300A2127F90C8FCA35A5AA45A
A315031507007E1406150E003E143C003F14706C14E0390F8007C03907C03F003801FFF8
38003FC020267DA424> I<163FED1FFFA3ED007F167EA216FEA216FCA21501A216F8A215
03A216F0A21507A2027E13E0903803FF8790380FC1CF90381F00EF017EEB7FC049133F48
5A4848131F000715805B000F143F485A1600485A5D127F90C7127EA215FE5A485CA21401
A248ECF80CA21403161CEDF0181407007C1538007E010F1330003E131F027B13706C01E1
13E03A0F83C0F9C03A03FF007F80D800FCEB1F00283B7DB92B> I<EC3FC0903801FFF090
3807E07890381F801C90387E001E49130E485A485A1207485A49131E001F141C153C4848
13F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5AA7007E140315071506003E140E15
3C6C14706C6C13E0EC07C03903E03F003801FFF838003FC020267DA427> I<16F8ED03FE
ED0F8792381F0F80ED3E3F167F157CA215FC1700161C4A48C7FCA414035DA414075DA201
07B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8FCA45C147EA514FE5CA413015CA4
495AA45C1307A25C121E123F387F8F80A200FF90C9FC131E12FEEA7C3CEA7878EA1FF0EA
07C0294C7CBA29> I<EC07E0EC1FF891387C1C38903901F80EFC903803F007903807E003
EB0FC090381F8001D93F0013F85B017E130313FE16F0485A150712034914E0A2150F1207
4914C0A2151FA2491480A2153FA2160000035C6D5B00015B4A5A3900F8077E90387C1EFE
EB1FF8903807E0FC90C7FC1401A25DA21403001E5C123F387F80075D00FF495A49485A48
49C7FC007C137E383C01F8381FFFE0000390C8FC26367FA428> I<14E0EB03F8A21307A3
14F0EB01C090C7FCAB13F8EA03FEEA070F000E1380121C121812381230EA701F1260133F
00E0130012C05BEA007EA213FE5B1201A25B12035BA20007131813E01438000F133013C0
1470EB806014E014C01381EB838038078700EA03FEEA00F815397EB71D> 105
D<EB0FC0EA03FF5AA2EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E03A2EAFE07
130612FCA2130E130C131C1318EA7C38EA3C70EA1FE0EA0780123B7DB919> 108
D<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781F00F03E03D1C3E1E00F83C01F026
383F38D9FC707F00304914E04A90387DC000007049EB7F8000604991C7FCA200E090C700
FE1301485A017E5CA200000201140301FE5F495CA203031407000160495C180F03075D12
03494A011F13601980030F023F13E00007F000C0495C1901031F023E1380000F1803494A
150061033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E043267EA449> I<D803E0
137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00705B0060
5BA200E090C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E120349010F
133016C0031F13700007ED80605B17E0EE00C0000F15014915801603EE0700001FEC0F0E
49EB07FC0007C7EA01F02C267EA432> I<EC1FC0ECFFF8903807E07E90380F801F90393F
000F80017E14C0491307484814E0485A4848EB03F0120F5B121F48481307A2127F90C7FC
A2150F5A4815E0A2151F16C0A248EC3F8016005D157E007E5C4A5A003E495A003F495A6C
495A6C6C48C7FC3807E07E3801FFF038003F8024267DA428> I<90390F8003F090391FE0
0FFC903939F03C1F903A70F8700F80903AE0FDE007C09038C0FF80030013E00001491303
018015F05CEA038113015CA2D800031407A25CA20107140FA24A14E0A2010F141F17C05C
EE3F80131FEE7F004A137E16FE013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC90
387E1FFCEC07E001FEC9FCA25BA21201A25BA21203A25B1207B512C0A32C3583A42A> I<
02FC13C0903803FF0190380F838390383F01C790397E00EF8049137F485A4848133F0007
15005B485A001F5C157E485AA2007F14FE90C75AA3481301485CA31403485CA314075D14
0F127C141F007E495A003E137F381F01EF380F839F3903FF1F80EA00FC1300143F92C7FC
A35C147EA314FE5C130190387FFFF0A322357DA425> I<3903E001F83907F807FE390E3C
1E07391C3E381F3A183F703F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8
E07F90C7FCEAC07EA2120013FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007
C9FC21267EA425> I<14FF010313C090380F80F090383E00380178131C153C4913FC0001
130113E0A33903F000F06D13007F3801FFE014FC14FF6C14806D13C0011F13E013039038
003FF014071403001E1301127FA24814E0A348EB03C012F800E0EB07800070EB0F006C13
3E001E13F83807FFE0000190C7FC1E267CA427> I<EB01C0497E1307A4130F5CA3131F5C
A3133F91C7FC007FB51280A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA3
120FEBC006A2140E001F130CEB801C141814385C146014E0380F81C038078780D803FEC7
FCEA00F819357EB31E> I<13F8D803FE1438D8070F147C000E6D13FC121C121800381401
1230D8701F5C12601503EAE03F00C001005B5BD8007E1307A201FE5C5B150F1201495CA2
151F120349EC80C0A2153F1681EE0180A2ED7F0303FF130012014A5B3A00F8079F0E9039
7C0E0F1C90393FFC07F8903907F001F02A267EA430> I<903907E001F090391FF807FC90
39783E0E0F9039E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A000E4A1300
000C157E021F133C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA24A130CA2
0101141C001E1518003F5BD87F81143801835C00FF1560010714E03AFE0E7C01C0D87C1C
495A2778383E0FC7FC391FF00FFC3907C003F029267EA42F> 120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmti10 10 6
/Fn 6 120 df<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A12
0FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15
831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901
F000F0222677A42A> 97 D<147F903803FFC090380FC1E090383F00F0017E13785B485A
485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8
FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E003807
81F83803FFE0C690C7FC1D2677A426> 101 D<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9
140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512C05B16809039003F
800092C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8
FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C82BA19> I<EB03F0
EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E90
38FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F000715005BA25D00
0F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A216704814E0007E
15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A> 104
D<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0
007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F
5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E00
1FEC3C7849EB1FE00007C7EA0780292679A42F> 110 D<01F01507D803FC903903801F80
D8071E903907C03FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133F
D8F07E168000E0ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E
00070101141C01E05B173C1738A217781770020314F05F0003010713016D486C485A0001
90391E7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437> 119
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx10 10 44
/Fo 44 124 df<913803FFC0027F13F00103B512FC010FEB00FED93FF8133FD97FE0EBFF
8049485A5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFFC0B8FCA4000390
C7FCB3ABB5D8FC3F13FFA4303A7EB935> 12 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7F
F0A2EA3FE0EA0F800D0D798C1B> 46 D<141E143E14FE1307133FB5FCA313CFEA000FB3
B3A6007FB61280A4213779B630> 49 D<EB0FFC90387FFFC048B512F0000714FC390FF0
3FFF261F800F1380263F000313C05AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A00
0FC7FCC8FCEDFFF0A216E05C16C04A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FE
EB01F849481378495A495A495A013EC712F84914F05B4848130148B6FCA25A5A5A5A4815
E0B7FCA425377BB630> I<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C
13C0496C13E0EA0FF001FC14F0121F7FA56C4814E0A23803F001C714C04A138016004A5A
4A5AEC3FF090380FFFC092C7FC15F090380007FE913801FF806E13C016E0ED7FF016F816
FC153FA216FEEA1FC0487E487E487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C
4813C0260FFC0713806CB61200000114FC6C6C13F0010790C7FC27387CB630> I<ED07C0
150FA2151F153F157F15FFA25C5C5C5CA2141E5C147C5C5C495A495A1307495A5C131E5B
137C5B5B485A485A1207485A90C7FC121E5A127C5AB81280A4C70001EBC000AA0103B612
80A429377DB630> I<001C15C0D81F80130701F8137F90B61280A216005D5D15F05D1580
4AC7FC14F090C9FCA8EB07FE90383FFFE090B512F89038FC07FC9038E003FFD980011380
90C713C0120EC813E0157F16F0A216F8A21206EA3F80EA7FE012FF7FA44914F0A26C4813
FF90C713E0007C15C06C5B6C491380D9C0071300390FF01FFE6CB512F8000114E06C6C13
80D90FF8C7FC25387BB630> I<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A
8015F302038015E1A202078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E
80027C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291
C8123F4982013E151FA2017E82017C8101FE83B500F80107B61280A4413A7DB948> 65
D<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1F
FFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F485A180F
123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F1707A26C6C1780180F
6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0FE06D01FC
EBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7BB945> 67
D<B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE717E050313807113C0A271
13E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0
FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC178040397D
B849> I<B912F0A426007FF8C7FCEF1FF8170717031701A21700A21878A3043C137C183C
A41800167CA216FC150391B5FCA4ECF8031500167CA2163C180FA3181EA293C7FCA2183E
A2183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338397DB83F> I<B912C0
A43A007FF800039338007FE0171F170F1707A21703A21701A318F0EE7800A41800A216F8
A21501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA434397DB83C> I<B600
FC0103B512C0A426007FF8C8381FE00019804EC7FC18FEEF01F84D5A4D5A4D5AEF3F8005
7EC8FC5F4C5A4C5AEE0FE0EE1F804CC9FC167E5EED03F84B7E4B7E4B7E4B7F5D02F9B57E
DAFBF77FDAFFE37F15C103807F4A487F4A6D7E4A133F707E707F8482707F707F8482717E
717E8483717F717F858385B600FC017FEBFFE0A443397DB84B> 75
D<B500FC0203B512F0A28080C66C6D90390003F0006F6E5A81017B7F13798101787F6E7E
6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F826F13806F13C06F13E06F13F06F13F881
17FCEE7FFEEE3FFF7013817013C17013E18218F17013F97013FDEF7FFF8383A283838383
83187FA2183F181F01FC160FB500FC150718031801A244397DB84B> 78
D<EDFFF8020FEBFF80027F14F0903A01FFC01FFC010790380007FFD91FFC010113C0D93F
F06D6C7E49486E7E49486E7E48496E7E48834890C86C7EA248486F1380A248486F13C0A2
003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0A26D5D001F18C0A26C
6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6DB401075B0107
D9C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC3D3B7BB948> I<B8FC17
F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1FFEA218FFA818
FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E002F8C9FCB3A4B612FC
A438397DB841> I<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390F
F0001F4848130F48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC
13FC387FFFE014FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D900
0F1480EC007F030F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01
E0495A01F813039039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B
7BB935> 83 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F
7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3F
F85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF8
0F39003FE0032A257DA42E> 97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC91
38FE03FFDAF00013804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FC
A3EE1FF8A217F06E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFF
F8D9E00F13E0D9C00390C7FC2F3A7EB935> I<903801FFC0010F13FC017F13FFD9FF8013
802603FE0013C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA912
7FA27F123FED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F
13F00101138023257DA42A> I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13
FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F
123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313
012F3A7DB935> I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F
484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127F
A36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F
13FC010113E025257DA42C> I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FF
D9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512
FEA4223A7DB91D> I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF8
01131F48486C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C
6C4890C7FC3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B5
12F8EDFF8016E06C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C15
7F6C16006D5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F0
2B377DA530> I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01
138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935> I<EA01F0EA
07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7D
BA1B> I<141FEC7FC0ECFFE0A24913F0A56D13E0A2EC7FC0EC1F0091C7FCA9EC0FF0EB0F
FFA4EB007F143FB3B0121FEA3F80EA7FC0EAFFE0EC7FE0A215C014FF6C481380903883FE
006CB45A000F13F0000113801C4B86BA1D> I<13FFB5FCA412077EAF92380FFFE0A49238
03FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07E04A5A141FEC7FE04A7E8181A2EC
CFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E82150F82B5D8F83F13F8A42D3A7EB932
> I<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B> I<01FED97FE0EB0FFC00FF9026
01FFFC90383FFF80020701FF90B512E0DA1F81903983F03FF0DA3C00903887801F000749
DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512
F0A44C257DA451> I<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C01138000
0713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435> I<9038
01FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F
81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A
6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430> I<9039FF01FF80B5
000F13F0023F13FC9138FE07FFDAF00113800007496C13C06C0180EB7FE091C713F0EE3F
F8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEBFFC0DAF0031380
9139FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F357EA435> I<49
B4EB0780010FEBE00F013FEBF81F9039FFC07C3F0003EB803E3A07FE000F7F4848EB07FF
121F497F123F497F127FA25B12FFAA6C7EA36C7E5D6C7E000F5C6C6C5B6C6C133F6CEBC0
FD39007FFFF1011F13C10101130190C7FCAC037F13FEA42F357DA432> I<9038FE03F000
FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92
C7FC91C8FCB3A2B512FEA422257EA427> I<90383FF0383903FFFEF8000F13FF381FC00F
383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C
14F06C14F81203C614FC131F9038007FFE140700F0130114007E157E7E157C6C14FC6C14
F8EB80019038F007F090B512C000F8140038E01FF81F257DA426> I<130FA55BA45BA25B
5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816CEBC3E09038
3FFFC06D1380903803FE001D357EB425> I<01FFEC3FC0B5EB3FFFA4000714016C80B3A3
5DA25DA26C5C6E4813E06CD9C03E13FF90387FFFFC011F13F00103138030257DA435> I<
B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF0
01013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15
FC6D5BA36E5AA26E5AA26E5AA26E5AA22D257EA432> I<B500F1B538803FFFA43D07FE00
0FF80003E06C6C010715C082028015076C6E6C148015076C01C0ED0F00826E485C017FED
801E5D90273FF01E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0FFC781FF0
F0A29139FEF00FF10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292
C7FC6E5CA2023E147C023C143C40257EA445> I<B539F01FFFF0A4000390398003F8006C
01C013E06C1407D97FE05B6D6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D
6D5B6D5B6E7E6E7E814A7EA24A7E903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C
7E013E80496D7E49130F00016E7EB590383FFFF8A42D257EA432> I<B539F001FFF8A400
0390C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F
495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E
5AA26E5AA26E5AA292C8FCA25C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3
E06C485A387D1F80D83FFFC9FCEA1FFCEA07F02D357EA432> I<003FB612C0A3D9F00313
80EB800749481300003E5C003C495A007C133F5D0078495A14FF5D495B5BC6485B92C7FC
495A131F5C495A017FEB03C0EBFFF014E04813C05AEC80074813005A49EB0F80485A003F
141F4848133F9038F001FFB7FCA322257DA42A> I<B812FEA32F03809730> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmbx9 9 21
/Fp 21 119 df<147014F0EB03E0EB07C0EB0F80131FEB3F00133E137E5B485AA2485AA2
12075B120FA2485AA3485AA3127FA390C7FCA35AAF7EA37FA3123FA36C7EA36C7EA21207
7F1203A26C7EA26C7E137E133E133FEB1F80130FEB07C0EB03E0EB00F01470144B78B722
> 40 D<12E07E127C7E7E7F6C7E12077F6C7E6C7EA26C7EA27F137E137FA2EB3F80A3EB
1FC0A314E0A3130FA314F0AF14E0A3131FA314C0A3EB3F80A3EB7F00A2137E13FE5BA248
5AA2485A485A5B120F485A90C7FC123E5A12F05A144B7BB722> I<120FEA3FC0EA7FE0EA
FFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19> 46 D<147814F81303131FEA03FFB5FCA3EA
FC1F1200B3B2007FB512FEA41F317AB02C> 49 D<ED1F80A24B7EA24B7EA34B7EA24A7F
A34A7FA24A7F15CFA2020F7F1587021F801503023F80EC3E01A2027E80EC7C0002FC804A
137FA20101814A133F0103814A131FA249B67EA24981A290271F8000077F91C77EA24982
013E80017E82017C80A201FC8249157FB500F0013FB512F0A43C347DB343> 65
D<912601FFE01370021F01FC13F091B61201010315C3010F9038C00FFF90393FFE0003D9
7FF81300D9FFE0147F4849143F4849141F4890C8120F485A1707485A1703485AA2007F16
01A25B94C8FC12FFA90303B612C0A2127F7F92C7387FF000A2123FA26C7EA26C7EA26C7E
6C7F6C7F6C6D14FFEB7FF8D93FFE130390390FFFE00F010390B512E301001580021F9038
FE0030020101F090C7FC3A357BB345> 71 D<003FB812F8A4D9F003EB801FD87F80ED03
FC01001501007E1600007C177CA20078173CA400F8173E48171EA4C71600B3A9011FB612
F0A437327DB13E> 84 D<EB7FFE0003B512E04814F8390FF00FFC391FF803FF806E1380
16C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F1300EA1FF848
5A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F0003EBFC0F39007F
E00728217EA02B> 97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FDB512E090
39FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217E0A917C0A216FF
1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F13809026800FF8
C7FC2B347EB331> I<903807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1F
F0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000F
EC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027> I<903803
FF80013F13F090B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE012
7F5B16F012FF150790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D8
03FEEB0FC03A01FF807F806C6CB51200011F13FC010313E024217EA029> 101
D<EC3FE0903803FFF8010F13FC90383FF1FE90387FC3FFEBFF83481303A2EA03FEEC01FE
A2EC00781500A7B512FEA4D803FEC7FCB3A7387FFFF8A420347EB31B> I<16F890390FFC
07FE90387FFF9F48B6127F3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600
A6001F5CEBF003000F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B5
12F015FE6CECFF8016E06C15F06C15F84815FC121F393F80001F48C7EA03FE4814014814
00A46C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE0001
0F13E028327EA12C> I<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8EA01FC12FFA412
0F1207B3A5B512C0A412357DB418> 105 D<EA01FC12FFA4120F1207B3B3A6B512E0A413
347DB318> 108 D<3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E007FC380F
FBC06CB4486C7E1400A25BA25BB2B539E07FFFF0A42C217DA031> 110
D<903803FF80011F13F090B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F04913
0F003F15F8491307007F15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F06D13
1F6C6CEB3FE06C6CEB7FC03A01FF01FF006CEBFFFE013F13F80103138027217EA02C> I<
3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FC
EC01F8EC0060491300B1B512F0A41F217EA024> 114 D<9038FFE1C0000713FF5A383F80
3F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14E0
C6FC010F13F0EB007F140F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090B5
120000F913FC38E03FE01C217DA023> I<133CA5137CA313FCA21201A212031207001FB5
1280B6FCA3D807FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0FF0
1A2F7EAE22> I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2EC
C007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFEF8
01035B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A217EA02F> 118
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmr9 9 80
/Fq 80 127 df<EC1FE0ECFFFC903803F01E90390FC00780EB1F8090393F000FC0017E13
1F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486CEB1FE0267FFFC1
B5FCA328357FB42B> 12 D<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0
077E003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA918
7EB912FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB4
40> 14 D<137813FCA212011203EA07F813E0EA0FC0EA1F801300123C5A5A12400E0E71
B326> 19 D<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600011306A400
03130EEB000CA248131C00061318000E1338000C1330001C13704813E0387001C0006013
8017177EB326> 34 D<123C127EB4FCA21380A2127F123D1201A412031300A25A120612
0E120C121C5A5A126009177AB315> 39 D<14C01301EB0380EB0F00130E5B133C5B5BA2
485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA312
1E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79
B71E> I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2
131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2
485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E> I<123C127EB4FCA21380A2
127F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715> 44
D<B512F0A514057F921A> I<123C127E12FFA4127E123C08087A8715> I<1530157815F8
A215F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814
F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8
A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A2
5A12601D4B7CB726> I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0
391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14
F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126> I<
13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126> I<
EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F0006013
0712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E
5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C1470
001FB512F05A5AB612E0A31D327CB126> I<EB1FE0EBFFFC4813FF3907E03F80390F001F
C0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE0
15C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC
140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE0390F
E03F800003B51200C613FCEB1FE01F347DB126> I<EC01C0A214031407A2140F141FA214
3F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA018012
0313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A321
337EB226> I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB
0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8
A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F
80FE3807FFF8000113E038003F801D347CB126> I<14FE903807FF80011F13E090383F00
F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127E
EB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015FC
1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E039
03E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126> I<1230123C003FB6FCA348
14FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA07001406140E5C14
1814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126>
I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E1300001C
14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE078039
07FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF8001E
131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C14787E
6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126> I<EB0FE0EB
7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127E
A200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C
3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715C0
140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>
I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15> I<007FB8
12C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C033147C9C3C> 61
D<EBFFC0000313F8380F00FE001C133F48EB1F804814C0140F00FC14E07EA4127CC7EA1F
C0A2EC3F80EC7F0014FE14F8495A495A5C495AA249C7FC130EA2130C131CA21318A890C8
FCA7133C137E13FFA4137E133C1B357CB424> 63 D<15E0A34A7EA24A7EA34A7EA3EC0D
FE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C
7EA301066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA200
01821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A> 65
D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617E016
1F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0F
E017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF00B7
5A16F816C02E337DB236> I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A
0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A
173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C
7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0
131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437> I<B77E16F016FE3A01
FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0F
E0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014A
B45AB748C7FC16F8168034337EB23B> I<B812C0A3D803FCC7127F0001150FEE03E01601
A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E151E150EA2
1506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812E0A32E337D
B234> I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760150CA31700
A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B337D
B232> I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0
EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F
5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F7F121FA26C
7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C01
00B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C> I<B5D8FE03B512F8A3000190C738
07FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>
I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C> I<017FB5FCA39038003F
E0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F03803FFC0
C690C7FC20357DB227> I<B500FE903807FFF8A3000190C7000113006C48EC00FC17F04C
5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A
6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83
707E707EA283486C913807FF80B500FE013F13FCA336337EB23C> I<B512FEA3D803FEC9
FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337DB230> I<
D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3D9
87E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C
5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF0
4B7EB5011C90387FFFF8A33D337CB246> I<D8FFFE91381FFFF87F80C6030013006E143C
D9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7E
A26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98
EE3FD8A2EE1FF8160F1607A216031601A2486C1400D807F81578B500C01438A217183533
7EB23A> I<EC07FC91387FFFC0903901FC07F0903907E000FCD90F80133E013FC76C7E01
7E6E7E496E7E48486E7E48486E7EA248486E7E000F8249157E001F167FA24848ED3F80A2
007F17C0A290C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F17006D5D00
0F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013
FC903901FC07F09039007FFFC0DA07FCC8FC33377CB43C> I<B612FEEDFFC016F03A03FC
0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F
0016FEED07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234> I<EC07FC91387F
FFC0903901FC07F0903907E000FC4948137E013FC7EA1F80017E6E7E496E7E48486E7E00
038249140148486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A390C9121F48
17E0AB6C17C0A26D153FA2003F1780A26D157F001F1700A2270FE001F013FE0007D907FC
5B9039F00E0E013B03F80C0703F8000190391C0383F03B00FC180187E0017EECCFC0013F
ECDF8090271F9C00FFC7FCD907EC13FC902701FE07F013609038007FFF913807FC7091C7
007813E0A2EE7C01EE7E0393387F07C0EE3FFFA21880821800705A705AEE01F033447CB4
3C> I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E707E83160F83A65FA2
4C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE001FC0ED07F06F7E6F7E1500
82167E167FA583A5180C17C0A2043F131C486C1618B500FEEB1FE0040F1338933807F070
C93801FFE09338003F8036357EB239> I<90381FE00390387FFC0748B5FC3907F01FCF39
0F8003FF48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013
FF6C13F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302001380157F153F
ED1FC0150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03
F800E0B512E0011F138026C003FEC7FC22377CB42B> I<007FB712FEA390398007F001D8
7C00EC003E0078161E0070160EA20060160600E01607A3481603A6C71500B3AB4A7E011F
B512FCA330337DB237> I<B500FE90381FFFF8A3000190C813006C48153C1718B3AF1738
017F1530A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E
6DB413FC91383FFFF0020F13C0020190C8FC35357EB23A> I<B500F0903803FFF8A3D807
FEC8EA7FC06C48ED1F000001161E6D151C00001618A26D15386D1530A26D6C5CA26E14E0
011F5DA26D6C495AA28001074AC7FCA26D6C1306A28001015CA26E131C01001418806E5B
A2ED8070023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5A
A31570A235357EB23A> I<B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC
6E48EB007C1A386D140F00001930836D020715706D1860A26E496C14E0013F60A26ED919
FC1301011F60A26ED930FE1303010F95C7FCA26ED9607F5B01071706A26E9039C03F800E
0103170CA2913BFC01801FC01C01011718A2913BFE03000FE03801001730A2DAFF06EB07
F0027F5EA2038CEB03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA2
4B800207157EA24B143E0203153CA24B141C020115184C357FB24F> I<267FFFFC90B512
C0A3000101E090381FF80026007F80EB0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B
6D6C133801035C6E13606D6C13E06D6C485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D
14076E7EA26E7E815C6F7E9138063FC0140E4A6C7E9138180FF0EC380702707F91386003
FCECC0010101804A6C7E49C77E4981010E6E7E010C6E7E131C496E7E01786E7E13FCD807
FEEC1FFEB56C90B512F8A335337EB23A> I<B500F8ECFFFEA300030180EC3FE06C90C8EA
1F806CEE0E006D6C5C6D6C141817386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7
FC5E6D6C13065E91387F801C91383FC018163891381FE0306E6C5A16E06E6C5AEDF980EC
03FF6E90C8FC5D1400B14A7E91B512FCA337337FB23A> I<EAFFF0A4EAF000B3B3B3ADEA
FFF0A40C4B79B715> 91 D<0003130C48131C000E133848137000181360003813E00030
13C0EA700100601380A2EAE00300C01300A400DE137800FF13FCEB83FEA2EA7F81A2383F
00FC001E1378171774B326> I<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715> I<EB7F80
3803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEB
FF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F80
71F180391FC1E1FF2607FFC013003900FE003C22237DA126> 97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B> I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122> I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B> I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122> I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417> I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126> I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
> I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215> I<EB03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA3
13071303B3B01238127C00FE13E0130714C0130F007C138038381F00EA1FFCEA07F01443
84B217> I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020F
C7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114
016E7E81486CEBFF80B500C313F0A324347EB329> I<EA07E012FFA3120F1207B3B3A7EA
0FF0B5FCA310347EB315> I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0
903BF3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C
487EB53BC7FFFE3FFFF0A33C217EA041> I<3903F01FC000FFEB7FF09038F1E0FC9038F3
807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B> I<EB
07F0EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E00
3E143E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C39
03F007E03900FC1F80D93FFEC7FCEB07F021237EA126> I<3903F03F8000FFEBFFE09038
F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716
F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC
91C8FCAA487EB512C0A325307EA02B> I<903807F00390383FFC07EBFC0F3901F8038F38
07E001000F14DF48486CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F
5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA32630
7DA029> I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049
C7FCA35BB2487EB512E0A31A217FA01E> I<EBFF06000713CE381F00FE003C133E48131E
140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300
EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019
237EA11E> I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403
A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E> I<D803F0133F00FFEB
0FFFA30007EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFE
D907F8130026227EA02B> I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D13
1C00011418A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2
EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29> I<B53A1FFF81FFF0A33C07F801
FC003F8001F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A2
90267E01FF5B159F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC03
90C7FCA2D907FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37> I<B5
3801FFF8A32603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F83
80D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB
0C0790381C03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29
> I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E
1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB
01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA
7838EA1FF0EA0FC025307F9F29> I<003FB512F0A2EB000F003C14E00038EB1FC00030EB
3F800070137F1500006013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A
12035B48481370485A001F14604913E0485A387F000348130F90B5FCA21C207E9F22> I<
B712F8A22502809426> I<3807C001390FF80380391FFE0F00383FFFFE38783FFC38E00F
F8384001F019077AB126> 126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmtt10 10 44
/Fr 44 122 df<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A485A
5B12075B120F5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121FA2
6C7E7F12077F12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC130113001438
164272B92C> 40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F148013
1F14C0130FEB07E0A214F01303A214F81301A314FC1300AC130114F8A3130314F0A21307
14E0A2EB0FC0131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A12
70164279B92C> I<EA0F80EA1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A212
01EA03F01207EA1FE0EA7FC0EAFF80130012FC12700E17718A2C> 44
D<007FB6FCB71280A46C150021067B9B2C> I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F
80EA1F000B0B708A2C> I<1507ED0F80151FA2153F16005D157E15FE5D14015D14035DA2
14075D140F5D141F5D143F92C7FC5C147E14FE5CA213015C13035C13075C130F5C131F5C
A2133F91C8FC5B137E13FE5B12015B12035B12075BA2120F5B121F5B123F90C9FC5A127E
12FE5AA25A127821417BB92C> I<EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF039
03F803F848486C7EEBE0004848137EA248487FA248C7EA1F80A2003E140F007E15C0A300
7C140700FC15E0AC6C140F007E15C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE0007
5CEBF0016C6C485A3901FE0FF06CB55A6D5B6D5BD90FFEC7FCEB03F823357CB32C> I<13
07497EA2131FA2133F137F13FF5A1207127FB5FC13DF139FEA7C1F1200B3AE007FB512E0
B612F0A36C14E01C3477B32C> I<EB0FF890387FFF8048B512E00007804814FC391FF80F
FE393FE001FF903880007F48C7EA3F80007E141F00FE15C0150F6C15E01507A3127E123C
C8FCA2150F16C0151F1680153F16005D15FE4A5A14034A5A4A5A4A5A4A5AECFF804948C7
FC495A495A495AEB3FE0EB7F8049C8FC485A4848EB03C04848EB07E0EA1FE0485A48B6FC
B7FCA36C15C023347CB32C> I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FC
AE121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2470A32C> 58
D<EA0F80EA1FC0EA3FE0EA7FF0A5EA3FE0EA1FC0EA0F80C7FCAEEA0F80EA1FC0EA3FE012
7F13F0A4123F121F120F1201120313E01207EA0FC0A2EA3F80EA7F005A5A12F812700C30
71A32C> I<007FB612F0B712F8A4003F15F0CAFCA8003FB612F0B712F8A46C15F025147D
A22C> 61 D<EB3FFE0003B512C0000F14F04814FC4880397FE007FF90C7FC00FEEC3F80
6C141FA3153F007EEC7F00003C5CC7EA03FEEC0FFC4A5AEC3FE04A5A4AC7FC495A495A5C
13075C130F5CA76D5A90C9FCA8EB0380EB0FE0A2497EA36D5AA2EB038021337BB22C> 63
D<EC7F80903803FFE0010F7F013F7F497F9038FFC0FE3901FE007FD803F87F4848EB1F80
9038E00FCF390FC03FFF48484813C091B5FCEA3F01393E03F87F903907F03FE0007EEBE0
1F397C0FC00FEC8007A2EAFC1F00F8EB0003A900FCEB8007D87C0F14C0A2ECC00F3A7E07
E01F80003EEBF03F903903F87F00393F01FFFED81F805B6E5A6C6C6C5A3907E00FC09039
F00007C06C6CEB0FE0D801FE131F3900FFC0FF6DB512C06D1480010FEBFE00010313F890
38007FC023337CB22C> I<14FE497EA4497FA214EFA2130781A214C7A2010F7FA314C390
381F83F0A590383F01F8A490387E00FCA549137E90B512FEA34880A29038F8003FA34848
EB1F80A4000715C049130FD87FFEEBFFFC6D5AB514FE6C15FC497E27347EB32C> I<007F
B512E015F8B612FE6C8016C03903F0003FED0FE0ED07F01503A2ED01F8A6ED03F0A21507
ED0FE0ED1FC0EDFF8090B612005D5D15FF16C09039F0001FE0ED07F0ED03F81501ED00FC
A216FE167EA616FE16FC1501ED03F8150FED3FF0007FB612E016C0B712806CECFE0015F0
27337FB22C> I<D87FF0EB07FF486C491380A36C486D1300001FC8127CA46C6C5CA76C6C
495AA4143E147FA33A03E0FF83E0A214F7A201E113C3A3000101E35BA201F113C701F313
E7A314C1A200005DA201F713F71480A301FF13FF017F91C7FC4A7EA4013E133E29347FB2
2C> 87 D<3A3FFF03FFE0484913F0148714076C6D13E03A01F800FE007F0000495A13FE
017E5BEB7F03013F5B1487011F5B14CF010F5B14FF6D5BA26D90C7FCA26D5AA26D5AA249
7EA2497EA2497F81EB0FCF81EB1FC7EC87F0EB3F83EC03F8EB7F01017E7FEBFE00497F00
01147E49137F000380491480151FD87FFEEBFFFC6D5AB514FE6C15FC497E27337EB22C>
I<D87FFCEB7FFC486CEBFFFEA36C48EB7FFCD807F0EB0FC0151F000315806D133F12016D
EB7F0012006D137E017E13FE017F5BEB3F01EC81F8131FEC83F0EB0FC314C7903807E7E0
A201035B14EF6DB45AA292C7FC7F5C147EB0903807FFE0497FA36D5B27337EB22C> I<00
3FB612C04815E0A4007EC7EA1FC0ED3F80A2ED7F00157E15FE4A5A003C5CC712034A5AA2
4A5A4A5AA24A5A4AC7FCA214FE495AA2495A495AA2495A495AA2495A49C8FCA213FE485A
A24848EB03C049EB07E01207485A5B121F485AA248C7FCB7FCA46C15C023337CB22C> I<
387FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC17416FB92C> I<387FFF
FCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17417DB92C> 93
D<007FB6FCB71280A46C150021067B7D2C> 95 D<3801FFF0000713FE001F6D7E15E048
809038C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F48
EB807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE
6C14BF0001EBFE1F3A003FF007FC27247CA32C> 97 D<EA7FF0487EA3127F1201AAEC1F
E0ECFFF801FB13FE90B6FC16809138F07FC09138801FE091380007F049EB03F85BED01FC
491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07F
C091B51280160001FB5B01F813F83900F03FC027337FB22C> I<903803FFE0011F13F801
7F13FE48B5FC48804848C6FCEA0FF0485A49137E4848131890C9FC5A127EA25AA8127EA2
127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE03FF6CB55A6C5C6C6C5B011F13E0
010390C7FC21247AA32C> I<EC0FFE4A7EA380EC003FAAEB07F8EB3FFE90B512BF4814FF
5A3807FC0F380FF00348487E497E48487F90C7FC007E80A212FE5AA87E007E5CA2007F5C
6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE6C143FEB3FFC90390FF01FFC2733
7DB22C> I<EB03FE90381FFFC0017F13F048B57E48803907FE03FE390FF800FFD81FE0EB
3F805B4848EB1FC090C7120F5A007E15E015075AB7FCA416C000FCC9FC7E127EA2127F6C
EC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13FF000190B512806C1500013F13FC
010F13F00101138023247CA32C> I<EC0FF8EC3FFE91B5FC4914805B903807FC7F14F090
390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26000FC0C7FCB3A8003FB512F04880
A36C5C21337DB22C> I<ED03F8903907F80FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F
9038FC0FF82607F003133E3A0FE001FC1CD9C0001300001F8049137EA66D13FE000F5CEB
E0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7FCEB87F80180C8FCA37F6C7E90B5
12F06C14FE48ECFF804815E04815F03A3FC0001FF848C7EA03FC007E1400007C157C00FC
157E48153EA46C157E007E15FCD87F801303D83FE0EB0FF8D81FFCEB7FF06CB612E00003
15806C1500D8003F13F8010713C028387EA42C> I<1307EB1FC0A2497EA36D5AA20107C7
FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512FCB612FEA36C14FC1F3479B32C
> 105 D<140EEC3F80A2EC7FC0A3EC3F80A2EC0E0091C7FCA748B512804814C0A37EC712
0FB3B3A2141F003C1480007E133FB414005CEB01FEEBFFFC6C5B5C001F5B000790C7FC1A
467CB32C> I<387FFFE0B57EA37EEA0003B3B3A5007FB61280B712C0A36C158022337BB2
2C> 108 D<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD87FFF13FF91B57E3A07FE1FFC
3E01FCEBF83F496C487E01F013E001E013C0A301C01380B33B7FFC3FF87FF0027F13FFD8
FFFE6D13F8D87FFC4913F0023F137F2D2481A32C> I<397FF01FE039FFF87FFC9038F9FF
FE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500
F11480A36C01E0140029247FA32C> I<EB07FCEB1FFF017F13C048B512F048803907FC07
FC390FF001FE48486C7E0180133F003F158090C7121F007EEC0FC0A348EC07E0A76C140F
007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C
6C6C13C0011F90C7FCEB07FC23247CA32C> I<397FF01FE039FFF8FFF801FB13FE90B6FC
6C158000019038F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167E
A816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001
FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA32C> I<903903FC078090
391FFF0FC0017F13CF48B512EF4814FF3807FE07380FF00148487E49137F4848133F90C7
FC48141F127E150F5AA87E007E141FA26C143F7F6C6C137F6D13FF380FF0033807FC0F6C
B6FC6C14EF6C6C138F6D130FEB07F890C7FCAD0203B5FC4A1480A36E140029367DA32C>
I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF019138FC00F84A
13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C> I<90387FF870
0003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F140013F0383FFFC0
6C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE0078147F00FC143F151F7E
A26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F8148039701FFC0020247AA32C
> I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0A5EC800F011F
EB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C> I<3A7FF003FF80
486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03FF90B7FC6D15807F6D
13CF902603FE07130029247FA32C> I<3A7FFF01FFFCB514FE148314016C15FC3A03E000
0F80A26D131F00011500A26D5B0000143EA26D137E017C137CA2017E13FC013E5BA2EB3F
01011F5BA21483010F5BA214C701075BA214EF01035BA214FF6D90C7FCA26D5A147C2724
7EA32C> I<3A7FFF01FFFCB5008113FE148314816C010113FC3A03E0000F806C7E151F6D
140012005D6D133E137C017E137E013E137CA2013F13FC6D5BA2EB0F815DA2EB07C1ECC3
E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2143EA2147E147CA214FC5CA2EA0C
01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C5AEA07E027367EA32C>
121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr10 10 80
/Fs 80 128 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30> 11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E> I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E> I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45> I<133C137EA213FE1201EA03FC13F0EA07E0EA0FC0EA1F80EA
1E005A5A5A12C00F0F6FB92A> 19 D<001C131C007F137F39FF80FF80A26D13C0A3007F
137F001C131C00001300A40001130101801380A20003130301001300485B00061306000E
130E485B485B485B006013601A197DB92A> 34 D<121C127FEAFF80A213C0A3127F121C
1200A412011380A2120313005A1206120E5A5A5A12600A1979B917> 39
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20> I<12C07E12707E7E7E120F
6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0
B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7
FC120E5A5A5A5A5A13527CBD20> I<121C127FEAFF80A213C0A3127F121C1200A4120113
80A2120313005A1206120E5A5A5A12600A19798817> 44 D<B512FCA516057F941C> I<
121C127FEAFF80A5EA7F00121C0909798817> I<EB03F8EB1FFF90387E0FC09038F803E0
3901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3
007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C48
5A90387E0FC0D91FFFC7FCEB03F8233A7DB72A> 48 D<EB01C013031307131F13FFB5FC
A2131F1200B3B3A8497E007FB512F0A31C3879B72A> I<EB0FF0EB7FFE48B57E3903E03F
E0390F000FF0000E6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA56CC7FC12
1CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A
91C8FC011EEB01805B5B49130348481400485A485A000EC75A000FB6FC5A5A485CB6FCA3
21387CB72A> I<EB07F8EB3FFF4913C03901F80FF03903C007F848486C7E380E0001000F
80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF
809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C0
49137F007F1580007EC7FC0070ECFF006C495A121E390F8003F83907F00FF00001B512C0
6C6C90C7FCEB0FF8233A7DB72A> I<1538A2157815F8A2140114031407A2140F141F141B
14331473146314C313011483EB030313071306130C131C131813301370136013C01201EA
038013005A120E120C5A123812305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325
397EB82A> I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC38067FE0
90C9FCABEB07F8EB3FFE9038780F803907E007E090388003F0496C7E12066E7EC87EA281
81A21680A4123E127F487EA490C71300485C12E000605C12700030495A00385C6C130300
1E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A7CB72A> I<EC3FC09038
01FFF0010713FC90380FE03E90383F800790387E001F49EB3F804848137F485AA2485A00
0FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07E09038
3801F0496C7E01607F01E0137E497FA249148016C0151FA290C713E0A57EA56C7E16C0A2
121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FC
EB03FC233A7DB72A> I<12301238123E003FB612E0A316C05A168016000070C712060060
140E5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C141C5CA25CA214F0495A
A21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E233B7BB82A> I<EB03F8EB
1FFF017F13C09038FC07F03901E001F848486C7E4848137C90C77E48141E000E141F001E
80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7
FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801FFF48486C138048130300
3E6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A21501A36C15C012781503
007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC
233A7DB72A> I<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48486C7E49
137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA2
6C6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13C0EB07F090C7FC153F16
80A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC
3807FFFC000113F038003FC0233A7DB72A> I<121C127FEAFF80A5EA7F00121CC7FCB212
1C127FEAFF80A5EA7F00121C092479A317> I<121C127FEAFF80A5EA7F00121CC7FCB212
1C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A121812385A1260093479
A317> I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41
> 61 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C
7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167F
A20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E120148
6C81D80FFC02071380B56C90B512FEA3373C7DBB3E> 65 D<B712E016FC16FF00019039
80007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF
8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA21880177F18C0A71880
17FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B> I<913A
01FF800180020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB039F4948
EB01DFD93F80EB00FF49C8127F01FE153F12014848151F4848150FA248481507A2485A17
03123F5B007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C7E5F6C
7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80
902701FF803FC7FC9039007FFFFC020F13F002011380313D7BBA3C> I<B712C016F816FE
000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0
170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C
5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F> I<B812FCA300019038
80000F6C90C71201EE007E173E171E170EA31706A317078316C0A394C7FCA31501A21503
150F91B5FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380A21707
A2170F173F177F486D903807FF00B9FCA333397DB839> I<B812F8A30001903880001F6C
90C71201EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F
91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836> I<DBFF80
13C0020FEBF001023F13FC9139FF803F03903A03FC000787D90FF0EB03CF4948EB00EF49
48147F4948143F49C8121F485A4848150F48481507A248481503A2485A1701123F5B007F
1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C
7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FFC03F01
91393FFFFC00020F01F0130002001380383D7CBA41> I<B648B512FEA300019026800003
13006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA337397DB83E> I<
B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E> I<013FB512E0A39039001F
FC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B0070131F6C5C6C495A6C49
C7FC380781FC3801FFF038007F80233B7DB82B> I<B612E0A3000101C0C8FC6C90C9FCB3
AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834
> 76 D<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F015
63A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318
A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F
8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045
397DB84C> I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EB
C7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC0
16E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE
0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA217063739
7DB83E> I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80
EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F
17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A2
6C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D
6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC
363D7BBA41> I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03
F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B5
12FC16F091C9FCB3A5487FB6FCA330397DB839> I<EC03FF021F13E09138FE01FC903901
F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7EA24848157F
0007178049153F000F17C049151F001F17E0A24848ED0FF0A3007F17F8A2491507A200FF
17FCAC007F17F8A26D150FA2003F17F0A26C6CED1FE0A36C6CED3FC00007027C14804AB4
FC3C03F80383807F003B01FC0701C0FEEC0E002600FE0CEBE1FC017FEC63F8D93F8CEB77
F0D91FCCEB3FE0D907EE14806DB449C7FC0100D981FC130CEC1FFF0203131C91C7001E13
1C161F183CEF807CEFC0F8EE0FFFA318F08218E07013C07013809338007E00364B7BBA41
> I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283
A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE
82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306
933800FE0ECAEA3FFCEF07F0393B7DB83D> I<D90FF813C090383FFE0190B512813903F8
07E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501
A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F
1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37E
A216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03F
FFF8010F13E0D8C00190C7FC253D7CBA2E> I<003FB812E0A3D9C003EB001F273E0001FE
130348EE01F00078160000701770A300601730A400E01738481718A4C71600B3B0913807
FF80011FB612E0A335397DB83C> I<B6903807FFFEA3000101809038007FE06C90C8EA1F
80EF0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A
6D6CEB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E> I<
B500FC91387FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7
FCA280013F1506A26E140E011F150C80010F5DA28001075DA26E147001031560A26D6C5C
A2806D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E
6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>
I<B5D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E0000103
07ED03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE
067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485A
EE6007A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EA
FF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140F
A202015E4B1407A2020093C8FC4B80503B7EB855> I<B500FE91383FFFE0A3000301E091
3807FE00C649EC03F0017F6F5A606D6C5D6D6C140395C7FC6D6C1406A26D6C5C6D6C141C
17186D6C143817306D6D5B6E6C13E05F91383FE0015F91381FF003DA0FF890C8FC160691
3807FC0E160C913803FE1C913801FF185E6E13B016E0157F6F5AB3A24B7E023FB512C0A3
3B397FB83E> 89 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17> 91
D<3901800180000313033907000700000E130E485B001813180038133800301330007013
7000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80
390E000E001A1974B92A> I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17> I<EA
01801203EA0700120E5A12181238123012701260A212E05AA412CEEAFF8013C0A3127FA2
EA3F80EA0E000A197AB917> 96 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E048
6C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1F
C0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0
781FF03A03FFF00FE03A007F8007C026277DA52A> I<EA03F012FFA3120F1203B0EC1FE0
EC7FF89038F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00
FCA216FEA2167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC0
9039C7801F00903881E07E903800FFF8C7EA1FC0283B7EB92E> I<EB03FC90381FFF8090
387E03E03901F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00
F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13
706C6C13E039007C07C090381FFF00EB07F81F277DA525> I<ED0FC0EC03FFA3EC003F15
0FB0EB03F8EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F
123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEF
F03A01F801CFFF39007C078F90381FFE0FD907F813C0283B7DB92E> I<EB07F8EB1FFF90
387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A15
3F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D
131CD801F013386C6C137090387E03E090381FFF80903803FC0020277EA525> I<147E90
3803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3
D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19> I<ED03F090390FF00FF890393FFC3C3C
9039F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C48
5AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB5
12C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F84814
00A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC3900
7FFFF0010790C7FC26387EA52A> I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F90
39F1C01F809039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3
293A7EB92E> I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA
487EB512C0A312387EB717> I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F8
13FFA313071301B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFE
EA03F8154984B719> I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C
15705D4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E81
14076E7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>
I<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917> I<2703F00FF0EB1FE000
FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013
CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA3
40257EA445> I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F700
13FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E> I<EB03FE90380FFF
8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815
E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D
131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>
I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB
03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB
0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328
357EA42E> I<D903F813C090381FFE0190387E07819038FC01C33903F000E30007147748
48133749133F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C
6C137F6C6C13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FC
A328357DA42C> I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE
9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421> I<EBFF03000313
E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C
13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C1307
7EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521> I<1318A51338A31378A313
F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E1300
6D5AEB0FFEEB01F81A347FB220> I<D803F0EB07E000FFEB01FFA3000FEB001F00031407
B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03
FC07E00029267EA42E> I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D1480
00011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001
075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C> I<B53A1F
FFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB
0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F83
1430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133F
A2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C> I<B538807FFFA33A03FE
003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB
03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB060149
6C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C
> I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E
5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214
FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0E
EA701C6C5AEA1FF0EA0FC027357EA32C> I<003FB512FCA2EB8003D83E0013F8003CEB07
F00038EB0FE012300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A49
5A495AA290387F000613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7
127C48EB03FC90B5FCA21F247EA325> I<D801E01340D807F813E0390FFE01C0391FFF87
80393C3FFF0038700FFE38E003FC384000F01B0879B62A> 126 D<001C131C007F137F39
FF80FF80A5397F007F00001C131C190978B72A> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmbx12 12 29
/Ft 29 119 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5
264177C038> 49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0F
E0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C
5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7
FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8
FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038> I<ECFFF00107
13FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F
16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7
FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0F
C0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D8
0FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038> I<163FA25E
5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14
F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E
5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038> I<EE1F80A24C7EA24C7E
A34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203
FC804B7E02018115F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A82
023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F0107834A153FA249
488284011F8491C97E4984133E017E82B6020FB612F0A54C457CC455> 65
D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949
C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F484916
1F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2
123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C
167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7
FC020715FC020115F0DA001F1480030001F8C8FC44467AC451> 67
D<BA1280A419C026003FFEC7121F1701EF007F183F181F180F180719E01803A31801A3EE
01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F160F16071603A31601A6
93C9FCAFB712F0A53C447CC346> 70 D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523
447DC32A> 73 D<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E
7F6E7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F70
7F707F8482707F707F717E7113807113C019E0837113F07113F87113FC7113FE19FF8472
13F884848484A28484197F193F191FA2190F1907B61603190119001A78A24F447CC358>
78 D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727E
A28684A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F8
18E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72
141EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>
82 D<B600FE017FB691B512FEA526007FFCC8D83FFEC9EA7C006E82013F701778807415
F86D705F6F7014016D705FA26F7014036D64814E6D14076D646F70140F6D041E94C7FCA2
6F023E6D5C6DDC3C7F151E81027F037C6D5CF0783F6F70147C023F4B6C1578A26F01016F
13F86E4B6C5D16806E02036F485A4E7E04C0EEE0036E4A486C5DA2DCE00FEDF0076E4B6C
5D16F06E4A6F48C8FC051E7F04F8705A6E4A027F131EA2DCFC7CEDFE3E037F0178023F13
3C04FE16FF033F01F85E4D8004FF17F86F496E5BA36F496E5BA26F604D80A26F90C86C5B
A36F486F90C9FCA26F48167EA30478163C6F457EC374> 87 D<903801FFE0011F13FE01
7F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA
00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC01000313E0000F1380381FFE00
485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007
EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36> 97 D<EC3FFC49B512C0010F14
F0013F14FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F13
00007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D14
0F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003F
F82A2F7CAD32> 99 D<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F
013F14CF9039FFF807FF48EBC00148903880007F4890C7123F4848141F49140F121F485A
A3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C0
0314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>
I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48
486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FC
A5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB
3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33> I<EDFF
80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2
ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC5
22> I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001F
F84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FC
A26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0
000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0
C77ED83FC014074848020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A
5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32
427DAC38> I<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90
C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520> 105 D<EB7FC0B5FCA512037E
B293387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FE
ECC1FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F
836F7F816F7F83707E163FB60003B512F8A535457DC43B> 107 D<EB7FC0B5FCA512037E
B3B3B3A3B61280A519457CC420> I<90277F8007FEEC0FFCB590263FFFC090387FFF8092
B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F
009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B600
81B60003B512FEA5572D7CAC5E> I<90397F8007FEB590383FFF8092B512E0028114F891
3987F03FFC91388F801F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B600
83B512FEA5372D7CAC3E> I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FF
C0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82
A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE0
6C6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>
I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB
07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA2
4C13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C0
91C7FCED1FF092C9FCADB67EA536407DAC3E> I<90387F807FB53881FFE0028313F0028F
13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FC
A35CB3A5B612E0A5272D7DAC2E> 114 D<90391FFC038090B51287000314FF120F381FF0
03383FC00049133F48C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014
FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F020313E0140000F0143F
A26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5C
D8F03F13E026E007FEC7FC232F7CAD2C> I<EB01E0A51303A41307A2130FA2131FA2133F
137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F1507
90393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE2C> I<D97FC0
49B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE91
38F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E> I<B6903803FF
FCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D
6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F
5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmbx12 14.4 18
/Fu 18 119 df<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5AC8FCB3
EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A113576B425> 58
D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203
DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901
F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B481A3FA248
49181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D19
80A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A
6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE0
01FFF0020091B612C0033F93C8FC030715FCDB007F14E0040101FCC9FC525479D261> 67
D<B600FC93B7FC8181A282D800076E9239003FFC0070EE07E08282A28202EF7F02E77F02
E380A202E18002E0806F7F6F7F6F7FA26F7F6F7F6F806F80A26F80707F707F707F707FA2
707F7080708070808583717F717F717F717FA27114807114C07114E07213F07213F8A272
13FC7213FE7213FF721487A27214C77214E77313F77313FF85A285858585A28586868686
A286868686A2D93FFC187FB7173F1B1F1B0F1B07755A60527CD169> 78
D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F13E01B
F0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C04F13
004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C> 80
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641> 97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C> 99 D<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF8
49486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B
18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07
E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF80103
90B55A010015C0021F49C7FC020113F034387CB63D> 101 D<ED3FFC0203B5FC020F14C0
023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A495AA2495AA2EE7F
F8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA52E547CD3
29> I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90267FFC0F9038FF
9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813E0489338FC0FC0
F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C6D48
5BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFCA2120FA37FA213
F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848C700031480D81F
F8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18006C6C4B5AD80F
FEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F03FCC7FC010115
E0D9000F01FCC8FC3C4F7CB543> I<137F497E000313E0487FA2487FA76C5BA26C5BC613
806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325> 105
D<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225> 108 D<D93FF0EB1FFCB591B5
12C0030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3
C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B> 110
D<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D
6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F18
80A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D49
5B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8
FC020113E03A387CB643> I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF8
9139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE
0FF04A90C7FCA55CB3AAB612FCA52F367CB537> 114 D<903903FFF00F013FEBFE1F90B7
FC120348EB003FD80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F0
91C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15
C01300020714E0EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D
141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807
148048C601F8C7FC2C387CB635> I<143EA6147EA414FEA21301A313031307A2130F131F
133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F00
15806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34> I<D93FF89138
01FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01
E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091
C7FC42377BB54B> I<B600F00107B5FCA5000101F8C8EA7FE06C6DED3F00A2017F163E6E
157E013F167C6E15FC6D5E6F13016D5E8117036D5E6F13076D5E6F130F6D5E6F131F6D93
C7FC815F6E6C133E177E023F147C6F13FC6E5C16816E5C16C3A26EEBE3E016E76E5C16FF
6E5CA26E91C8FCA26F5AA36F5AA26F5AA26F5AA26F5A6F5A40367DB447> I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Fu 962 448 a(Constructiv) l(e) 46 b(Negation) h(for) e(Prolog:)
p Ft 1387 604 a(A) 37 b(Real) g(Implemen) m(tation) p
Fs 1234 896 a(Susana) 26 b(Mu) r(~) -44 b(noz) 83 b(and) 111
b(Juan) 27 b(Jos) n(\023) -39 b(e) 25 b(Moreno) p Fr
1071 996 a(susana@fi.upm.es) 298 b(jjmoreno@fi.upm) o(.es) p
Fq 1016 1170 a(Departamen) n(to) 25 b(de) g(Lengua) t(jes,) i(Sistemas)
f(de) f(la) i(Informaci\023) -38 b(on) 1550 1261 y(e) 26
b(Ingenier) 1872 1243 y(\023) 1881 1261 y(ia) g(del) g(Soft) n(w) n
(are) 1560 1352 y(F) -6 b(acultad) 26 b(de) f(Inform\023) -38
b(atica) 1382 1444 y(Univ) n(ersidad) 25 b(P) n(olit) n(\023) -36
b(ecnica) 27 b(de) f(Madrid) 1522 1535 y(Campus) f(de) h(Mon) n
(tegancedo) 1615 1626 y(28660) i(Madrid,) e(Spain) p
Fp 759 1996 a(Abstract.) p Fq 43 w(While) 34 b(negation) g(has) g(b) r
(een) g(a) g(v) n(ery) f(activ) n(e) h(area) h(of) f(researc) n(h) h
(in) 759 2088 y(logic) 28 b(programming,) e(comparativ) n(ely) f(few) i
(pap) r(ers) g(ha) n(v) n(e) e(b) r(een) h(dev) n(oted) f(to) i(im-) 759
2179 y(plemen) n(tation) 39 b(issues.) h(F) -6 b(urthermore,) 38
b(the) h(negation-related) h(capabilities) h(of) 759
2270 y(curren) n(t) 28 b(Prolog) i(systems) e(are) h(limited.) f(In) g
(this) h(pap) r(er,) f(w) n(e) h(prop) r(ose) g(some) f(ex-) 759
2361 y(tensions) 20 b(to) g(the) f(metho) r(d) g(of) h(constructiv) n
(e) g(negation,) h(w) n(e) f(pro) n(vide) f(the) g(complete) 759
2453 y(theoretical) 28 b(algorithm,) f(w) n(e) g(talk) g(ab) r(out) f
(implemen) n(tation) f(issues) j(and) e(w) n(e) h(pro-) 759
2544 y(vide) f(an) f(implemen) n(tation.) p Fo 523 2824
a(Keyw) m(ords) p Fs 36 w(Constructiv) n(e) c(Negation,) f(Negation) h
(in) h(Logic) e(Programming,) f(Constrain) n(t) 523 2924
y(Logic) 27 b(Programming,) d(Implemen) n(tations) k(of) f(Logic) g
(Programming.) p Ft 523 3208 a(1) 112 b(In) m(tro) s(duction) p
Fs 523 3426 a(The) 24 b(fundamen) n(tal) h(idea) f(b) r(ehind) h(Logic)
f(Programming) d(is) j(to) h(use) f(a) g(computable) g(subset) 523
3526 y(of) 31 b(logic) e(as) h(a) g(programming) f(language.) g
(Probably) -7 b(,) 28 b(negation) i(is) h(the) f(most) h(signi\014can) n
(t) 523 3625 y(asp) r(ect) j(of) g(logic) f(that) h(w) n(as) f(not) h
(included) h(from) e(the) i(outset.) f(This) g(is) f(due) i(to) e(the) i
(fact) 523 3725 y(that) c(dealing) f(with) h(negation) e(in) n(v) n
(olv) n(es) g(signi\014can) n(t) h(additional) g(complexit) n(y) -7
b(.) 30 b(Ho) n(w) n(ev) n(er,) 523 3825 y(negation) 24
b(has) h(an) g(imp) r(ortan) n(t) g(role,) f(for) h(example) g(in) g
(kno) n(wledge) f(represen) n(tation,) g(where) 523 3924
y(man) n(y) k(of) h(its) g(uses) f(cannot) h(b) r(e) g(sim) n(ulated) f
(b) n(y) h(p) r(ositiv) n(e) f(programs.) f(Declarativ) n(e) g(mo) r
(del-) 523 4024 y(ing) 32 b(of) g(problem) f(sp) r(eci\014cations) h(t)
n(ypically) f(also) g(include) i(negativ) n(e) e(as) g(w) n(ell) h(as) f
(p) r(ositiv) n(e) 523 4124 y(c) n(haracteristics) 22
b(of) i(the) h(domain) f(of) g(the) h(problem.) f(Negation) f(is) h
(also) g(useful) g(in) h(the) f(man-) 523 4223 y(agemen) n(t) k(of) g
(databases,) f(program) f(comp) r(osition,) i(manipulation) g(and) h
(transformation,) 523 4323 y(and) e(default) i(reasoning,) c(etc.) 648
4426 y(The) d(p) r(erceiv) n(ed) f(imp) r(ortance) g(of) h(negation) f
(has) g(resulted) h(in) g(signi\014can) n(t) f(researc) n(h) f(and) 523
4526 y(the) 30 b(prop) r(osal) e(of) i(man) n(y) f(alternativ) n(e) f
(w) n(a) n(ys) g(to) h(understand) h(and) f(incorp) r(orate) f
(negation) 523 4625 y(in) n(to) 38 b(Logic) g(Programing.) e(The) i
(problems) g(in) n(v) n(olv) n(ed) f(start) h(already) f(at) i(the) g
(seman) n(tic) 523 4725 y(lev) n(el) 32 b(and) g(the) h(di\013eren) n
(t) f(prop) r(osals) f(\(negation) h(as) f(failure) h(\() p
Fn(naf) p Fs(\),) i(stable) e(mo) r(dels,) g(w) n(ell) 523
4825 y(founded) e(seman) n(tics,) f(explicit) g(negation,) g(etc.\)) h
(di\013er) g(not) f(only) g(in) h(expressiv) n(eness) d(but) 523
4924 y(also) j(in) h(seman) n(tics.) f(Presumably) f(as) h(a) h(result)
f(of) h(this,) g(implemen) n(tation) g(asp) r(ects) f(ha) n(v) n(e) p
90 rotate dyy eop
%%Page: 2 2
2 1 bop Fs 523 448 a(receiv) n(ed) 26 b(comparativ) n(ely) e(little) k
(atten) n(tion.) f(A) g(searc) n(h) e(on) i(the) g(The) g(Collection) f
(of) h(Com-) 523 548 y(puter) j(Science) g(Bibliographies) d([10]) i
(with) i(the) f(k) n(eyw) n(ord) e(\\negation") g(yields) h(nearly) g
(60) 523 648 y(pap) r(ers,) h(but) h(only) e(2) h(include) h(implemen) n
(tation) f(in) h(the) g(k) n(eyw) n(ords,) d(and) i(few) n(er) g(than) g
(10) 523 747 y(treat) d(implemen) n(tation) h(issues) f(at) g(all.) 648
847 y(P) n(erhaps) 19 b(b) r(ecause) i(of) g(this,) g(the) h(negation) e
(tec) n(hniques) h(supp) r(orted) g(b) n(y) g(curren) n(t) f(Prolog) 523
946 y(compilers) 27 b(are) f(rather) h(limited:) p Fo
575 1118 a({) p Fs 41 w(Negation) k(as) g(failure) h(\(sound) f(only) h
(under) f(some) h(circumstances\)) f(is) g(a) h(built-in) g(or) 664
1217 y(library) 26 b(in) i(most) g(Prolog) d(compilers) i(\(Quin) n
(tus,) g(SICStus,) i(Ciao,) d(BinProlog,) g(etc.\).) p
Fo 575 1315 a({) p Fs 41 w(The) f(\\dela) n(y) f(tec) n(hnique") g
(\(applying) g(negation) g(as) h(failure) f(only) p Fn
24 w(when) p Fs 32 w(the) h(v) -5 b(ariables) 664 1415
y(of) 32 b(the) h(negated) e(goal) g(b) r(ecome) h(ground,) f(whic) n
(h) h(is) f(sound) h(but) h(incomplete) f(due) g(to) 664
1514 y(the) 37 b(p) r(ossibilit) n(y) f(of) g(\015oundering\)) g(is) g
(presen) n(t) g(in) h(Nu-Prolog,) d(G\177) -42 b(odel,) 36
b(and) g(Prolog) 664 1614 y(systems) 27 b(whic) n(h) h(implemen) n(t) g
(dela) n(ys) f(\(most) g(of) h(those) f(ab) r(o) n(v) n(e\).) p
Fo 575 1711 a({) p Fs 41 w(Constructiv) n(e) 32 b(negation) g(w) n(as) g
(announced) h(in) g(early) f(v) n(ersions) f(of) i(Eclipse,) g(but) h
(ap-) 664 1811 y(p) r(ears) 27 b(to) g(ha) n(v) n(e) g(b) r(een) h
(remo) n(v) n(ed) e(from) h(more) g(recen) n(t) g(releases.) 648
1984 y(Constructiv) n(e) k(negation) g(is) i(considered) e(sound) h
(and) g(complete) g(but) h(its) g(implemen-) 523 2084
y(tation) e(is) h(extremly) f(complicated.) g(In) h(this) f(pap) r(er) g
(w) n(e) g(are) g(going) f(to) i(pro) n(vide) e(the) i(con-) 523
2183 y(structiv) n(e) 26 b(negation) f(algorithm) h(from) g(the) g(op) r
(erational) f(p) r(oin) n(t) i(of) f(view.) h(W) -7 b(e) 26
b(o\013er) g(also) f(a) 523 2283 y(real) i(implemen) n(tation) g(that) h
(will) g(b) r(e) g(included) g(in) g(a) f(Prolog) f(compiler.) 648
2383 y(One) i(problem) f(that) i(w) n(e) f(face) g(up) g(is) g(the) h
(lac) n(k) e(of) i(a) f(go) r(o) r(d) f(collection) h(of) g(b) r(enc) n
(hmarks) 523 2482 y(using) 33 b(negation) g(to) h(b) r(e) g(used) f(in)
h(the) g(tests.) g(One) f(of) h(the) g(reasons) d(has) i(b) r(een) h
(discussed) 523 2582 y(b) r(efore:) 23 b(there) g(are) g(few) g(pap) r
(ers) g(ab) r(out) h(the) f(implemen) n(tation) h(of) f(negation.) g
(Another) g(fact) 523 2682 y(is) 32 b(that) h(negation) e(is) i(t) n
(ypically) e(used) i(in) f(small) g(parts) g(of) g(programs) e(and) i
(is) h(not) f(one) g(of) 523 2781 y(their) c(main) f(comp) r(onen) n
(ts.) 648 2881 y(The) e(rest) h(of) g(the) g(pap) r(er) f(is) h
(organized) e(as) h(follo) n(ws.) g(Section) h(2) f(describ) r(e) h(in)
g(detail) g(the) 523 2980 y(constructiv) n(e) 33 b(negation) h
(algorithm.) f(It) i(tells) f(ho) n(w) g(to) g(obtain) g(the) p
Fm 34 w(f) 9 b(r) r(ontier) p Fs 37 w(of) 34 b(a) g(goal) 523
3080 y(\(Section) d(2.1\),) f(ho) n(w) g(to) g(prepare) f(it) i(to) f
(b) r(e) h(negated) f(\(Section) h(2.2\)) f(and) g(\014nally) g(ho) n
(w) g(to) 523 3180 y(negate) 22 b(it) g(\(Section) h(2.3\).) e(Section)
h(3) g(talks) g(ab) r(out) g(implemen) n(tation) g(issues:) g(the) h
(co) r(de) f(ex-) 523 3279 y(pansion) 27 b(\(Section) h(3.1\),) f(the) h
(disequalit) n(y) f(constrain) n(ts) g(\(Section) h(3.2\)) f(that) h
(are) f(needed,) 523 3379 y(optimizations) 32 b(\(Section) h(3.3\),) f
(examples) f(\(Section) i(3.4\)) f(and) g(some) g(exp) r(erimen) n(tal)
g(re-) 523 3479 y(sults) d(\(Section) h(3.5\).) e(Finally) i(w) n(e) e
(conclude) h(and) g(talk) g(ab) r(out) g(future) h(w) n(orks) e(in) h
(Section) 523 3578 y(4.) p Ft 523 3836 a(2) 112 b(Constructiv) m(e) 36
b(Negation) p Fs 523 4028 a(While) 26 b(there) g(are) f(sev) n(eral) f
(pap) r(ers) h(treating) g(theoretical) f(asp) r(ects) i(of) g
(constructiv) n(e) e(nega-) 523 4127 y(tion,) k(w) n(e) g(ha) n(v) n(e)
f(not) h(found) h(pap) r(ers) e(dealing) h(with) g(a) g(sound) g
(implemen) n(tation) g(of) g(it.) h(The) 523 4227 y(original) 23
b(pap) r(ers) g(b) n(y) h(Chan) g(ga) n(v) n(e) f(some) h(hin) n(ts) g
(ab) r(out) g(a) g(p) r(ossible) g(implemen) n(tation) h(based) 523
4327 y(on) 38 b(coroutining,) f(but) i(the) f(tec) n(hnique) g(w) n(as)
f(just) i(sk) n(etc) n(hed.) f(When) g(w) n(e) g(ha) n(v) n(e) f(tried)
h(to) 523 4426 y(reconstruct) 31 b(it) h(w) n(e) g(ha) n(v) n(e) e
(found) j(sev) n(eral) d(problems) h(including) h(\015oundering) f
(\(in) i(fact) f(it) 523 4526 y(seems) 24 b(to) g(b) r(e) h(the) g
(reason) d(wh) n(y) i(constructiv) n(e) g(negation) f(has) h(b) r(een) h
(remo) n(v) n(ed) e(from) h(recen) n(t) 523 4625 y(Eclipse) 30
b(v) n(ersions\).) g(Th) n(us,) h(w) n(e) f(decided) h(to) g(design) g
(an) f(implemen) n(tation) i(from) e(scratc) n(h.) 523
4725 y(Up) g(to) f(no) n(w,) f(w) n(e) h(ha) n(v) n(e) f(ac) n(hiev) n
(ed) g(only) h(a) g(v) n(ery) f(simple) h(implemen) n(tation) g(that) h
(certainly) 523 4825 y(needs) 37 b(to) g(b) r(e) g(impro) n(v) n(ed) f
(and) h(optimized.) g(Recall) g(that) g(w) n(e) g(w) n(an) n(t) f(to) h
(use) g(a) g(standard) 523 4924 y(Prolog) 25 b(implemen) n(tation,) j
(so) f(w) n(e) g(will) h(a) n(v) n(oid) e(implemen) n(tation-lev) n(el)
h(manipulations.) p 90 rotate dyy eop
%%Page: 3 3
3 2 bop Fs 648 448 a(In) 27 b(order) g(to) g(compute) p
Fl 28 w(:) p Fm(G) p Fs 28 w(w) n(e) g(start) g(an) h(SLD) g
(computation) f(for) g(the) h(goal) p Fm 26 w(G) p Fs(.) 648
552 y(T) -7 b(o) 24 b(obtain) h(the) g(negation) g(of) p
Fm 25 w(G) p Fs 25 w(is) g(enough) f(to) h(negate) f(the) i(fron) n
(tier) e(form) n(ula.) g(This) h(is) 523 652 y(done) h(b) n(y) h
(negating) f(eac) n(h) f(comp) r(onen) n(t) i(of) f(the) h(disjunction)
h(of) e(all) g(implied) i(clauses) d(\(that) 523 752
y(form) i(the) h(fron) n(tier\)) f(and) h(com) n(bining) f(the) h
(results.) 648 856 y(What) 23 b(is) g(missing) g(is) g(a) g(metho) r(d)
g(to) g(generate) f(the) i(fron) n(tier.) e(Up) i(to) f(no) n(w) f(w) n
(e) h(are) f(using) 523 955 y(the) 28 b(simplest) g(fron) n(tier) e(p) r
(ossible:) h(the) h(fron) n(tier) f(of) g(depth) h(1) f(obtained) g(b) n
(y) h(doing) e(all) i(p) r(os-) 523 1055 y(sible) h(single) g(steps) g
(of) g(SLD) g(resolution.) f(Simple) i(insp) r(ection) f(of) g(the) g
(applicable) g(clauses) 523 1154 y(can) 24 b(do) g(this.) h(Nev) n
(ertheless,) f(w) n(e) g(plan) h(to) f(impro) n(v) n(e) f(it) i(b) n(y)
f(using) h(abstract) e(in) n(terpretation) 523 1254 y(and) f(detecting)
g(the) g(degree) f(of) g(ev) -5 b(aluation) 21 b(of) h(a) g(term) f
(that) i(the) f(execution) f(will) h(generate.) 648 1358
y(Using) j(these) g(ideas) g(w) n(e) g(ha) n(v) n(e) f(implemen) n(ted)
i(a) f(predicate) p Fr 24 w(cneg/1) p Fs 23 w(for) g(full) h(construc-)
523 1458 y(tiv) n(e) 19 b(negation.) g(Built-in) h(based) f(goals) f
(ha) n(v) n(e) h(a) g(sp) r(ecial) g(treatmen) n(t) g(\(mo) n(ving) g
(conjunctions) 523 1557 y(in) n(to) 36 b(disjunctions,) i(disjunctions)
e(in) n(to) h(conjunction,) g(eliminating) f(double) h(negations,) 523
1657 y(etc.\)) p Fo 523 1928 a(2.1) 95 b(F) -8 b(ron) m(tier) p
Fs 523 2115 a(W) h(e) 30 b(are) e(going) g(to) h(describ) r(e) g(the) g
(running) g(of) p Fm 29 w(cneg) p Fs 3 w(\() p Fm(G) p
Fs(\)) g(to) h(presen) n(t) e(the) i(algorithm) e(that) 523
2215 y(negates) f(a) g(goal) f(in) h(a) g(constructiv) n(e) g(w) n(a) n
(y) -7 b(.) 26 b(T) -7 b(o) 27 b(de\014ne) h(the) g(fron) n(tier) e(of)
i(a) f(goal) f(w) n(e) h(ha) n(v) n(e) f(to) 523 2315
y(consider) h(three) g(kinds) h(of) f(goals:) p Fo 575
2519 a({) p Fs 41 w(If) p Fm 28 w(G) p Fl 24 w(\021) p
Fs 22 w(\() p Fm(G) p Fk 1020 2531 a(1) p Fs 1058 2519
a(;) p Fm 14 w(G) p Fk 1160 2531 a(2) p Fs 1197 2519
a(\)) h(then) p Fm 28 w(F) 12 b(r) r(ontier) p Fs 2 w(\() p
Fm(G) p Fs(\)) p Fl 25 w(\021) p Fm 27 w(F) g(r) r(ontier) p
Fs 2 w(\() p Fm(G) p Fk 2451 2531 a(1) p Fs 2490 2519
a(\)) p Fl 19 w(_) p Fm 18 w(F) g(r) r(ontier) p Fs 2
w(\() p Fm(G) p Fk 3042 2531 a(2) p Fs 3081 2519 a(\).) p
Fo 575 2623 a({) p Fs 41 w(If) p Fm 22 w(G) p Fl 24 w(\021) p
Fs 22 w(\() p Fm(G) p Fk 1014 2635 a(1) p Fm 1052 2623
a(;) i(G) p Fk 1154 2635 a(2) p Fs 1192 2623 a(\)) 22
b(then) p Fm 22 w(F) 12 b(r) r(ontier) p Fs 2 w(\() p
Fm(G) p Fs(\)) p Fl 24 w(\021) p Fm 22 w(F) g(r) r(ontier) p
Fs 2 w(\() p Fm(G) p Fk 2428 2635 a(1) p Fs 2466 2623
a(\)) p Fl 7 w(^) p Fm 7 w(F) g(r) r(ontier) p Fs 2 w(\() p
Fm(G) p Fk 2995 2635 a(2) p Fs 3034 2623 a(\)) 22 b(and) f(then) 664
2723 y(w) n(e) 26 b(ha) n(v) n(e) f(to) i(apply) f(DeMorgan) f(to) h(k)
n(eep) g(the) h(disjunction) g(of) f(conjunctions) g(format.) p
Fo 575 2827 a({) p Fs 41 w(If) g(w) n(e) f(ha) n(v) n(e) f(that) p
Fm 26 w(G) p Fl 23 w(\021) p Fm 23 w(p) p Fs(\() p 1482
2760 76 4 v Fm(X) p Fs 6 w(\)) i(and) f(that) g(the) h(simple) g
(predicate) p Fm 24 w(p=n) p Fs 25 w(is) f(de\014ned) h(b) n(y) f(N) 664
2926 y(clauses:) p Fm 941 3030 a(p) p Fs(\() p 1015 2963
V Fm(X) p Fk 1090 2977 a(1) p Fs 1128 3030 a(\)) e(:) p
Fl 23 w(\000) p Fm(C) p Fj 1359 3000 a(0) p Fk 1353 3051
a(1) p Fm 1390 3030 a(:) 913 3149 y(p) p Fs(\() p 987
3083 V Fm(X) p Fk 1063 3097 a(2) p Fs 1100 3149 a(\)) g(:) p
Fl 23 w(\000) p Fm(C) p Fj 1331 3119 a(0) p Fk 1325 3170
a(2) p Fm 1362 3149 a(:) 927 3249 y(:) 14 b(:) g(:) 913
3349 y(p) p Fs(\() p 987 3282 V Fm(X) p Fk 1063 3296
a(3) p Fs 1100 3349 a(\)) 23 b(:) p Fl 23 w(\000) p Fm(C) p
Fj 1331 3319 a(0) p Fi 1325 3372 a(N) p Fm 1388 3349
a(:) p Fs 664 3552 a(W) -7 b(e) 38 b(can) f(sa) n(y) g(that) h(the) g
(fron) n(tier) f(of) g(the) h(goal) f(has) g(the) h(format:) p
Fm 37 w(F) 12 b(r) r(ontier) p Fs 2 w(\() p Fm(G) p Fs(\)) p
Fl 41 w(\021) 664 3652 y(f) p Fm(C) p Fk 765 3664 a(1) p
Fl 819 3652 a(_) p Fm 17 w(C) p Fk 950 3664 a(2) p Fl
1005 3652 a(_) p Fm 17 w(:) i(:) g(:) p Fl 16 w(_) p
Fm 18 w(C) p Fi 1322 3664 a(N) p Fl 1385 3652 a(g) p
Fs 26 w(whic) n(h) 27 b(will) g(b) r(e) g(a) f(dis) h(junction) h(of) e
(N) h(conjunctions.) g(Where) 664 3752 y(eac) n(h) p
Fm 39 w(C) p Fi 922 3764 a(i) p Fs 990 3752 a(is) 40
b(the) g(join) g(of) g(the) g(conjunction) g(of) g(subgoals) p
Fm 39 w(C) p Fj 2659 3721 a(0) p Fi 2653 3773 a(i) p
Fs 2722 3752 a(plus) g(the) g(equalities) 664 3851 y(that) 33
b(are) f(needed) i(to) e(get) h(the) h(uni\014cation) e(b) r(et) n(w) n
(een) h(the) h(v) -5 b(ariables) 31 b(of) p 3014 3785
V Fm 33 w(X) p Fs 40 w(and) i(the) 664 3967 y(corresp) r(onding) 26
b(terms) h(of) p 1524 3900 V Fm 28 w(X) p Fi 1599 3914
a(i) p Fs 1627 3967 a(.) 648 4167 y(The) g(solutions) f(of) p
Fm 27 w(cneg) p Fs 3 w(\() p Fm(G) p Fs(\)) h(are) f(the) i(solutions) e
(of) h(the) h(com) n(bination) e(\(conjunction\)) 523
4267 y(of) 37 b(one) g(solution) g(of) g(eac) n(h) g(of) g(the) g(N) h
(conjunctions) p Fm 37 w(C) p Fi 2321 4279 a(i) p Fs
2349 4267 a(.) f(F) -7 b(rom) 37 b(no) n(w) g(w) n(e) g(are) f(going) g
(to) 523 4366 y(explain) 27 b(ho) n(w) g(to) h(negate) f(a) g(single) g
(conjunction) p Fm 28 w(C) p Fi 2158 4378 a(i) p Fs 2186
4366 a(.) p Fo 523 4637 a(2.2) 95 b(Preparation) p Fs
523 4825 a(Before) 33 b(negating) h(a) f(conjunction) i(obtained) f
(from) g(the) g(fron) n(tier) f(w) n(e) h(ha) n(v) n(e) f(to) h
(simplify) -7 b(,) 523 4924 y(organize) 26 b(and) h(normalize) g(it:) p
90 rotate dyy eop
%%Page: 4 4
4 3 bop Fo 575 448 a({) 41 b(Simpli\014cation) 29 b(of) h(the) h
(conjunction) p Fs(.) d(If) f(one) f(of) h(the) g(terms) g(of) p
Fm 27 w(C) p Fi 2928 460 a(i) p Fs 2983 448 a(is) p Fm
26 w(tr) r(ue) p Fs 27 w(\(e.g.) p Fm 664 548 a(X) p
Fs 38 w(=) p Fm 31 w(X) p Fs 7 w(\)) 32 b(w) n(e) h(can) f(eliminate) h
(it) g(from) p Fm 32 w(C) p Fi 2005 560 a(i) p Fs 2033
548 a(,) g(and) g(if) g(one) f(of) h(the) g(terms) f(is) p
Fm 33 w(f) 9 b(ail) p Fs 33 w(\(e.g.) p Fm 664 648 a(X) p
Fl 32 w(6) p Fs(=) p Fm 26 w(X) p Fs 7 w(\)) 29 b(w) n(e) g(can) g
(simplify) p Fm 29 w(C) p Fi 1645 660 a(i) p Fl 1699
648 a(\021) p Fm 26 w(f) 9 b(ail) p Fs 2 w(.) 28 b(This) h
(simpli\014cation) g(will) h(b) r(e) f(done) g(during) 664
747 y(all) 36 b(the) h(pro) r(cess) e(of) h(generation) f(of) h(terms) g
(of) g(the) h(fron) n(tier) e(of) i(these) f(conjunction) 664
847 y(recursiv) n(ely) -7 b(.) p Fo 575 946 a({) 41 b(Organization) 24
b(of) f(the) g(conjunction) p Fs(.) e(W) -7 b(e) 20 b(mak) n(e) g
(three) g(groups) e(with) j(the) g(comp) r(o-) 664 1045
y(nen) n(ts) f(of) p Fm 21 w(C) p Fi 1023 1057 a(i) p
Fs 1071 1045 a(to) g(divide) h(them) g(in) g(equalities,) f
(disequalities) f(and) i(the) f(rest) g(of) h(subgoals.) 664
1145 y(Then) 27 b(w) n(e) f(obtain) p Fm 26 w(C) p Fi
1317 1157 a(i) p Fl 1368 1145 a(\021) p 1456 1078 44
4 v Fm 23 w(I) p Fl 23 w(^) p 1587 1078 72 4 v Fm 17
w(D) p Fl 19 w(^) p 1746 1078 64 4 v Fm 16 w(R) p Fs
28 w(where) p 2076 1078 44 4 v Fm 26 w(I) p Fs 33 w(is) h(the) g(set) f
(of) h(equalities,) p 2981 1078 72 4 v Fm 26 w(D) p Fs
29 w(is) f(the) h(set) 664 1244 y(of) h(disequalities) f(\(that) h(app)
r(ear) f(explicitly) g(in) p Fm 28 w(C) p Fj 2236 1214
a(0) p Fi 2230 1266 a(i) p Fs 2288 1244 a(and) p 2449
1178 64 4 v Fm 27 w(R) p Fs 28 w(is) h(the) g(rest) f(of) g(subgoals.) p
Fo 575 1343 a({) 41 b(Normalization) f(of) h(the) h(conjunction) p
Fs(.) 36 b(The) g(set) g(of) g(v) -5 b(ariables) 35 b(of) h(the) g
(goal) f(is) 664 1443 y(called) p Fm 27 w(Goal) r(V) 19
b(ar) r(s) p Fs(.) 28 b(The) g(set) g(of) f(free) h(v) -5
b(ariables) 26 b(of) p 2308 1376 V Fm 27 w(R) p Fs 29
w(is) h(called) p Fm 27 w(R) q(el) r(V) 18 b(ar) r(s) p
Fs(.) p Fl 722 1555 a(\017) p Fo 41 w(Elimination) 26
b(of) i(redundan) m(t) i(v) -5 b(ariables) 28 b(and) i(equalities) p
Fs(.) 23 b(If) p Fm 25 w(I) p Fi 3013 1567 a(i) p Fl
3065 1555 a(\021) p Fm 22 w(X) p Fs 30 w(=) p Fm 22 w(Y) p
Fs 805 1655 a(where) p Fm 32 w(Y) p Fl 49 w(62) p Fm
31 w(Goal) r(V) 18 b(ar) r(s) p Fs 33 w(then) 33 b(w) n(e) e(ha) n(v) n
(e) g(no) n(w) g(the) i(form) n(ula) e(\() p Fm(I) p
Fk 2848 1667 a(1) p Fl 2907 1655 a(^) p Fm 22 w(:) 14
b(:) g(:) p Fl 21 w(^) p Fm 22 w(I) p Fi 3215 1667 a(i) p
Fj(\000) p Fk(1) p Fl 3350 1655 a(^) p Fm 805 1754 a(I) p
Fi 841 1766 a(i) p Fk(+1) p Fl 977 1754 a(^) p Fm 24
w(:) g(:) g(:) p Fl 23 w(^) p Fm 24 w(I) p Fi 1291 1766
a(N) 6 b(I) p Fl 1412 1754 a(^) p 1490 1688 72 4 v Fm
23 w(D) p Fl 26 w(^) p 1664 1688 64 4 v Fm 24 w(R) p
Fs 36 w(\)) p Fm(\033) p Fs 38 w(where) p Fm 35 w(\033) p
Fs 39 w(=) p Fl 35 w(f) p Fm(Y) j(=X) p Fl 7 w(g) p Fs(.) 34
b(I.e.) h(the) g(v) -5 b(ariable) p Fm 34 w(Y) p Fs 54
w(is) 805 1854 y(substituted) 37 b(b) n(y) p Fm 35 w(X) p
Fs 42 w(in) f(the) g(en) n(tire) f(form) n(ula.) g(Afterw) n(ard) g
(rep) r(eated) g(equalities) 805 1954 y(ha) n(v) n(e) 27
b(to) g(b) r(e) h(eliminated) g(and) g(the) g(conjunction) f(m) n(ust) h
(b) r(e) g(simpli\014ed) g(again.) p Fl 722 2052 a(\017) p
Fo 41 w(Elimination) 18 b(of) j(irrelev) -5 b(an) m(t) 22
b(disequalities) p Fs(.) 16 b(The) j(set) f(of) g(v) -5
b(ariables) 17 b(of) p Fm 19 w(Goal) r(V) i(ar) r(s) p
Fs 805 2152 a(and) 24 b(the) h(v) -5 b(ariables) 23 b(that) h(app) r
(ear) g(in) p 1985 2085 44 4 v Fm 24 w(I) p Fs 31 w(are) g(called) f
(join) n(tly) p Fm 25 w(I) 7 b(mpV) 18 b(ar) r(s) p Fs(.) 25
b(The) f(dise-) 805 2252 y(qualities) p Fm 26 w(D) p
Fi 1203 2264 a(i) p Fs 1256 2252 a(whic) n(h) h(con) n(tain) g(an) n(y)
g(v) -5 b(ariable) 24 b(that) i(w) n(asn't) f(in) p Fm
26 w(I) 7 b(mpV) 19 b(ar) r(s) p Fs 26 w(neither) p Fm
805 2351 a(R) q(el) r(V) f(ar) r(s) p Fs 28 w(are) 27
b(irrelev) -5 b(an) n(t) 26 b(and) i(m) n(ust) f(b) r(e) h(eliminated.)
p Fo 523 2597 a(2.3) 95 b(Negation) 30 b(of) i(the) g(form) m(ula) p
Fs 523 2759 a(T) -7 b(o) 27 b(obtain) h(all) f(solutions) g(of) p
Fm 28 w(C) p Fi 1520 2771 a(i) p Fs 1576 2759 a(and) g(to) h(negate) f
(them) h(is) g(not) g(p) r(ossible) f(b) r(ecause) p
Fm 28 w(C) p Fi 3225 2771 a(i) p Fs 3280 2759 a(can) 523
2859 y(ha) n(v) n(e) e(an) h(in\014nite) i(n) n(um) n(b) r(er) e(of) g
(solutions.) g(So) g(w) n(e) g(ha) n(v) n(e) g(to) g(use) g(the) h
(general) e(constructiv) n(e) 523 2958 y(negation) i(algorithm.) 648
3058 y(W) -7 b(e) 18 b(consider) g(that) p Fm 18 w(E) 5
b(xpV) 19 b(ar) r(s) p Fs 19 w(is) g(the) g(set) f(of) g(v) -5
b(ariables) 17 b(of) p 2464 2991 64 4 v Fm 19 w(R) p
Fs 19 w(that) h(aren't) g(in) p Fm 19 w(I) 7 b(mpV) 18
b(ar) r(s) p Fs(,) 523 3157 y(i.e.) p Fm 28 w(R) q(el) r(V) f(ar) r(s) p
Fs 29 w(except) 27 b(the) h(v) -5 b(ariables) 27 b(of) p
1845 3091 44 4 v Fm 27 w(I) p Fs 35 w(of) g(the) h(normalized) f(form) n
(ula.) 648 3257 y(The) h(\014rst) g(step) h(is) f(the) p
Fo 29 w(Division) j(of) i(the) g(form) m(ula) p Fs(.) 28
b(W) -7 b(e) 28 b(ha) n(v) n(e) g(to) g(divide) p Fm
29 w(C) p Fi 3163 3269 a(i) p Fs 3219 3257 a(in) h(its) 523
3357 y(sub-parts:) p Fm 1296 3551 a(C) p Fi 1355 3563
a(i) p Fl 1406 3551 a(\021) p 1494 3484 V Fm 23 w(I) p
Fl 25 w(^) p 1629 3484 72 4 v Fm 19 w(D) p Fi 1700 3563
a(imp) p Fl 1839 3551 a(^) p 1913 3484 64 4 v Fm 19 w(R) p
Fi 1977 3563 a(imp) p Fl 2116 3551 a(^) p 2190 3484 72
4 v Fm 19 w(D) p Fi 2261 3563 a(exp) p Fl 2387 3551 a(^) p
2461 3484 64 4 v Fm 19 w(R) p Fi 2524 3563 a(exp) p Fs
648 3729 a(where) p 889 3662 72 4 v Fm 28 w(D) p Fi 960
3741 a(exp) p Fs 1096 3729 a(are) f(the) h(disequalities) f(of) p
1946 3662 V Fm 29 w(D) p Fs 31 w(with) h(v) -5 b(ariables) 27
b(of) p Fm 29 w(E) 5 b(xpV) 19 b(ar) r(s) p Fs 30 w(and) p
3213 3662 V Fm 28 w(D) p Fi 3284 3741 a(imp) p Fs 523
3828 a(are) 27 b(the) h(rest) g(of) g(disequalities,) p
1555 3762 64 4 v Fm 27 w(R) p Fi 1619 3840 a(exp) p Fs
1754 3828 a(are) f(the) h(goals) f(of) p 2340 3762 V
Fm 28 w(R) p Fs 28 w(with) i(v) -5 b(ariables) 26 b(of) p
Fm 28 w(E) 5 b(xpV) 19 b(ar) r(s) p Fs 523 3928 a(and) p
684 3861 V Fm 27 w(R) p Fi 748 3940 a(imp) p Fs 897 3928
a(are) 26 b(the) i(rest) f(of) h(goals,) e(and) p 1827
3861 44 4 v Fm 27 w(I) p Fs 35 w(are) h(the) h(equalities.) 648
4028 y(Therefore) e(the) i(constructiv) n(e) e(negation) h(of) h(the) g
(divided) g(form) n(ula) e(will) i(b) r(e:) p Fl 1201
4227 a(:) p Fm 28 w(C) p Fi 1343 4239 a(i) p Fl 1394
4227 a(\021) 23 b(:) p 1565 4160 V Fm 28 w(I) p Fl 7
w(_) p Fs 1464 4327 a(\() p 1496 4260 V Fm(I) p Fl 26
w(^) 18 b(:) p 1715 4260 72 4 v Fm 29 w(D) p Fi 1786
4339 a(imp) p Fs 1906 4327 a(\)) p Fl(_) p Fs 1464 4426
a(\() p 1496 4360 44 4 v Fm(I) p Fl 26 w(^) p 1631 4360
72 4 v Fm 18 w(D) p Fi 1703 4438 a(imp) p Fl 1823 4426
a(:) p 1906 4360 64 4 v Fm 28 w(R) p Fi 1970 4438 a(imp) p
Fs 2091 4426 a(\)) p Fl(_) p Fs 1464 4526 a(\() p 1496
4459 44 4 v Fm(I) p Fl 26 w(^) p 1631 4459 72 4 v Fm
18 w(D) p Fi 1703 4538 a(imp) p Fl 1842 4526 a(^) p 1916
4459 64 4 v Fm 19 w(R) p Fi 1979 4538 a(imp) p Fl 2118
4526 a(^) h(:) p Fs 28 w(\() p 2307 4459 72 4 v Fm(D) p
Fi 2379 4538 a(exp) p Fl 2505 4526 a(^) p 2578 4459 64
4 v Fm 18 w(R) p Fi 2642 4538 a(exp) p Fs 2750 4526 a(\)\)) 648
4725 y(The) 33 b(reason) f(wh) n(y) h(it) h(is) g(not) g(p) r(ossible) f
(to) g(separate) p 2362 4658 72 4 v Fm 32 w(D) p Fi 2433
4737 a(exp) p Fs 2575 4725 a(and) p 2742 4658 64 4 v
Fm 33 w(R) p Fi 2806 4737 a(exp) p Fs 2947 4725 a(it) h(is) f(b) r
(ecause) 523 4825 y(they) h(con) n(tain) e(free) i(v) -5
b(ariables) 32 b(and) h(their) g(negation) g(cannot) g(b) r(e) h(done) f
(separately) -7 b(.) 32 b(The) 523 4924 y(answ) n(ers) 21
b(of) h(the) h(negations) f(will) g(b) r(e) h(the) g(answ) n(ers) e(of)
i(the) f(negation) g(of) h(the) f(equalities,) h(the) p
90 rotate dyy eop
%%Page: 5 5
5 4 bop Fs 523 448 a(answ) n(ers) 29 b(of) i(the) g(negation) f(of) g
(the) h(disequalities) g(without) g(free) f(v) -5 b(ariables,) 30
b(the) h(answ) n(ers) 523 548 y(of) k(the) h(negation) f(of) g(the) h
(subgoals) e(without) i(free) f(v) -5 b(ariables) 34
b(and) i(the) f(answ) n(ers) f(of) i(the) 523 648 y(negation) 20
b(of) i(the) f(rest) g(of) g(subgoals) f(of) h(the) h(conjunctions) f
(\(the) h(ones) e(with) i(free) f(v) -5 b(ariables\).) 523
747 y(Eac) n(h) 26 b(of) i(them) g(will) g(b) r(e) g(obtained) f(as) g
(follo) n(w:) p Fo 575 941 a({) 41 b(Negation) 31 b(of) p
1182 874 44 4 v Fm 32 w(I) p Fs 7 w(.) d(W) -7 b(e) 28
b(ha) n(v) n(e) p 1610 874 V Fm 26 w(I) p Fl 30 w(\021) p
Fm 23 w(I) p Fk 1800 953 a(1) p Fl 1856 941 a(^) p Fm
19 w(:) 14 b(:) g(:) p Fl 18 w(^) p Fm 19 w(I) p Fi 2155
953 a(N) 6 b(I) p Fl 2275 941 a(\021) 1319 1128 y(9) p
1393 1061 63 4 v Fm 28 w(Z) p Fk 1456 1140 a(1) p Fm
1520 1128 a(X) p Fk 1589 1140 a(1) p Fs 1650 1128 a(=) p
Fm 22 w(t) p Fk 1767 1140 a(1) p Fl 1823 1128 a(^) p
Fm 19 w(:) 14 b(:) g(:) p Fl 18 w(^) 19 b(9) p 2160 1061
V Fm 28 w(Z) p Fi 2222 1140 a(N) 6 b(I) p Fm 2347 1128
a(X) p Fi 2416 1140 a(N) g(I) p Fs 2535 1128 a(=) p Fm
23 w(t) p Fi 2653 1140 a(N) g(I) p Fs 664 1315 a(where) p
896 1249 V Fm 19 w(Z) p Fi 959 1327 a(i) p Fs 1006 1315
a(are) 19 b(the) h(v) -5 b(ariables) 19 b(of) g(the) h(equalit) n(y) p
Fm 19 w(I) p Fi 2174 1327 a(i) p Fs 2222 1315 a(that) g(aren't) g
(included) g(in) p Fm 20 w(Goal) r(V) e(ar) r(s) p Fs
664 1415 a(\(i.e.) k(that) h(aren't) e(quan) n(ti\014ed) h(and) f
(therefore) g(are) g(free) g(v) -5 b(ariables\).) 21
b(There) h(aren't) f(uni-) 664 1515 y(v) n(ersally) g(quan) n(ti\014ed)
i(v) -5 b(ariables) 21 b(in) i(an) f(equalit) n(y) -7
b(.) 22 b(When) i(w) n(e) e(negate) g(this) h(conjunction) 664
1614 y(of) 28 b(equalities) f(w) n(e) g(obtain) g(the) h(constrain) n
(t) p Fl 1280 1801 a(8) p 1354 1735 V Fm 27 w(Z) p Fk
1416 1813 a(1) p Fm 1481 1801 a(X) p Fk 1550 1813 a(1) p
Fl 1610 1801 a(6) p Fs(=) p Fm 23 w(t) p Fk 1728 1813
a(1) p Fh 1280 1852 a(|) p 1317 1852 168 10 v 168 w({z) p
1559 1852 V 168 w(}) p Fj 1455 1931 a(:) p Fi 28 w(I) p
Fg 1557 1939 a(1) p Fl 1779 1801 a(_) p Fm 14 w(:) 14
b(:) g(:) p Fl 19 w(_) k(8) p 2111 1735 63 4 v Fm 27
w(Z) p Fi 2174 1813 a(N) 6 b(I) p Fm 2298 1801 a(X) p
Fi 2367 1813 a(N) g(I) p Fl 2487 1801 a(6) p Fs(=) p
Fm 23 w(t) p Fi 2605 1813 a(N) g(I) p Fh 2037 1852 a(|) p
2074 1852 258 10 v 258 w({z) p 2406 1852 V 258 w(}) p
Fj 2277 1931 a(:) p Fi 28 w(I) p Ff 2379 1939 a(N) f(I) p
Fl 2725 1801 a(\021) p Fi 1767 2098 a(N) h(I) p Fh 1767
2123 a(_) p Fi 1759 2300 a(i) p Fk(=1) p Fl 1881 2202
a(8) p 1955 2135 63 4 v Fm 27 w(Z) p Fi 2017 2214 a(i) p
Fm 2045 2202 a(X) p Fi 2114 2214 a(i) p Fl 2164 2202
a(6) p Fs(=) p Fm 23 w(t) p Fi 2282 2214 a(i) p Fs 664
2430 a(This) 34 b(constrain) n(t) e(is) i(the) g(\014rst) g(answ) n(er)
e(of) i(the) g(negation) f(of) p Fm 34 w(C) p Fi 2707
2442 a(i) p Fs 2768 2430 a(that) h(con) n(tains) p Fm
33 w(N) 9 b(I) p Fs 664 2530 a(solutions.) p Fo 575 2632
a({) 41 b(Negation) 23 b(of) p 1165 2565 72 4 v Fm 23
w(D) p Fi 1236 2644 a(imp) p Fs 1357 2632 a(.) d(If) h(w) n(e) f(ha) n
(v) n(e) p Fm 19 w(N) p Fi 1842 2644 a(D) p Ff 1896 2652
a(imp) p Fs 2028 2632 a(disequalities) p 2490 2565 V
Fm 20 w(D) p Fi 2561 2644 a(imp) p Fl 2705 2632 a(\021) p
Fm 23 w(D) p Fk 2862 2644 a(1) p Fl 2902 2632 a(^) p
Fm 4 w(:) 14 b(:) g(:) p Fl 4 w(^) p Fm 4 w(D) p Fi 3190
2644 a(N) p Ff 3243 2652 a(D) 3289 2665 y(imp) p Fs 664
2756 a(where) p Fm 31 w(D) p Fi 977 2768 a(i) p Fl 1034
2756 a(\021) 29 b(8) p 1205 2689 90 4 v Fm 30 w(W) p
Fi 1295 2768 a(i) p Fl 1355 2756 a(9) p 1432 2689 63
4 v Fm 31 w(Z) p Fi 1495 2768 a(i) p Fm 1554 2756 a(Y) p
Fi 1602 2768 a(i) p Fl 1659 2756 a(6) p Fs(=) p Fm 29
w(s) p Fi 1792 2768 a(i) p Fs 1851 2756 a(where) p Fm
31 w(Y) p Fi 2143 2768 a(i) p Fs 2202 2756 a(is) j(a) f(v) -5
b(ariable) 30 b(of) p Fm 31 w(I) 7 b(mpV) 19 b(ar) r(s) p
Fs(,) p Fm 32 w(s) p Fi 3217 2768 a(i) p Fs 3276 2756
a(is) 31 b(a) 664 2855 y(term) c(without) g(v) -5 b(ariables) 26
b(of) p Fm 26 w(E) 5 b(xpV) 20 b(ar) r(s) p Fs(,) p 2002
2789 90 4 v Fm 27 w(W) p Fi 2092 2867 a(i) p Fs 2147
2855 a(are) 25 b(univ) n(ersally) h(quan) n(ti\014ed) g(v) -5
b(ariables) 664 2955 y(that) 27 b(aren't) e(in) h(the) h(equalities) p
Fk 1684 2925 a(1) p Fs 1721 2955 a(,) f(nor) f(in) i(the) f(rest) g(of)
g(the) g(goals) f(of) p 2848 2888 64 4 v Fm 26 w(R) p
Fs 27 w(b) r(ecause) g(then) 664 3055 y(it) j(will) g(b) r(e) h(a) e
(disequalit) n(y) g(of) p 1600 2988 72 4 v Fm 28 w(D) p
Fi 1671 3067 a(exp) p Fs 1779 3055 a(.) g(Then) h(w) n(e) g(will) g
(get) p Fm 28 w(N) p Fi 2532 3067 a(D) p Ff 2586 3075
a(imp) p Fs 2726 3055 a(new) f(solutions) g(with) 664
3154 y(the) h(format:) p 664 3289 44 4 v Fm 664 3356
a(I) p Fl 26 w(^) 18 b(:) p Fm 28 w(D) p Fk 951 3368
a(1) p 664 3389 V Fm 664 3455 a(I) p Fl 26 w(^) p Fm
18 w(D) p Fk 868 3467 a(1) p Fl 924 3455 a(^) h(:) p
Fm 28 w(D) p Fk 1150 3467 a(2) p Fm 664 3555 a(:) 14
b(:) g(:) p 664 3588 V 664 3655 a(I) p Fl 26 w(^) p Fm
18 w(D) p Fk 868 3667 a(1) p Fl 924 3655 a(^) p Fm 19
w(:) g(:) g(:) p Fl 18 w(^) p Fm 19 w(D) p Fi 1256 3667
a(N) p Ff 1309 3675 a(D) 1355 3688 y(imp) p Fj 1466 3667
a(\000) p Fk(1) p Fl 1574 3655 a(^) 19 b(:) p Fm 28 w(D) p
Fi 1800 3667 a(N) p Ff 1853 3675 a(D) 1899 3688 y(imp) p
Fs 664 3856 a(Where) p Fl 29 w(:) p Fm 30 w(D) p Fi 1085
3868 a(i) p Fl 1138 3856 a(\021) 26 b(9) p 1304 3790
90 4 v Fm 29 w(W) p Fi 1394 3868 a(i) p Fm 1451 3856
a(Y) p Fi 1499 3868 a(i) p Fs 1553 3856 a(=) p Fm 26
w(s) p Fi 1683 3868 a(i) p Fs 1710 3856 a(.) k(The) f(negation) g(of) g
(an) g(univ) n(ersally) f(quan) n(ti\014cation) 664 3956
y(turns) i(on) f(existen) n(tially) g(quan) n(ti\014cation) f(and) i
(the) g(quan) n(ti\014cation) f(of) g(free) g(v) -5 b(ariables) 664
4055 y(of) p 760 3989 63 4 v Fm 29 w(Z) p Fi 823 4067
a(i) p Fs 880 4055 a(get) 29 b(lost) f(b) r(ecause) h(they) g(are) g
(uni\014ed) g(with) h(the) f(ev) -5 b(aluation) 29 b(of) g(the) g
(equalities) 664 4155 y(of) p 759 4088 44 4 v Fm 28 w(I) p
Fs 7 w(.) e(Then) h(w) n(e) f(will) h(get) p Fm 28 w(N) p
Fi 1554 4167 a(D) p Ff 1608 4175 a(imp) p Fs 1747 4155
a(new) g(answ) n(ers.) p Fo 575 4268 a({) 41 b(Negation) 33
b(of) p 1186 4201 64 4 v Fm 34 w(R) p Fi 1250 4280 a(imp) p
Fs 1371 4268 a(.) c(If) h(w) n(e) f(ha) n(v) n(e) p Fm
29 w(N) p Fi 1893 4280 a(R) p Ff 1943 4288 a(imp) p Fs
2084 4268 a(subgoals) p 2419 4201 V Fm 28 w(R) p Fi 2483
4280 a(imp) p Fl 2630 4268 a(\021) p Fm 25 w(R) p Fk
2783 4280 a(1) p Fl 2840 4268 a(^) p Fm 21 w(:) 14 b(:) g(:) p
Fl 19 w(^) p Fm 20 w(R) p Fi 3170 4280 a(N) p Ff 3223
4288 a(R) 3266 4301 y(imp) p Fs 3382 4268 a(.) 664 4376
y(Then) 28 b(w) n(e) f(will) h(get) f(new) h(answ) n(ers) e(from) h
(eac) n(h) g(of) h(the) f(conjunctions:) p 664 4511 44
4 v Fm 664 4577 a(I) p Fl 26 w(^) p 799 4511 72 4 v Fm
18 w(D) p Fi 870 4589 a(imp) p Fl 1010 4577 a(^) 18 b(:) p
Fm 29 w(R) p Fk 1230 4589 a(1) p 664 4610 44 4 v Fm 664
4677 a(I) p Fl 26 w(^) p 799 4610 72 4 v Fm 18 w(D) p
Fi 870 4689 a(imp) p Fl 1010 4677 a(^) p Fm 18 w(R) p
Fk 1146 4689 a(1) p Fl 1202 4677 a(^) h(:) p Fm 28 w(R) p
Fk 1422 4689 a(2) p Fm 664 4777 a(:) 14 b(:) g(:) p 523
4839 473 4 v Fe 546 4893 a(1) p Fq 606 4924 a(of) 27
b(course,) f(there) g(are) g(no) f(univ) n(ersally) h(quan) n(ti\014ed)
f(v) l(ariables) h(in) n(to) g(an) f(equalit) n(y) p
90 rotate dyy eop
%%Page: 6 6
6 5 bop 664 382 44 4 v Fm 664 448 a(I) p Fl 26 w(^) p
799 382 72 4 v Fm 18 w(D) p Fi 870 460 a(imp) p Fl 1010
448 a(^) p Fm 18 w(R) p Fk 1146 460 a(1) p Fl 1202 448
a(^) p Fm 19 w(:) 14 b(:) g(:) p Fl 18 w(^) p Fm 19 w(R) p
Fi 1528 460 a(N) p Ff 1581 468 a(R) 1624 481 y(imp) p
Fj 1736 460 a(\000) p Fk(1) p Fl 1843 448 a(^) 19 b(:) p
Fm 28 w(R) p Fi 2063 460 a(N) p Ff 2116 468 a(R) 2159
481 y(imp) p Fs 664 642 a(Where) p Fl 23 w(:) p Fm 24
w(R) p Fi 1067 654 a(i) p Fl 1117 642 a(\021) p Fm 23
w(cneg) p Fs 3 w(\() p Fm(R) p Fi 1468 654 a(i) p Fs
1495 642 a(\).) 24 b(It) f(is) g(again) f(the) h(constructiv) n(e) f
(negation) h(that) g(is) g(applied) 664 742 y(o) n(v) n(er) p
Fm 26 w(R) p Fi 905 754 a(i) p Fs 960 742 a(recursiv) n(ely) -7
b(.) p Fo 575 836 a({) 41 b(Negation) 31 b(of) p 1182
769 V Fm 32 w(D) p Fi 1253 848 a(exp) p Fl 1379 836 a(^) p
1453 769 64 4 v Fm 19 w(R) p Fi 1517 848 a(exp) p Fs
1624 836 a(.) d(This) g(conjunction) g(can't) f(b) r(e) h(disclosed) f
(b) r(ecause) h(the) 664 935 y(negation) c(of) p Fl 25
w(9) p 1162 869 67 4 v Fm 26 w(V) p Fi 1229 947 a(exp) p
1361 869 72 4 v Fm 1361 935 a(D) p Fi 1432 947 a(exp) p
Fl 1553 935 a(^) p 1621 869 64 4 v Fm 13 w(R) p Fi 1686
947 a(exp) p Fs 1793 935 a(,) h(where) p 2079 869 67
4 v Fm 25 w(V) p Fi 2146 947 a(exp) p Fs 2253 935 a(,) g(giv) n(es) f
(univ) n(ersal) g(quan) n(ti\014cations:) p Fl 664 1035
a(8) p 736 968 V Fm 25 w(V) p Fi 803 1047 a(exp) p Fm
937 1035 a(cneg) p Fs 3 w(\() p 1137 968 72 4 v Fm(D) p
Fi 1207 1047 a(exp) p Fl 1330 1035 a(^) p 1401 968 64
4 v Fm 16 w(R) p Fi 1465 1047 a(exp) p Fs 1572 1035 a(\).) j(And) f(no)
n(w) g(the) g(complete) g(algorithm) f(of) h(constructiv) n(e) 664
1134 y(negation) c(m) n(ust) i(b) r(e) f(applied) g(again.) f(The) h
(set) p Fm 23 w(Goal) r(V) c(ar) r(s) p Fs 24 w(that) k(w) n(e) g(are) f
(going) g(to) h(con-) 664 1234 y(sider) k(therefore) g(is) g(the) h
(former) f(set) p Fm 27 w(I) 7 b(mpV) 19 b(ar) r(s) p
Fs(.) 28 b(V) -7 b(ariables) 26 b(of) p 2686 1167 67
4 v Fm 28 w(V) p Fi 2752 1246 a(exp) p Fs 2888 1234 a(are) g
(considered) 664 1334 y(as) c(free) h(v) -5 b(ariables.) 21
b(When) i(solutions) f(of) p Fm 23 w(cneg) p Fs 3 w(\() p
2147 1267 72 4 v Fm(D) p Fi 2217 1346 a(exp) p Fl 2334
1334 a(^) p 2398 1267 64 4 v Fm 9 w(R) p Fi 2461 1346
a(exp) p Fs 2569 1334 a(\)) h(will) g(b) r(e) g(obtained,) f(then) 664
1433 y(w) n(e) 32 b(will) g(reject) g(solutions) g(with) g(equalities) g
(with) h(v) -5 b(ariables) 31 b(of) p 2744 1367 67 4
v Fm 32 w(V) p Fi 2811 1445 a(exp) p Fs 2918 1433 a(.) i(When) f(there)
664 1533 y(will) k(b) r(e) h(a) f(disequalit) n(y) f(with) h(an) n(y) g
(of) g(these) g(v) -5 b(ariables,) 35 b(e.g.) p Fm 35
w(V) p Fs 19 w(,) h(the) h(v) -5 b(ariable) 35 b(will) 664
1633 y(b) r(e) 29 b(univ) n(ersally) e(quan) n(ti\014ed) i(in) f(the) h
(disequalit) n(y) -7 b(.) 28 b(This) h(is) f(the) h(treatmen) n(t) f
(to) h(negate) 664 1732 y(the) 34 b(negation) e(of) g(a) h(goal) f(but)
h(there) g(is) g(a) f(detail) h(that) g(w) n(asn't) g(consider) f(in) h
(former) 664 1832 y(approac) n(hes) 22 b(and) h(that) h(is) g
(necessary) e(to) i(obtain) f(a) g(sound) h(implemen) n(tation,) g(it) g
(is) g(the) 664 1931 y(existence) 30 b(of) h(univ) n(ersally) e(quan) n
(ti\014ed) h(v) -5 b(ariables) 30 b(in) p 2376 1865 72
4 v Fm 30 w(D) p Fi 2447 1943 a(exp) p Fl 2575 1931 a(^) p
2651 1865 64 4 v Fm 21 w(R) p Fi 2715 1943 a(exp) p Fs
2822 1931 a(.) h(It) g(is) f(the) h(result) 664 2031
y(of) 36 b(the) g(recursiv) n(e) e(calls.) h(So,) h(what) f(w) n(e) h
(are) e(really) h(negating) g(is) g(a) h(subgoal) e(of) i(the) 664
2131 y(form:) p Fl 33 w(9) p 968 2064 67 4 v Fm 33 w(V) p
Fi 1035 2143 a(exp) p 1175 2064 72 4 v Fm 1175 2131 a(D) p
Fi 1247 2143 a(exp) p Fl 1376 2131 a(^) p 1453 2064 64
4 v Fm 22 w(R) p Fi 1517 2143 a(exp) p Fs 1625 2131 a(.) d(Here) f(w) n
(e) h(will) g(pro) n(vide) f(the) h(last) g(group) f(of) h(answ) n(ers)
664 2230 y(that) 28 b(come) f(from:) p 664 2357 44 4
v Fm 664 2424 a(I) p Fl 26 w(^) p 799 2357 72 4 v Fm
18 w(D) p Fi 870 2436 a(imp) p Fl 1010 2424 a(^) p 1083
2357 64 4 v Fm 18 w(R) p Fi 1147 2436 a(imp) p Fl 1286
2424 a(^) 19 b(8) p 1434 2357 67 4 v Fm 27 w(V) p Fi
1501 2436 a(exp) p Fl 1636 2424 a(:) p Fs 28 w(\() p
1751 2357 72 4 v Fm(D) p Fi 1822 2436 a(exp) p Fl 1948
2424 a(^) p 2022 2357 64 4 v Fm 19 w(R) p Fi 2086 2436
a(exp) p Fs 2193 2424 a(\)) p Ft 523 2767 a(3) 112 b(Implemen) m
(tation) 35 b(Issues) p Fo 523 2944 a(3.1) 95 b(Co) s(de) 30
b(Expansion) p Fs 523 3087 a(The) 19 b(\014rst) g(thing) h(w) n(e) f
(ha) n(v) n(e) f(to) h(do) g(to) g(implemen) n(t) h(this) g(tec) n
(hnique) f(is) h(obtaining) e(the) i(fron) n(tier) 523
3187 y(of) k(a) g(goal.) f(F) -7 b(or) 24 b(this) g(purp) r(ose) g(is) g
(necessary) f(that) h(the) h(co) r(de) f(of) g(the) h(implied) g
(predicates) e(is) 523 3286 y(a) n(v) -5 b(ailable) 27
b(during) h(execution) g(to) g(construct) g(the) g(fron) n(tier.) g(It)
g(is) g(p) r(ossible) g(to) g(handle) h(the) 523 3386
y(co) r(de) 19 b(of) h(clauses) e(during) h(the) h(execution) f(thanks)
g(to) h(the) f(pac) n(k) -5 b(age) 18 b(system) i(of) f(Ciao) g([4]) g
(that) 523 3486 y(let) 28 b(us) g(to) g(expand) g(the) g(co) r(de) g
(at) f(run) h(time.) h(Therefore) d(w) n(e) i(ha) n(v) n(e) f(b) r(een)
h(able) g(to) f(ev) -5 b(aluate) 523 3585 y(and) 22 b(execute) f
(predicates) g(and) h(pro) n(vide) e(their) i(co) r(de) f(at) h(the) g
(same) f(time) h(to) g(calculate) f(their) p Fm 523 3685
a(F) 12 b(r) r(ontier) r(s) p Fs 34 w(at) 33 b(an) n(y) g(step) g(of) g
(the) h(algorithm.) e(The) h(expansion) f(is) h(implemen) n(ted) h(in) g
(the) 523 3785 y(pac) n(k) -5 b(age) p Fm 35 w(cneg) s(:pl) p
Fs 36 w(that) 36 b(is) g(incorp) r(orated) f(in) h(the) g(declaration) f
(of) h(the) g(mo) r(dule) h(that) f(is) 523 3884 y(going) 26
b(to) i(b) r(e) g(expanded) f(\(i.e.) h(where) f(there) h(are) e(goals)
g(that) i(are) f(negations\).) 648 3984 y(A) 33 b(simple) g(example) f
(w) n(ould) g(b) r(e) i(the) f(mo) r(dule) p Fm 33 w(mod) p
Fs(1) p Fm(:pl) p Fs 34 w(that) g(exp) r(ort) f(the) i(predicate) p
Fm 523 4083 a(odd=) p Fs(1) 27 b(and) h(the) g(predicate) p
Fm 27 w(not) p Fi 1545 4095 a(o) p Fm 1582 4083 a(dd=) p
Fs(1) f(that) h(is) f(seman) n(tically) g(the) h(negation) e(of) p
Fm 28 w(odd=) p Fs(1:) p Fr 523 4227 a(:-) 43 b(module\(mod1,[odd) o
(/1) o(,no) o(t_) o(od) o(d/1) o(],) o([cn) o(eg) o(]\)) o(.) 523
4426 y(odd\(s\(0\)\).) 523 4526 y(odd\(s\(s\(X\)\)\)) c(:-) 872
4625 y(odd\(X\).) 523 4825 y(not_odd\(X\)) g(:-) 872
4924 y(cneg\(odd\(X\)\).) p 90 rotate dyy eop
%%Page: 7 7
7 6 bop Fs 523 448 a(It) 23 b(loads) e(the) i(pac) n(k) -5
b(age) p Fm 21 w(cneg) s(:pl) p Fs 23 w(and) 22 b(the) h(result) f(at) h
(execution) f(time) h(is) f(that) h(the) g(compiler) 523
548 y(w) n(ork) k(with) i(a) f(expanded) g(co) r(de) g(that) g(b) r
(esides) g(the) h(b) r(efore) f(co) r(de) g(has) g(to) r(o) g(the) h
(additional) 523 648 y(co) r(de:) p Fr 523 814 a(stored_clause\(od) o
(d\(s) o(\(0) o(\)\),) o([]) o(\).) 523 914 y(stored_clause\(od) o
(d\(s) o(\(s) o(\(X\)) o(\)\)) o(,[) o(odd) o(\(X) o(\)]\)) o(.) p
Fs 523 1080 a(where) f(information) f(ab) r(out) h(structure) g(of) g
(co) r(de) g(is) g(stored) g(to) g(b) r(e) g(used) g(b) n(y) g(the) h
(negation) 523 1180 y(algorithm.) 20 b(Con) n(tin) n(uing) g(with) i
(this) f(example,) g(to) g(compute) p Fl 21 w(:) p Fm(odd) p
Fs(\() p Fm(Y) p Fs 20 w(\)) g(w) n(e) g(ha) n(v) n(e) e(to) i(obtain)
523 1280 y(its) 28 b(fron) n(tier) e(that) i(in) g(this) g(case) f
(will) h(b) r(e) g(calculated) f(using) g(the) h(expanded) f
(information:) p Fm 859 1463 a(F) 12 b(r) r(ontier) p
Fs 2 w(\() p Fm(odd) p Fs(\() p Fm(Y) p Fs 21 w(\)\)) 23
b(=) p Fl 23 w(f) p Fs(\() p Fm(Y) p Fs 41 w(=) p Fm
23 w(s) p Fs(\(0\)\)) p Fl 19 w(_) p Fs 19 w(\() p Fm(Y) p
Fs 42 w(=) p Fm 22 w(s) p Fs(\() p Fm(s) p Fs(\() p Fm(X) p
Fs 7 w(\)\)) p Fl 19 w(^) p Fm 19 w(odd) p Fs(\() p Fm(X) p
Fs 7 w(\)\)) p Fl(g) p Fo 523 1713 a(3.2) 95 b(Disequalit) m(y) 31
b(constrain) m(ts) p Fs 523 1879 a(An) 41 b(instrumen) n(tal) e(step) i
(in) f(order) f(to) g(manage) g(negation) h(in) g(a) f(more) h(adv) -5
b(anced) 39 b(w) n(a) n(y) 523 1979 y(is) h(to) h(b) r(e) g(able) f(to)
g(handle) g(disequalities) g(b) r(et) n(w) n(een) h(terms) f(suc) n(h) g
(as) p Fm 40 w(t) p Fk 2847 1991 a(1) p Fl 2928 1979
a(6) p Fs(=) p Fm 45 w(t) p Fk 3068 1991 a(2) p Fs 3105
1979 a(.) g(Prolog) 523 2079 y(implemen) n(tations) 27
b(t) n(ypically) g(include) h(only) g(the) g(built-in) g(predicate) p
Fr 27 w(/==) 42 b(/2) p Fs 27 w(whic) n(h) 27 b(can) 523
2178 y(only) c(w) n(ork) f(with) h(disequalities) g(if) h(b) r(oth) f
(terms) g(are) f(ground) g(and) h(simply) h(succeeds) e(in) i(the) 523
2278 y(presence) d(of) h(free) f(v) -5 b(ariables.) 21
b(A) h(\\constructiv) n(e") e(b) r(eha) n(vior) g(m) n(ust) i(allo) n
(w) f(the) h(\\binding") f(of) 523 2378 y(a) e(v) -5
b(ariable) 19 b(with) h(a) f(disequalit) n(y) -7 b(.) 19
b(On) h(the) g(other) f(hand,) g(the) h(negation) f(of) h(an) f
(equation) p Fm 19 w(X) p Fs 29 w(=) p Fm 523 2477 a(t) p
Fs(\() p 585 2410 67 4 v Fm(Y) p Fs 19 w(\)) 29 b(pro) r(duces) e(the) i
(univ) n(ersal) e(quan) n(ti\014cation) h(of) g(the) h(free) f(v) -5
b(ariables) 27 b(in) i(the) g(equation,) 523 2577 y(unless) 41
b(a) f(more) g(external) g(quan) n(ti\014cation) g(a\013ects) g(them.) i
(The) e(negation) g(of) h(suc) n(h) f(an) 523 2676 y(equation) 25
b(is) p Fl 26 w(8) p 1014 2610 V Fm 25 w(Y) 44 b(X) p
Fl 29 w(6) p Fs(=) p Fm 23 w(t) p Fs(\() p 1354 2610
V Fm(Y) p Fs 19 w(\).) 26 b(As) g(w) n(e) f(explained) g(in) h([12],) f
(the) h(inclusion) g(of) g(disequalities) 523 2776 y(and) 35
b(constrained) f(answ) n(ers) f(has) h(a) h(v) n(ery) e(lo) n(w) i
(cost.) f(It) h(incorp) r(orates) e(negativ) n(e) h(normal) 523
2876 y(form) h(constrain) n(ts) g(instead) g(of) h(bindings) g(and) f
(the) h(decomp) r(osition) f(step) h(can) f(pro) r(duce) 523
2975 y(disjunctions.) 28 b(More) f(precisely) -7 b(,) 26
b(the) i(normal) f(form) g(of) h(constrain) n(ts) e(is:) p
Fh 806 3096 a(^) p Fi 840 3273 a(i) p Fs 898 3175 a(\() p
Fm(X) p Fi 999 3187 a(i) p Fs 1050 3175 a(=) p Fm 23
w(t) p Fi 1168 3187 a(i) p Fs 1195 3175 a(\)) p Fh 806
3316 a(|) p 843 3316 137 10 v 137 w({z) p 1054 3316 V
137 w(}) p Fs 652 3412 a(p) r(ositiv) n(e) h(information) p
Fl 1395 3175 a(^) p Fs 111 w(\() p Fh 1593 3096 a(^) p
Fi 1624 3273 a(j) p Fl 1700 3175 a(8) p 1773 3108 63
4 v Fm 26 w(Z) p Fk 1836 3122 a(1) p Fi 1836 3195 a(j) p
Fs 1901 3175 a(\() p Fm(Y) p Fk 2000 3140 a(1) p Fi 1981
3195 a(j) p Fl 2060 3175 a(6) p Fs(=) p Fm 23 w(s) p
Fk 2187 3140 a(1) p Fi 2187 3195 a(j) p Fs 2224 3175
a(\)) p Fl 19 w(_) p Fm 19 w(:) 14 b(:) g(:) p Fl 18
w(_) p Fh 2538 3096 a(^) p Fi 2573 3274 a(l) p Fl 2644
3175 a(8) p 2718 3108 83 4 v Fm 27 w(Z) p Fi 2775 3187
a(l) 2800 3122 y(n) p Fs 2873 3175 a(\() p Fm(Y) p Fi
2971 3140 a(n) 2953 3195 y(l) p Fl 3040 3175 a(6) p Fs(=) p
Fm 22 w(s) p Fi 3166 3140 a(n) 3166 3195 y(l) p Fs 3211
3175 a(\)\)) p Fh 1593 3327 a(|) p 1630 3327 767 10 v
767 w({z) p 2471 3327 V 767 w(}) p Fs 2060 3423 a(negativ) n(e) 26
b(information) 523 3597 y(where) k(eac) n(h) p Fm 29
w(X) p Fi 1024 3609 a(i) p Fs 1082 3597 a(app) r(ears) f(only) h(in) p
Fm 31 w(X) p Fi 1746 3609 a(i) p Fs 1801 3597 a(=) p
Fm 27 w(t) p Fi 1923 3609 a(i) p Fs 1951 3597 a(,) g(none) p
Fm 30 w(s) p Fi 2244 3567 a(r) 2244 3621 y(k) p Fs 2316
3597 a(is) p Fm 30 w(Y) p Fi 2469 3567 a(r) 2450 3621
y(k) p Fs 2536 3597 a(and) g(the) h(univ) n(ersal) e(quan-) 523
3697 y(ti\014cation) f(could) f(b) r(e) h(empt) n(y) g(\(lea) n(ving) e
(a) h(simple) h(disequalit) n(y\).) 648 3797 y(Using) i(some) h
(normalization) e(rules) i(w) n(e) f(can) h(obtain) g(a) g(normal) f
(form) g(form) n(ula) g(from) 523 3896 y(an) n(y) k(initial) g(form) n
(ula.) g(It) g(is) g(easy) g(to) g(rede\014ne) g(the) h(uni\014cation) f
(algorithm) f(to) h(manage) 523 3996 y(constrained) 27
b(v) -5 b(ariables.) 648 4096 y(This) 30 b(v) n(ery) g(compact) g(w) n
(a) n(y) g(to) h(represen) n(t) e(a) i(normal) f(form) g(w) n(as) g
(\014rstly) h(presen) n(ted) f(in) 523 4195 y([11]) d(and) g(di\013ers)
h(from) f(Chan's) g(represen) n(tation) f(where) h(only) g
(disjunctions) h(are) f(used) p Fk 3288 4165 a(2) p Fs
3325 4195 a(.) 648 4295 y(Therefore,) k(in) j(order) e(to) g(include) i
(disequalities) e(in) n(to) h(a) g(Prolog) e(compiler) h(w) n(e) h
(need) 523 4395 y(to) i(reprogram) d(uni\014cation.) i(It) h(is) g(p) r
(ossible) f(if) h(the) g(Prolog) d(v) n(ersion) h(allo) n(ws) h
(attributed) 523 4494 y(v) -5 b(ariables) 33 b([5]) h(\(e.g.) g(in) h
(Sicstus) f(Prolog,) e(or) h(in) i(Eclipse) e(where) h(they) g(are) g
(called) f(meta-) 523 4594 y(structures\).) 20 b(These) h(v) -5
b(ariables) 20 b(let) h(us) g(k) n(eep) f(asso) r(ciated) f
(information) i(with) g(eac) n(h) f(v) -5 b(ariable) 523
4694 y(during) 27 b(the) g(uni\014cation) g(what) g(can) g(b) r(e) h
(used) f(to) g(dynamically) f(con) n(trol) g(the) h(constrain) n(ts.) p
523 4748 473 4 v Fe 546 4801 a(2) p Fq 606 4833 a(Chan) f(treats) h
(the) e(disjunctions) i(b) n(y) e(means) h(of) g(bac) n(ktrac) n(king.)
g(The) h(main) e(adv) l(an) n(tage) h(of) h(our) 606
4924 y(normal) e(form) h(is) g(that) g(the) f(searc) n(h) h(space) g
(is) g(drastically) h(reduced.) p 90 rotate dyy eop
%%Page: 8 8
8 7 bop Fs 648 448 a(A) n(ttributed) 36 b(v) -5 b(ariables) 34
b(are) g(v) -5 b(ariables) 35 b(with) h(an) f(asso) r(ciated) f
(attribute,) i(whic) n(h) f(is) g(a) 523 548 y(term.) f(W) -7
b(e) 33 b(will) h(asso) r(ciate) e(to) h(eac) n(h) g(v) -5
b(ariable) 33 b(a) g(data) g(structure) g(con) n(taining) f(a) h
(normal) 523 648 y(form) h(constrain) n(t.) f(Basically) -7
b(,) 32 b(a) i(list) g(of) g(list) g(of) g(pairs) g(\(v) -5
b(ariable,) 33 b(term\)) h(is) g(used.) g(They) 523 747
y(b) r(eha) n(v) n(e) 26 b(lik) n(e) g(ordinary) e(v) -5
b(ariables,) 26 b(except) g(that) h(the) g(programmer) d(can) i(supply)
g(co) r(de) h(for) 523 847 y(uni\014cation,) 21 b(prin) n(ting) f
(facilities) h(and) g(memory) f(managemen) n(t.) g(In) h(our) f(case,) g
(the) h(prin) n(ting) 523 946 y(facilit) n(y) 28 b(is) g(used) f(to) h
(sho) n(w) f(constrained) g(answ) n(ers.) f(The) i(main) g(task) f(is) h
(to) g(pro) n(vide) e(a) i(new) 523 1046 y(uni\014cation) g(co) r(de.)
648 1146 y(Once) 35 b(the) i(uni\014cation) f(of) g(a) f(v) -5
b(ariable) p Fm 35 w(X) p Fs 43 w(with) 36 b(a) g(term) p
Fm 36 w(t) p Fs 36 w(is) g(triggered,) e(there) i(are) 523
1246 y(three) 27 b(p) r(ossible) h(cases) e(\(up) i(to) g(comm) n
(utativit) n(y\):) 558 1432 y(1.) 41 b(if) p Fm 30 w(X) p
Fs 36 w(is) 30 b(a) f(free) g(v) -5 b(ariable) 29 b(and) p
Fm 30 w(t) p Fs 29 w(is) h(not) f(a) h(v) -5 b(ariable) 28
b(with) i(a) g(negativ) n(e) e(constrain) n(t,) p Fm
29 w(X) p Fs 664 1532 a(is) g(just) g(b) r(ound) g(to) p
Fm 27 w(t) p Fs(,) 558 1632 y(2.) 41 b(if) p Fm 35 w(X) p
Fs 40 w(is) 34 b(a) g(free) f(v) -5 b(ariable) 33 b(or) g(b) r(ound) i
(to) f(a) f(term) p Fm 34 w(t) p Fj 2294 1602 a(0) p
Fs 2352 1632 a(and) p Fm 34 w(t) p Fs 34 w(is) h(a) f(v) -5
b(ariable) p Fm 33 w(Y) p Fs 53 w(with) 34 b(a) 664 1732
y(negativ) n(e) 28 b(constrain) n(t,) f(w) n(e) h(need) h(to) f(c) n
(hec) n(k) g(if) p Fm 29 w(X) p Fs 35 w(\(or,) g(equiv) -5
b(alen) n(tly) e(,) p Fm 28 w(t) p Fj 2899 1702 a(0) p
Fs 2922 1732 a(\)) 29 b(satis\014es) f(the) 664 1832
y(constrain) n(t) k(asso) r(ciated) f(with) p Fm 34 w(Y) p
Fs 18 w(.) i(A) g(con) n(v) n(enien) n(tly) f(de\014ned) h(predicate) p
Fr 32 w(satisfy) p Fs 30 w(is) 664 1931 y(used) 28 b(for) f(this) h
(purp) r(ose,) 558 2032 y(3.) 41 b(if) p Fm 30 w(X) p
Fs 36 w(is) 29 b(b) r(ound) h(to) f(a) g(term) p Fm 30
w(t) p Fj 1595 2002 a(0) p Fs 1647 2032 a(and) p Fm 29
w(t) p Fs 30 w(is) g(a) g(term) h(\(or) e(a) h(v) -5
b(ariable) 29 b(b) r(ound) g(to) h(a) f(term\),) 664
2131 y(the) f(classical) e(uni\014cation) i(algorithm) e(can) h(b) r(e)
h(used.) 648 2317 y(W) -7 b(e) 35 b(ha) n(v) n(e) g(de\014ned) g(a) g
(predicate) p Fr 35 w(=/=) 42 b(/2) p Fs 35 w([12],) 35
b(used) g(to) g(c) n(hec) n(k) g(disequalities,) g(in) g(a) 523
2417 y(similar) c(w) n(a) n(y) g(to) h(explicit) g(uni\014cation) g(\()
p Fr(=) p Fs(\).) h(Eac) n(h) e(constrain) n(t) g(is) g(a) h
(disjunction) h(of) f(con-) 523 2516 y(junctions) 23
b(of) g(disequalities) f(that) i(are) d(implemen) n(ted) j(as) e(a) h
(list) g(of) f(lists) h(of) g(terms) g(as) p Fm 22 w(T) p
Fk 3241 2528 a(1) p Fm 3278 2516 a(=T) p Fk 3369 2528
a(2) p Fs 523 2616 a(\(that) d(represen) n(ts) e(the) i(disequalit) n
(y) p Fm 19 w(T) p Fk 1704 2628 a(1) p Fl 1764 2616 a(6) p
Fs(=) p Fm 22 w(T) p Fk 1900 2628 a(2) p Fs 1937 2616
a(\).) g(When) g(a) f(univ) n(ersal) f(quan) n(ti\014cation) h(is) g
(used) 523 2715 y(in) 26 b(a) f(disequalit) n(y) g(\(e.g.,) p
Fl 26 w(8) p Fm(Y) 43 b(X) p Fl 30 w(6) p Fs(=) p Fm
22 w(c) p Fs(\() p Fm(Y) p Fs 19 w(\)\)) 26 b(the) h(new) e
(constructor) p Fr 24 w(fA) p Fm(=) p Fs(1) f(is) i(used) g(\(e.g.,) p
Fr 25 w(X) 43 b(/) 523 2815 y(c\(fA\(Y\)\)\)) p Fs(.) 648
2915 y(The) 26 b(\014rst) g(list) h(is) f(used) h(to) f(represen) n(t) f
(disjunctions) i(while) f(the) h(inside) g(list) f(represen) n(ts) 523
3015 y(the) i(conjunction) g(of) f(disequalities.) g(W) -7
b(e) 28 b(fo) r(cus) g(on) f(the) h(v) -5 b(ariable) p
Fm 27 w(X) p Fs 7 w(.) p Fq 687 3190 a(SUBGO) n(AL) 625
b(A) -6 b(TTRIBUTE) 200 b(CONSTRAINT) p 675 3221 2578
4 v 675 3237 V Fd 687 3393 a(not) p 809 3393 24 4 v 29
w(member) 41 b(\(X,[1,2,3]\)) p Fq 154 w([[) p Fc(X) o(=) p
Fq(1) p Fc(;) 15 b(X) o(=) p Fq(2) p Fc(;) g(X) o(=) p
Fq(3]]) p Fc 96 w(X) p Fb 28 w(6) p Fq(=) 21 b(1) p Fb
17 w(^) p Fc 17 w(X) p Fb 28 w(6) p Fq(=) g(2) p Fb 18
w(^) p Fc 17 w(X) p Fb 27 w(6) p Fq(=) h(3) p Fd 687
3484 a(member) 41 b(\(X,[1,2,3]\),) h(X=/=2) p Fq 24
w([[) p Fc(X) o(=) p Fq(1) p Fc(;) 15 b(X) o(=) p Fq(3]]) p
Fc 270 w(X) p Fb 28 w(6) p Fq(=) 21 b(1) p Fb 17 w(^) p
Fc 17 w(X) p Fb 28 w(6) p Fq(=) g(3) p Fd 687 3575 a(member) 41
b(\(X,[1]\),) g(X=/=1) 181 b(fail) p Fc 510 w(f) 8 b(al) q(se) p
Fd 687 3667 a(X) 40 b(=/=) f(4) p Fq 730 w([[) p Fc(X) o(=) p
Fq(4]]) p Fc 444 w(X) p Fb 28 w(6) p Fq(=) 21 b(4) p
Fd 687 3758 a(X) 40 b(=/=) f(4;) h(X=/=5) p Fq 456 w([[) p
Fc(X) o(=) p Fq(4]) p Fc(;) p Fq 16 w([) p Fc(X) o(=) p
Fq(5]]) p Fc 227 w(X) p Fb 28 w(6) p Fq(=) 21 b(4) p
Fb 17 w(_) p Fc 17 w(X) p Fb 28 w(6) p Fq(=) g(5) p Fd
687 3849 a(X) 40 b(=/=) f(5;) h(\(X=/=6,) h(X=/=Y\)) p
Fq 103 w([[) p Fc(X) o(=) p Fq(4]) p Fc(;) p Fq 16 w([) p
Fc(X) o(=) p Fq(6) p Fc(;) 15 b(X) o(=) t(Y) p Fq 18
w(]]) p Fc 24 w(X) p Fb 28 w(6) p Fq(=) 21 b(4) p Fb
17 w(_) p Fq 17 w(\() p Fc(X) p Fb 28 w(6) p Fq(=) g(6) p
Fb 17 w(^) p Fc 18 w(X) p Fb 27 w(6) p Fq(=) p Fc 21
w(Y) p Fq 17 w(\)) p Fd 687 3941 a(forall) 41 b(\(Y,) f(X) f(=/=) h(s) f
(\(Y\)\)) i(\)) p Fq 23 w([[) p Fc(X) o(=s) p Fq(\() p
Fc(f) 8 b(A) p Fq(\() p Fc(Y) p Fq 18 w(\)]]) p Fb 190
w(8) p Fc(Y) t(:X) p Fb 27 w(6) p Fq(=) p Fc 22 w(Y) p
Fo 523 4187 a(3.3) 95 b(Optimization) 523 4357 y(Compact) 31
b(information) p Fs(.) 25 b(W) -7 b(e) 28 b(ha) n(v) n(e) e(decided) i
(to) f(represen) n(t) f(negativ) n(e) g(information) h(in) 523
4456 y(a) k(compact) g(w) n(a) n(y) f(pro) n(viding) f(less) i
(solutions) g(from) g(the) g(negation) g(of) p 2769 4390
44 4 v Fm 31 w(I) p Fs 7 w(.) g(The) h(adv) -5 b(an) n(tage) 523
4556 y(of) 32 b(this) g(is) f(that) h(if) g(w) n(e) f(ask) g(for) g
(all) g(solutions) g(using) h(bac) n(ktrac) n(king) d(w) n(e) i(are) g
(cutting) h(the) 523 4656 y(searc) n(h) 22 b(tree) g(b) n(y) h
(o\013ering) f(all) h(the) h(solutions) e(together) g(in) i(one) f
(only) f(answ) n(er.) g(F) -7 b(or) 22 b(example) 523
4755 y(w) n(e) 27 b(o\013er) g(a) g(simple) h(answ) n(er) p
Fr 523 4924 a(?-) 43 b(p\(X,Y,Z,W\).) p 90 rotate dyy
eop
%%Page: 9 9
9 8 bop Fr 523 548 a([[X/0,) 41 b(Y/s\(Z\)],) f([X/Y],) i([X/Z],) f
([X/W],) g([X/s\(0\)],) f([Z/0]]) h(?) i(;) 523 747 y(no) p
Fs 648 914 a(that) 26 b(is) g(equiv) -5 b(alen) n(t) 25
b(to) h(\() p Fm(X) p Fl 30 w(6) p Fs(=) d(0) p Fl 14
w(^) p Fm 16 w(Y) p Fl 42 w(6) p Fs(=) p Fm 22 w(s) p
Fs(\() p Fm(Z) p Fs 6 w(\)\)) p Fl 16 w(_) p Fm 15 w(X) p
Fl 30 w(6) p Fs(=) p Fm 22 w(Y) p Fl 34 w(_) p Fm 16
w(X) p Fl 29 w(6) p Fs(=) p Fm 23 w(Z) p Fl 21 w(_) p
Fm 15 w(X) p Fl 30 w(6) p Fs(=) p Fm 22 w(W) p Fl 27
w(_) p Fm 16 w(X) p Fl 29 w(6) p Fs(=) p Fm 523 1013
a(s) p Fs(\(0\)) p Fl 18 w(_) p Fm 19 w(Z) p Fl 29 w(6) p
Fs(=) g(0) k(instead) g(of) h(returning) f(six) g(answ) n(ers:) p
Fr 523 1180 a(?-) 43 b(p\(X,Y,Z,W\).) 523 1380 y([X/0,) f(Y/s\(Z\)]) e
(?) j(;) 523 1579 y([X/Y]) f(?) h(;) 523 1778 y([X/Z]) f(?) h(;) 523
1977 y([X/W]) f(?) h(;) 523 2177 y([X/s\(0\)]) d(?) j(;) 523
2376 y([Z/0]) f(?) h(;) 523 2575 y(no) p Fo 648 2742
a(Pruning) d(subgoals) p Fs(.) 35 b(W) -7 b(e) 35 b(ha) n(v) n(e) g
(cut) g(the) h(searc) n(h) e(tree) h(of) h(the) f(generation) f(of) i
(the) 523 2841 y(fron) n(tiers) 24 b(with) i(a) f(double) g(action) g
(o) n(v) n(er) e(the) j(ground) e(subgoals:) g(remo) n(ving) g(so) r
(on) h(the) g(sub-) 523 2941 y(goals) j(whose) h(failure) g(w) n(e) h
(are) e(able) h(to) h(detect,) g(and) g(simplifying) f(the) h(subgoals)
e(that) i(w) n(e) 523 3041 y(can) d(reduce) g(to) h(true.) f(Supp) r
(ose) h(w) n(e) f(ha) n(v) n(e) g(a) g(predicate) p Fm
27 w(p=) p Fs(3) f(de\014ned) i(as) p Fr 523 3207 a(p\(X,Y,Z\):-) 872
3307 y(greater\(X,Y\),) 872 3407 y(q\(X,Y,Z\),) 872 3506
y(r\(Z\).) p Fs 523 3673 a(W) -7 b(e) 43 b(can) f(imagine) g(that) p
Fm 43 w(q) s(=) p Fs(3) g(and) p Fm 42 w(r) r(=) p Fs(1) h(are) e
(predicates) h(de\014ned) h(b) n(y) f(sev) n(eral) f(clauses) 523
3772 y(with) 35 b(a) f(complicated) g(implemen) n(tation.) h(If) f(w) n
(e) g(w) n(ould) g(lik) n(e) g(to) h(obtain) f(the) h(fron) n(tier) e
(of) p Fm 523 3872 a(p) p Fs(\() p Fm(s) p Fs(\(0\)) p
Fm(;) 14 b(s) p Fs(\() p Fm(s) p Fs(\(0\)\)\)) 28 b(to) g(negate) f
(this) h(goal,) e(w) n(e) h(w) n(ould) g(get:) p Fm 1454
4072 a(F) 12 b(r) r(ontier) p Fs 2 w(\() p Fm(p) p Fs(\() p
Fm(s) p Fs(\(0\)) p Fm(;) i(s) p Fs(\() p Fm(s) p Fs(\(0\)\)\)\)) p
Fl 25 w(\021) p Fm 835 4223 a(X) p Fs 30 w(=) p Fm 22
w(s) p Fs(\(0\)) p Fl 19 w(^) p Fm 19 w(Y) p Fs 41 w(=) p
Fm 23 w(s) p Fs(\() p Fm(s) p Fs(\(0\)\)) p Fl 19 w(^) p
Fm 19 w(g) s(r) r(eater) p Fs 2 w(\() p Fm(X) r(;) g(Y) p
Fs 19 w(\)) p Fl 18 w(^) p Fm 19 w(q) p Fs 3 w(\() p
Fm(X) r(;) g(Y) 5 b(;) 14 b(Z) p Fs 6 w(\)) p Fl 18 w(^) p
Fm 19 w(r) p Fs 2 w(\() p Fm(Z) p Fs 6 w(\)) p Fl 24
w(\021) p Fm 1075 4373 a(g) s(r) r(eater) p Fs 2 w(\() p
Fm(s) p Fs(\(0\)) p Fm(;) g(s) p Fs(\() p Fm(s) p Fs(\(0\)\)) p
Fl 20 w(^) p Fm 19 w(q) p Fs 3 w(\() p Fm(s) p Fs(\(0\)) p
Fm(;) g(s) p Fs(\() p Fm(s) p Fs(\(0\)) p Fm(;) g(Z) p
Fs 6 w(\)) p Fl 18 w(^) p Fm 19 w(r) p Fs 2 w(\() p Fm(Z) p
Fs 6 w(\)) p Fl 24 w(\021) p Fm 1369 4524 a(f) 9 b(ail) p
Fl 19 w(^) p Fm 19 w(q) p Fs 3 w(\() p Fm(s) p Fs(\(0\)) p
Fm(;) 14 b(s) p Fs(\() p Fm(s) p Fs(\(0\)) p Fm(;) g(Z) p
Fs 6 w(\)) p Fl 18 w(^) p Fm 19 w(r) p Fs 2 w(\() p Fm(Z) p
Fs 6 w(\)) p Fl 24 w(\021) p Fm 1890 4675 a(f) 9 b(ail) p
Fs 648 4825 a(No) n(w) 26 b(w) n(e) h(w) n(ould) g(ha) n(v) n(e) f(to) h
(expand) g(the) h(co) r(de) f(of) g(the) h(subgoals) e(of) h(the) h
(fron) n(tier) e(to) h(all) 523 4924 y(the) h(com) n(bination) e
(\(disjunction\)) j(of) e(the) h(co) r(de) f(of) g(their) h(clauses) e
(and) h(the) h(result) f(will) h(b) r(e) p 90 rotate
dyy eop
%%Page: 10 10
10 9 bop Fs 523 448 a(a) 26 b(v) n(ery) f(complicated) h(and) g(long) g
(to) g(c) n(hec) n(k) g(fron) n(tier.) f(Ho) n(w) n(ev) n(er) g(w) n(e)
h(optimize) g(the) h(pro) r(cess) 523 548 y(ev) -5 b(aluating) 21
b(the) i(ground) d(terms.) i(In) g(this) g(case) p Fm
21 w(g) s(r) r(eater) p Fs 2 w(\() p Fm(s) p Fs(\(0\)) p
Fm(;) 14 b(s) p Fs(\() p Fm(s) p Fs(\(0\)\)) 23 b(fails) f(and) g
(therefore) 523 648 y(it) d(is) f(no) h(necessary) e(to) h(con) n(tin) n
(ue) g(with) h(the) g(generation) e(of) i(the) g(fron) n(tier) e(b) r
(ecause) h(the) h(result) 523 747 y(is) 28 b(reduced) f(to) g(fail.) h
(The) g(opp) r(osite) f(example) g(means) g(a) g(simpli\014cation:) p
Fm 1454 951 a(F) 12 b(r) r(ontier) p Fs 2 w(\() p Fm(p) p
Fs(\() p Fm(s) p Fs(\() p Fm(s) p Fs(\(0\)\)) p Fm(;) i(s) p
Fs(\(0\)\)\)) p Fl 25 w(\021) p Fm 835 1107 a(X) p Fs
30 w(=) p Fm 22 w(s) p Fs(\() p Fm(s) p Fs(\(0\)\)) p
Fl 19 w(^) p Fm 19 w(Y) p Fs 42 w(=) p Fm 23 w(s) p Fs(\(0\)) p
Fl 18 w(^) p Fm 19 w(g) s(r) r(eater) p Fs 2 w(\() p
Fm(X) r(;) g(Y) p Fs 19 w(\)) p Fl 18 w(^) p Fm 19 w(q) p
Fs 3 w(\() p Fm(X) r(;) g(Y) 5 b(;) 14 b(Z) p Fs 6 w(\)) p
Fl 18 w(^) p Fm 19 w(r) p Fs 2 w(\() p Fm(Z) p Fs 6 w(\)) p
Fl 24 w(\021) p Fm 1059 1263 a(g) s(r) r(eater) p Fs
2 w(\() p Fm(s) p Fs(\() p Fm(s) p Fs(\(0\)\)) p Fm(;) g(s) p
Fs(\(0\)) p Fl 20 w(^) p Fm 18 w(q) p Fs 3 w(\() p Fm(s) p
Fs(\() p Fm(s) p Fs(\(0\)\)) p Fm(;) g(s) p Fs(\(0\)) p
Fm(;) g(Z) p Fs 6 w(\)) p Fl 19 w(^) p Fm 19 w(r) p Fs
2 w(\() p Fm(Z) p Fs 6 w(\)) p Fl 24 w(\021) p Fm 1349
1420 a(tr) r(ue) p Fl 19 w(^) p Fm 18 w(q) p Fs 3 w(\() p
Fm(s) p Fs(\() p Fm(s) p Fs(\(0\)\)) p Fm(;) g(s) p Fs(\(0\)) p
Fm(;) g(Z) p Fs 6 w(\)) p Fl 19 w(^) p Fm 19 w(r) p Fs
2 w(\() p Fm(Z) p Fs 6 w(\)) p Fl 24 w(\021) p Fm 1517
1576 a(q) p Fs 3 w(\() p Fm(s) p Fs(\() p Fm(s) p Fs(\(0\)\)) p
Fm(;) g(s) p Fs(\(0\)) p Fm(;) g(Z) p Fs 6 w(\)) p Fl
19 w(^) p Fm 19 w(r) p Fs 2 w(\() p Fm(Z) p Fs 6 w(\)) p
Fo 648 1730 a(Con) m(train) m(ts) 29 b(simpli\014cation) p
Fs(.) 22 b(Other) j(w) n(a) n(y) e(of) i(optimization) g(is) g(the) g
(simpli\014cation) 523 1830 y(of) i(the) h(constrain) n(ts.) e(During) h
(all) h(the) f(pro) r(cess) g(of) g(negating) f(a) h(goal) f(the) i(v)
-5 b(ariables) 26 b(of) i(the) 523 1929 y(fron) n(tier) g(are) g
(constrained.) g(Sometimes) h(the) g(constrainsts) e(are) h(satisfy) n
(able) g(and) h(w) n(e) f(can) 523 2029 y(eliminate) k(them,) h(other) e
(times) h(the) h(constrain) n(ts) d(can) i(b) r(e) g(reduced) g(to) g
(fail) g(and) g(w) n(e) f(can) 523 2128 y(stop) 24 b(the) h(ev) -5
b(aluation) 24 b(of) g(the) h(negation) e(b) r(ecause) h(the) h(result)
f(is) g(true) g(due) h(to) f(a) g(constrain) n(t) 523
2228 y(fails.) 648 2329 y(W) -7 b(e) 34 b(in) n(tend) h(to) e(reduce) h
(a) g(constrain) n(t) p Fm 33 w(F) p Fs 46 w(to) g(success) f(or) g
(failure.) h(Constrain) n(ts) f(that) 523 2428 y(are) 27
b(managed) f(are) h(form) n(ulas) f(of) i(the) g(form:) p
Fm 1499 2629 a(F) p Fl 35 w(\021) p Fh 1674 2551 a(_) p
Fi 1709 2727 a(i) p Fh 1781 2551 a(^) p Fi 1811 2727
a(j) p Fl 1887 2629 a(8) p 1960 2563 63 4 v Fm 26 w(Z) p
Fi 2023 2577 a(i) 2023 2650 y(j) p Fs 2086 2629 a(\() p
Fm(Y) p Fi 2185 2595 a(i) 2166 2650 y(j) p Fl 2235 2629
a(6) p Fs(=) p Fm 23 w(s) p Fi 2362 2595 a(i) 2362 2650
y(j) p Fs 2397 2629 a(\)) 523 2898 y(W) -7 b(e) 38 b(are) f(going) f
(to) i(transform) e(this) i(form) n(ula.) f(Firstly) h(w) n(e) f(will) h
(obtained) f(the) h(Prenex) 523 2998 y(form) 32 b([1]) g(extracting) f
(the) i(univ) n(ersal) e(v) -5 b(ariables) 31 b(with) i(di\013eren) n
(t) f(names) g(to) g(the) h(head) f(of) 523 3098 y(the) c(form) n(ula) f
(aplying) g(logic) f(rules:) p Fm 1552 3294 a(F) p Fl
35 w(\021) c(8) p 1774 3249 48 4 v Fm(x) p Fh 1835 3216
a(_) p Fi 1869 3392 a(i) p Fh 1941 3216 a(^) p Fi 1971
3392 a(j) p Fs 2033 3294 a(\() p Fm(Y) p Fi 2132 3260
a(i) 2113 3315 y(j) p Fl 2183 3294 a(6) p Fs(=) p Fm
22 w(s) p Fi 2309 3260 a(i) 2309 3315 y(j) p Fs 2344
3294 a(\)) 523 3563 y(Using) 27 b(the) h(distributiv) n(e) g(prop) r
(ert) n(y:) p Fm 1542 3760 a(F) p Fl 35 w(\021) 23 b(8) p
1765 3714 V Fm(x) p Fh 1825 3681 a(^) p Fi 1853 3860
a(k) p Fh 1931 3681 a(_) p Fi 1967 3860 a(l) p Fs 2023
3760 a(\() p Fm(Y) p Fi 2122 3726 a(k) 2103 3781 y(l) p
Fl 2186 3760 a(6) p Fs(=) p Fm 23 w(s) p Fi 2313 3726
a(k) 2313 3781 y(l) p Fs 2354 3760 a(\)) 523 4020 y(The) 35
b(form) n(ula) f(can) g(b) r(e) h(separated) f(in) n(to) g(subform) n
(ulas) g(that) h(are) e(simple) i(disjuctions) g(of) 523
4119 y(disequalities) 27 b(:) p Fm 1265 4234 a(F) p Fl
35 w(\021) p Fh 1441 4155 a(^) p Fi 1469 4334 a(k) p
Fl 1547 4234 a(8) p 1594 4189 V Fm(x) p Fh 1654 4155
a(_) p Fi 1690 4334 a(l) p Fs 1747 4234 a(\() p Fm(Y) p
Fi 1846 4200 a(k) 1827 4255 y(l) p Fl 1909 4234 a(6) p
Fs(=) p Fm 23 w(s) p Fi 2036 4200 a(k) 2036 4255 y(l) p
Fs 2077 4234 a(\)) p Fl 23 w(\021) p Fm 23 w(F) p Fk
2273 4246 a(1) p Fl 2329 4234 a(^) p Fm 19 w(:::) p Fl
18 w(^) p Fm 19 w(F) p Fi 2617 4246 a(n) p Fs 523 4462
a(No) n(w) j(w) n(e) g(ha) n(v) n(e) f(to) i(ev) -5 b(aluate) 30
b(eac) n(h) g(single) g(form) n(ula) p Fm 29 w(F) p Fi
2251 4474 a(k) p Fs 2292 4462 a(.) h(The) f(\014rst) h(step) f(will) h
(b) r(e) g(to) f(sub-) 523 4561 y(stitute) 37 b(de) g(existencial) f
(quan) n(ti\014ed) g(v) -5 b(ariables) 35 b(\(those) i(that) f(do) g
(not) h(b) r(elong) f(to) p 3189 4515 V Fm 36 w(x) p
Fs 1 w(\)) h(for) 523 4661 y(Sk) n(olem) 27 b(constan) n(ts) g(that) g
(will) h(k) n(eep) f(the) h(equiv) -5 b(alence) 28 b(without) g(losing)
e(generalit) n(y:) p Fm 1188 4858 a(F) p Fi 1241 4870
a(k) p Fl 1305 4858 a(\021) d(8) p 1440 4812 V Fm(x) p
Fh 1500 4779 a(_) p Fi 1536 4958 a(l) p Fs 1593 4858
a(\() p Fm(Y) p Fi 1691 4823 a(k) 1673 4878 y(l) p Fl
1755 4858 a(6) p Fs(=) p Fm 23 w(s) p Fi 1882 4823 a(k) 1882
4878 y(l) p Fs 1923 4858 a(\)) p Fl 23 w(\021) g(8) p
2113 4812 V Fm(x) p Fh 2173 4779 a(_) p Fi 2209 4958
a(l) p Fs 2265 4858 a(\() p Fm(Y) p Fi 2364 4823 a(k) 2345
4878 y(S) s(k) q(l) p Fl 2475 4858 a(6) p Fs(=) p Fm
23 w(s) p Fi 2602 4823 a(k) 2602 4878 y(S) s(k) q(l) p
Fs 2708 4858 a(\)) p 90 rotate dyy eop
%%Page: 11 11
11 10 bop Fs 523 448 a(Then) 28 b(w) n(e) f(transform) f(it) j(in) n
(to:) p Fm 1263 650 a(F) p Fi 1316 662 a(k) p Fl 1380
650 a(\021) 23 b(:9) p 1597 604 48 4 v Fm 28 w(x) p Fl
1 w(:) p Fs(\() p Fh 1732 571 a(_) p Fi 1768 750 a(l) p
Fs 1824 650 a(\() p Fm(Y) p Fi 1923 616 a(k) 1904 670
y(S) s(k) q(l) p Fl 2034 650 a(6) p Fs(=) p Fm 23 w(s) p
Fi 2161 616 a(k) 2161 670 y(S) s(k) q(l) p Fs 2267 650
a(\)\)) p Fl 23 w(\021) g(:) p Fm(F) 12 b(e) p Fi 2601
662 a(K) p Fs 523 926 a(The) 31 b(meaning) f(of) p Fm
31 w(F) p Fi 1183 938 a(k) p Fs 1255 926 a(is) g(the) h(negation) f(of)
h(the) g(meaning) f(of) p Fm 30 w(F) 12 b(e) p Fi 2607
938 a(k) p Fs 2648 926 a(.) 31 b(Then) f(the) h(next) g(goal) 523
1025 y(is) d(ev) -5 b(aluating) p Fm 26 w(F) 12 b(e) p
Fi 1109 1037 a(k) p Fs 1150 1025 a(:) p Fm 1432 1165
a(F) g(e) p Fi 1536 1177 a(k) p Fl 1600 1165 a(\021) 23
b(9) p 1761 1120 V Fm 27 w(x) p Fl 1 w(:) p Fs(\() p
Fh 1896 1086 a(_) p Fi 1932 1265 a(l) p Fs 1989 1165
a(\() p Fm(Y) p Fi 2088 1131 a(k) 2069 1186 y(S) s(k) q(l) p
Fl 2198 1165 a(6) p Fs(=) p Fm 23 w(s) p Fi 2325 1131
a(k) 2325 1186 y(S) s(k) q(l) p Fs 2431 1165 a(\)\)) 523
1417 y(Resolving) 28 b(the) h(negations) e(w) n(e) h(obtain) h(the) g
(result) f(through) g(simple) h(uni\014cations) f(of) h(the) 523
1517 y(v) -5 b(ariables) 26 b(of) p 962 1471 V Fm 28
w(x) p Fs(:) p Fm 1045 1728 a(F) 12 b(e) p Fi 1149 1740
a(k) p Fl 1212 1728 a(\021) 23 b(9) p 1373 1682 V Fm
27 w(x) p Fh 1435 1649 a(^) p Fl 1541 1728 a(:) p Fs(\() p
Fm(Y) p Fi 1695 1694 a(k) 1676 1748 y(S) s(k) q(l) p
Fl 1806 1728 a(6) p Fs(=) p Fm 22 w(s) p Fi 1932 1694
a(k) 1932 1748 y(S) s(k) q(l) p Fs 2039 1728 a(\)) p
Fl 23 w(\021) f(9) p 2255 1682 V Fm 28 w(x) p Fh 2317
1649 a(^) p Fs 2409 1728 a(\() p Fm(Y) p Fi 2508 1694
a(k) 2489 1748 y(S) s(k) q(l) p Fs 2618 1728 a(=) p Fm
23 w(s) p Fi 2745 1694 a(k) 2745 1748 y(S) s(k) q(l) p
Fs 2851 1728 a(\)) 523 1941 y(Therefore) j(w) n(e) g(get) g(the) h
(truth) h(v) -5 b(alue) 25 b(of) h(the) p Fm 26 w(F) p
Fi 2010 1953 a(k) p Fs 2077 1941 a(from) f(the) h(negation) f(of) h
(the) g(v) -5 b(alue) 26 b(of) p Fm(F) 12 b(e) p Fi 3365
1953 a(k) p Fs 523 2041 a(and) 34 b(\014nally) h(the) g(v) -5
b(alue) 34 b(of) p Fm 34 w(F) p Fs 47 w(is) g(the) h(conjunction) g(of)
f(the) h(v) -5 b(alues) 35 b(of) f(all) g(the) p Fm 35
w(F) p Fi 3151 2053 a(k) p Fs 3192 2041 a(.) h(If) p
Fm 35 w(F) p Fs 523 2141 a(successes) 29 b(then) h(w) n(e) f(remo) n(v)
n(e) f(the) i(constrain) n(t) f(b) r(ecause) g(is) g(redundan) n(t) h
(and) f(w) n(e) h(con) n(tin) n(ue) 523 2240 y(with) e(the) g(negation)
f(pro) r(cess.) f(If) i(it) g(fails) g(then) g(the) g(negation) f
(directly) g(successes.) p Fo 523 2536 a(3.4) 95 b(Examples) p
Fs 523 2750 a(The) 23 b(in) n(teresting) g(side) g(of) g(this) g
(implemen) n(tation) g(is) g(that) h(it) f(returns) g(constructiv) n(e)
f(results) 523 2849 y(from) 27 b(a) g(negativ) n(e) g(question.) g(W) -7
b(e) 28 b(can) f(see) h(it) g(in) g(a) f(simple) g(example) h(with) p
Fm 28 w(bool) r(e=) p Fs(1.) p Fr 648 3091 a(boole\(0\).) 648
3191 y(boole\(1\).) 2050 2945 y(?-) 42 b(cneg\(boole\(X\)\).) 2050
3145 y([[X/1,X/0]]) d(?) k(;) 2050 3344 y(no) p Fs 648
3461 a(But) 25 b(the) h(remark) -5 b(able) 24 b(examples) g(are) h
(those) g(that) g(ha) n(v) n(e) f(an) h(in\014nite) h(n) n(um) n(b) r
(er) g(of) f(solu-) 523 3561 y(tions) i(b) r(ecause) h(they) f(are) g
(equally) g(solv) n(ed.) p Fr 648 4200 a(positive\(0\).) 648
4300 y(positive\(s\(X\)\):) o(-) 996 4399 y(positive\(X\).) 2050
3652 y(?-) 42 b(cneg\(positive\(X\)\)) o(.) 2050 3852
y([[X/s\(fA\(_A\)\),X) o(/0]) o(]) 37 b(?) 43 b(;) 2050
4051 y(X) g(=) g(s\(_A\),) 2050 4150 y([[_A/s\(fA\(_B\)\),) o(_A/) o
(0]) o(]) 37 b(?) 44 b(;) 2050 4350 y(X) f(=) g(s\(s\(_A\)\),) 2050
4449 y([[_A/s\(fA\(_B\)\),) o(_A/) o(0]) o(]) 37 b(?) 44
b(;) 2050 4649 y(X) f(=) g(s\(s\(s\(_A\)\)\),) 2050 4748
y([[_A/s\(fA\(_B\)\),) o(_A/) o(0]) o(]) 37 b(?) 2050
4947 y(yes) p 90 rotate dyy eop
%%Page: 12 12
12 11 bop Fr 648 1220 a(number\(0\).) 648 1320 y(number\(s\(X\)\):-) 996
1419 y(number\(X\).) 648 1618 y(greater\(s\(X\),0\)) o(:-) 996
1718 y(number\(X\).) 648 1818 y(greater\(s\(X\),s\() o(Y\)\)) o(:-) 996
1917 y(greater\(X,Y\).) 2050 423 y(?-) 42 b(cneg\(greater\(X,Y\)) o
(\).) 2050 622 y([[Y/0,Y/s\(fA\(_A) o(\)\)]) o(]) 37
b(?) 43 b(;) 2050 821 y([[Y/s\(fA\(_A\)\)]]) o(,) 2050
921 y([[X/s\(fA\(_B\)\)]]) 37 b(?) 43 b(;) 2050 1120
y(X) g(=) g(s\(_A\),) 2050 1220 y(Y) g(=) g(0,) 2050
1320 y([[_A/s\(fA\(_B\)\),) o(_A/) o(0]) o(]) 37 b(?) 44
b(;) 2050 1519 y(X) f(=) g(s\(s\(_A\)\),) 2050 1618 y(Y) g(=) g(0,) 2050
1718 y([[_A/s\(fA\(_B\)\),) o(_A/) o(0]) o(]) 37 b(?) 44
b(;) 2050 1917 y(X) f(=) g(s\(s\(s\(_A\)\)\),) 2050 2017
y(Y) g(=) g(0,) 2050 2117 y([[_A/s\(fA\(_B\)\),) o(_A/) o(0]) o(]) 37
b(?) 44 b(;) 2050 2316 y(X) f(=) g(s\(s\(s\(s\(_A\)\)\)\),) 2050
2415 y(Y) g(=) g(0,) 2050 2515 y([[_A/s\(fA\(_B\)\),) o(_A/) o(0]) o(])
37 b(?) 2050 2714 y(yes) p Fo 523 2946 a(3.5) 95 b(Exp) s(erimen) m
(tal) 30 b(results) p Fs 523 3110 a(W) -7 b(e) 19 b(ha) n(v) n(e) e
(\014rst) i(measured) e(the) i(execution) g(times) f(in) h
(milliseconds) f(for) g(the) h(previous) f(exam-) 523
3209 y(ples) 24 b(when) g(using) g(negation) g(as) f(failure) h(\() p
Fm(naf) 9 b(=) p Fs(1\)) 23 b(and) h(constructiv) n(e) f(negation) g
(\() p Fm(cneg) s(=) p Fs(1\).) 523 3309 y(A) 28 b(`-') f(in) h(a) f
(cell) h(means) f(that) h(the) g(negation) e(as) h(failure) g(is) h
(not) f(applicable.) g(All) h(measure-) 523 3409 y(men) n(ts) 21
b(w) n(ere) f(made) h(using) g(Ciao) f(Prolog) p Fk 1796
3379 a(3) p Fs 1852 3409 a(1.5) g(on) h(a) f(P) n(en) n(tium) h(I) r(I)
h(at) e(350) g(Mhz.) h(The) h(results) 523 3508 y(are) f(sho) n(wn) h
(in) g(T) -7 b(able) 22 b(1.) g(W) -7 b(e) 23 b(ha) n(v) n(e) e(added) h
(a) g(\014rst) g(column) g(with) h(the) g(run) n(time) f(of) g(the) h
(ev) -5 b(al-) 523 3608 y(uation) 32 b(of) f(the) i(goal) d(that) i(is)
g(negated) g(in) g(the) g(other) f(colums) h(and) g(a) f(last) h
(column) f(with) 523 3708 y(the) e(ratio) f(that) g(measures) g(the) h
(sp) r(eedup) g(of) f(the) p Fn 29 w(naf) p Fs(tec) n(hnique) h(w.r.t.)
g(the) g(constructiv) n(e) 523 3807 y(negation.) 648
3907 y(Using) p Fo 34 w(naf) p Fs 34 w(instead) 34 b(of) p
Fo 34 w(cneg) p Fs 35 w(results) f(in) i(sligh) n(t) e(sp) r(eed-ups) h
(near) g(1.06) e(in) j(a) n(v) n(erage) 523 4006 y(for) h(ground) g
(calls) g(with) i(few) f(recursiv) n(e) e(calls.) h(So) h(the) g(p) r
(ossible) f(slo) n(w-do) n(wn) f(from) i(the) 523 4106
y(constructiv) n(e) j(negation) g(is) h(not) g(so) f(high) h(as) f(w) n
(e) g(could) h(exp) r(ect) g(for) g(these) g(examples.) 523
4206 y(F) -7 b(uthermore) 34 b(the) i(results) e(are) g(rather) g
(similar.) g(But) h(the) g(same) g(goals) e(with) i(data) g(that) 523
4305 y(in) n(v) n(olv) n(es) f(man) n(y) h(recursiv) n(e) g(calls) g
(giv) n(e) g(us) g(sp) r(eed-ups) h(near) f(14.69) f(in) i(a) n(v) n
(erage) d(and) j(in-) 523 4405 y(creasing) g(exp) r(onen) n(tially) g
(with) i(the) g(n) n(um) n(b) r(er) e(of) i(recursiv) n(e) d(calls.) i
(Additionally) -7 b(,) 37 b(there) 523 4505 y(are,) 32
b(of) g(course,) f(man) n(y) h(goals) f(that) i(cannot) f(b) r(e) g
(negated) g(using) g(the) p Fn 33 w(naf) p Fs(tec) n(hnique) h(and) 523
4604 y(that) 28 b(are) f(resolv) n(ed) e(using) j(constructiv) n(e) e
(negation.) p 523 4656 473 4 v Fe 546 4710 a(3) p Fq
606 4742 a(The) 20 b(negation) h(system) e(is) i(co) r(ded) f(as) h(a) f
(library) g(mo) r(dule) g(\(\\pac) n(k) l(age") h([4]\),) g(whic) n(h) f
(includes) g(the) 606 4833 y(corresp) r(onding) 33 b(syn) n(tactic) e
(and) g(seman) n(tic) h(extensions) g(\(i.e.) g(Ciao's) i(attributed) d
(v) l(ariables\).) 606 4924 y(Suc) n(h) 25 b(extensions) h(apply) f(lo)
r(cally) i(within) f(eac) n(h) g(mo) r(dule) f(whic) n(h) g(uses) h
(this) g(negation) h(library) -6 b(.) p 90 rotate dyy
eop
%%Page: 13 13
13 12 bop 523 369 2766 4 v 523 385 V 521 477 4 92 v 538
477 V Fp 552 449 a(goals) p 1505 477 V 853 w(Goal) p
1837 477 V 127 w(naf\(Goal\)) p 2362 477 V 183 w(cneg\(Goal\)) p
2936 477 V 153 w(ratio) p 3270 477 V 3287 477 V 523 480
2766 4 v 521 571 4 92 v 538 571 V Fq 552 544 a(b) r(o) r(ole\(1\)) p
1505 571 V 846 w(2049) p 1836 571 V 372 w(2099) p 2360
571 V 423 w(2069) p 2935 571 V 198 w(0.98) p 3268 571
V 3287 571 V 523 575 2766 4 v 521 666 4 92 v 538 666
V 552 638 a(b) r(o) r(ole\(8\)) p 1505 666 V 846 w(2070) p
1836 666 V 372 w(2170) p 2360 666 V 423 w(2590) p 2935
666 V 198 w(1.19) p 3268 666 V 3287 666 V 523 669 2766
4 v 521 760 4 92 v 538 760 V 552 733 a(p) r(ositiv) n
(e\(s\(s\(s\(s\(s\(s\(0\)\)\)\)\)\)) p 1505 760 V 256
w(2079) p 1836 760 V 372 w(1600) p 2360 760 V 423 w(2159) p
2935 760 V 237 w(1.3) p 3269 760 V 3287 760 V 523 764
2766 4 v 521 855 4 92 v 538 855 V 552 828 a(p) r(ositiv) n
(e\(s\(s\(s\(s\(s\(0\)\)\)\)\)\)) p 1505 855 V 316 w(2079) p
1836 855 V 372 w(2139) p 2360 855 V 423 w(2060) p 2935
855 V 198 w(0.96) p 3268 855 V 3287 855 V 523 858 2766
4 v 521 950 4 92 v 538 950 V 552 922 a
(greater\(s\(s\(s\(0\)\)\),s\(0\)\)) p 1505 950 V 371
w(2110) p 1836 950 V 372 w(2099) p 2360 950 V 423 w(2100) p
2935 950 V 198 w(1.00) p 3268 950 V 3287 950 V 523 953
2766 4 v 521 1044 4 92 v 538 1044 V 552 1017 a
(greater\(s\(0\),s\(s\(s\(0\)\)\)\)) p 1505 1044 V 371
w(2119) p 1836 1044 V 372 w(2129) p 2360 1044 V 423 w(2089) p
2935 1044 V 198 w(0.98) p 3268 1044 V 3287 1044 V 523
1048 2766 4 v 523 1064 V 521 1156 4 92 v 538 1156 V Fp
552 1128 a(a) n(v) n(erage) p 1505 1156 V 1837 1156 V
2362 1156 V 2936 1156 V Fq 2280 w(1.06) p 3268 1156 V
3287 1156 V 523 1159 2766 4 v 523 1176 V 521 1267 4 92
v 538 1267 V 552 1240 a(p) r(ositiv) n(e\(500000\)) p
1505 1267 V 576 w(2930) p 1836 1267 V 372 w(2949) p 2360
1267 V 384 w(41929) p 2934 1267 V 161 w(14.21) p 3268
1267 V 3287 1267 V 523 1270 2766 4 v 521 1362 4 92 v
538 1362 V 552 1334 a(p) r(ositiv) n(e\(1000000\)) p
1505 1362 V 538 w(3820) p 1836 1362 V 372 w(3689) p 2360
1362 V 384 w(81840) p 2934 1362 V 161 w(22.18) p 3268
1362 V 3287 1362 V 523 1365 2766 4 v 521 1456 4 92 v
538 1456 V 552 1429 a(greater\(500000,500000\)) p 1505
1456 V 351 w(3200) p 1836 1456 V 372 w(3339) p 2360 1456
V 384 w(22370) p 2934 1456 V 199 w(7.70) p 3268 1456
V 3287 1456 V 523 1460 2766 4 v 523 1476 V 521 1567 4
92 v 538 1567 V Fp 552 1540 a(a) n(v) n(erage) p 1505
1567 V 1837 1567 V 2362 1567 V 2936 1567 V Fq 2242 w(14.69) p
3268 1567 V 3287 1567 V 523 1571 2766 4 v 523 1587 V
521 1679 4 92 v 538 1679 V 552 1651 a(b) r(o) r(ole\(X\)) p
1505 1679 V 826 w(2080) p 1836 1679 V 500 w(-) p 2362
1679 V 421 w(3109) p 2935 1679 V 3270 1679 V 3287 1679
V 523 1682 2766 4 v 521 1773 4 92 v 538 1773 V 552 1746
a(p) r(ositiv) n(e\(X\)) p 1505 1773 V 746 w(2020) p
1836 1773 V 500 w(-) p 2362 1773 V 421 w(7189) p 2935
1773 V 3270 1773 V 3287 1773 V 523 1777 2766 4 v 521
1868 4 92 v 538 1868 V 552 1841 a(greater\(s\(s\(s\(0\)\)\),X\)) p
1505 1868 V 441 w(2099) p 1836 1868 V 500 w(-) p 2362
1868 V 421 w(6990) p 2935 1868 V 3270 1868 V 3287 1868
V 523 1871 2766 4 v 521 1963 4 92 v 538 1963 V 552 1935
a(greater\(X,Y\)) p 1505 1963 V 691 w(7040) p 1836 1963
V 500 w(-) p 2362 1963 V 421 w(7519) p 2935 1963 V 3270
1963 V 3287 1963 V 523 1966 2766 4 v 521 2057 4 92 v
538 2057 V 552 2030 a(queens\(s\(s\(0\)\),Qs\)) p 1505
2057 V 508 w(6939) p 1836 2057 V 500 w(-) p 2362 2057
V 421 w(9119) p 2935 2057 V 3270 2057 V 3287 2057 V 523
2061 2766 4 v 523 2077 V Fp 1430 2208 a(T) -7 b(able) 29
b(1.) p Fq 25 w(Run) n(time) 24 b(comparation) p Ft 523
2612 a(4) 112 b(Conclusion) 37 b(and) h(F) -9 b(uture) 38
b(W) -9 b(ork) p Fs 523 2897 a(After) 29 b(a) f(\014rst) h(implemen) n
(tation) g(of) f(the) i(tec) n(hnique,) e(w) n(e) h(realized) e(that) i
(the) h(algorithm) d(is) 523 2997 y(so) i(ine\016cien) n(t) h(that) g
(is) f(quite) h(imp) r(ortan) n(t) f(to) h(tak) n(e) f(care) f(of) i(p)
r(ossible) f(optimizations) g(and) 523 3097 y(w) n(e) e(are) g(w) n
(orking) f(to) h(impro) n(v) n(e) f(the) i(e\016ciency) g(of) f(the) h
(algorithm.) 648 3214 y(Apart) i(from) g(the) g(optimizations) g(in) g
(whic) n(h) h(w) n(e) f(are) f(w) n(orking) f(on,) i(the) h
(constructiv) n(e) 523 3313 y(negation) 24 b(algorithm) f(is) i(v) n
(ery) f(ine\016cien) n(t) h(b) n(y) f(itself.) h(That) g(is) g(the) g
(reason) e(wh) n(y) h(w) n(e) h(do) f(not) 523 3413 y(in) n(tend) k(to)
f(use) h(it) g(neither) g(for) f(all) g(cases) f(of) i(negation) f(nor)
f(for) i(negating) e(goals) g(directly) -7 b(.) 648 3530
y(Our) 36 b(ob) 5 b(jectiv) n(e) 37 b(is) g(to) h(design) f(and) g
(implemen) n(t) h(a) f(practical) f(negation) h(and) g(incor-) 523
3629 y(p) r(orate) 30 b(it) i(in) n(to) e(a) h(Prolog) d(compiler.) j
(In) g([12,) 13 b(13]) 30 b(w) n(e) g(studied) i(systematically) e
(what) g(w) n(e) 523 3729 y(understo) r(o) r(d) 39 b(to) f(b) r(e) i
(the) f(most) f(in) n(teresting) h(existing) f(prop) r(osals:) f
(negation) h(as) g(failure) 523 3828 y(\() p Fn(naf) p
Fs(\)) 27 b([8],) e(use) h(of) f(dela) n(ys) g(to) h(apply) p
Fn 25 w(naf) p Fs 26 w(in) g(a) f(secure) g(w) n(a) n(y) g([15],) g(in)
n(tensional) g(negation) f([2,) 523 3928 y(3],) e(and) g(constructiv) n
(e) g(negation) f([6,) 14 b(7,) f(9,) g(16,) g(17].) 22
b(W) -7 b(e) 23 b(could) f(not) g(\014nd) h(a) f(single) g(tec) n
(hnique) 523 4028 y(that) 29 b(o\013ered) e(b) r(oth) i(completeness) f
(and) g(an) g(e\016cien) n(t) h(implemen) n(tation.) f(The) g(only) g
(tec) n(h-) 523 4127 y(nique) k(that) h(is) e(sound) h(and) g(complete)
g(is) g(the) h(constructuv) n(e) e(negation) g(that) h(is) g(the) g
(less) 523 4227 y(e\016cien) n(t.) k(Ho) n(w) n(ev) n(er,) d(w) n(e) i
(prop) r(osed) f(to) h(use) g(a) g(com) n(bination) g(of) g(these) g
(tec) n(hniques) g(and) 523 4327 y(the) d(information) f(from) h(a) f
(static) h(analysis) e(of) i(the) g(program) d(could) j(b) r(e) g(used)
g(to) f(reduce) 523 4426 y(the) h(cost) e(of) h(selecting) g(among) f
(tec) n(hniques) h([14].) f(So) h(w) n(e) g(a) n(v) n(oid) f(the) h
(ine\016ciency) h(of) f(the) 523 4526 y(constructiv) n(e) 26
b(negation) g(including) h(it) g(in) n(to) f(a) h(selection) f
(strategy) g(where) g(this) h(tec) n(hnique) 523 4625
y(is) h(v) n(ery) f(imp) r(ortan) n(t) h(b) r(ecause) f(although) h(it)
g(is) g(the) h(slo) n(w) n(est) e(one,) g(it) i(is) f(the) g(only) g
(one) g(that) 523 4725 y(is) c(sound) g(for) g(all) g(p) r(ossible) f
(goals.) g(F) -7 b(or) 24 b(example) g(if) g(w) n(e) g(observ) n(e) f
(the) h(goals) f(of) h(T) -7 b(able) 24 b(1) g(the) 523
4825 y(strategy) g(will) i(obtain) g(all) f(ground) g(negation) g
(using) g(the) p Fn 26 w(naf) p Fs 27 w(tec) n(hnique) h(and) f(only) g
(w) n(ould) 523 4924 y(use) 31 b(constructiv) n(e) e(negation) h(for) h
(the) g(goals) e(with) j(v) -5 b(ariables) 29 b(where) h(it) i(is) e
(imp) r(ossible) h(to) p 90 rotate dyy eop
%%Page: 14 14
14 13 bop Fs 523 448 a(use) p Fn 26 w(naf) p Fs 27 w(.) 27
b(By) f(the) h(w) n(a) n(y) e(it) i(w) n(ould) f(a) n(v) n(oid) f(the) i
(ine\016cience) f(of) h(the) g(constructiv) n(e) e(negation) 523
548 y(and) i(it) h(w) n(ould) g(tak) n(e) f(adv) -5 b(an) n(tage) 26
b(of) h(its) h(p) r(o) n(w) n(er.) 648 648 y(W) -7 b(e) 33
b(are) f(testing) g(the) i(implemen) n(tation) e(trying) h(to) f(impro)
n(v) n(e) g(the) h(co) r(de) f(and) h(our) f(in-) 523
747 y(ten) n(tion) c(is) f(to) h(include) g(it) g(in) f(the) h(next) g
(distribution) g(of) g(Ciao) e(Prolog) p Fk 2793 717
a(4) p Fs 2830 747 a(.) p Fo 523 993 a(Ac) m(kno) m(wledgmen) m(ts) p
Fs 523 1155 a(This) i(w) n(ork) e(w) n(as) g(funded) j(in) f(part) f(b)
n(y) g(CICYT) h(pro) 5 b(ject) 27 b(EDIPIA) g(\(TIC99-1151\).) p
Ft 523 1418 a(References) p Fq 561 1604 a(1.) p Fa 43
w(Mathematic) l(al) h(L) l(o) l(gic) p Fq(.) 35 b(Asso) r(ciation) 28
b(for) e(Sym) n(b) r(olic) f(Logic,) i(1967.) 561 1695
y(2.) 43 b(R.) 30 b(Barbuti,) i(D.) e(Mancarella,) j(D.) e(P) n(edresc)
n(hi,) g(and) g(F.) g(T) -6 b(urini.) 50 b(In) n(tensional) 31
b(negation) g(of) 663 1786 y(logic) c(programs.) p Fa
34 w(L) l(e) l(ctur) l(e) j(notes) f(on) f(Computer) h(Scienc) l(e) p
Fq(,) d(250:96{110,) k(1987.) 561 1876 y(3.) 43 b(R.) 30
b(Barbuti,) h(D.) f(Mancarella,) i(D.) e(P) n(edresc) n(hi,) h(and) f
(F.) h(T) -6 b(urini.) 48 b(A) 30 b(transformational) h(ap-) 663
1968 y(proac) n(h) 25 b(to) h(negation) h(in) e(logic) j(programming.) p
Fa 33 w(JLP) p Fq(,) f(8\(3\):201{228,) i(1990.) 561
2058 y(4.) 43 b(D.) 27 b(Cab) r(eza) h(and) f(M.) g(Hermenegildo.) 38
b(A) 27 b(New) g(Mo) r(dule) h(System) d(for) j(Prolog.) 40
b(In) p Fa 26 w(Interna-) 663 2149 y(tional) 28 b(Confer) l(enc) l(e) h
(on) g(Computational) g(L) l(o) l(gic,) f(CL2000) p Fq(,) f(LNCS.) f
(Springer-V) -6 b(erlag,) 27 b(July) 663 2241 y(2000.) 561
2331 y(5.) 43 b(M.) 31 b(Carlsson.) 52 b(F) -6 b(reeze,) 32
b(indexing,) f(and) f(other) h(implemen) n(tation) f(issues) h(in) g
(the) g(w) n(am.) 50 b(In) p Fa 663 2423 a(ICLP) p Fq(,) 25
b(pages) i(40{58.) h(The) e(MIT) g(Press,) h(1987.) 561
2513 y(6.) 43 b(D.) 31 b(Chan.) 53 b(Constructiv) n(e) 32
b(negation) h(based) f(on) f(the) h(complete) f(database.) 54
b(In) p Fa 31 w(Pr) l(o) l(c.) 33 b(Int.) 663 2604 y(Confer) l(enc) l
(e) c(on) e(LP'88) p Fq(,) f(pages) h(111{125.) i(The) d(MIT) g(Press,)
h(1988.) 561 2695 y(7.) 43 b(D.) 22 b(Chan.) 29 b(An) 22
b(extension) g(of) h(constructiv) n(e) g(negation) g(and) f(its) h
(application) g(in) g(coroutining.) 663 2786 y(In) p
Fa 25 w(Pr) l(o) l(c.) 28 b(NA) n(CLP'89) p Fq(,) e(pages) g(477{493.) j
(The) d(MIT) g(Press,) h(1989.) 561 2877 y(8.) 43 b(K.) 26
b(L.) g(Clark.) 36 b(Negation) 26 b(as) h(failure.) 37
b(In) 25 b(H.) h(Gallaire) i(and) d(J.) i(Mink) n(er,) f(editors,) p
Fa 27 w(L) l(o) l(gic) i(and) 663 2968 y(Data) g(Bases) p
Fq(,) f(pages) g(293{322,) h(New) e(Y) -6 b(ork,) 25
b(NY,) g(1978.) j(Plen) n(um) c(Press.) 561 3058 y(9.) 43
b(W.) 37 b(Drab) r(en) n(t.) 70 b(What) 37 b(is) h(a) g(failure?) h(An)
e(approac) n(h) h(to) g(constructiv) n(e) f(negation.) p
Fa 71 w(A) l(cta) 663 3150 y(Informatic) l(a.) p Fq(,) 25
b(33:27{59,) k(1995.) 523 3240 y(10.) 43 b(The) 26 b(Collection) h(of) g
(Computer) e(Science) g(Bibliographies.) p Fd 663 3331
a(http://liinwww.ira.uka.de/bibli) q(ogra) q(phy/) q(Logic) q(Prog) q
(ramm) q(ing/i) q(ndex) q(.html) p Fq 1 w(.) 523 3422
y(11.) 43 b(J.J.) 38 b(Moreno-Na) n(v) l(arro.) 69 b(Default) 38
b(rules:) g(An) e(extension) h(of) h(constructiv) n(e) f(negation) h
(for) 663 3513 y(narro) n(wing-based) d(languages.) 62
b(In) p Fa 34 w(Pr) l(o) l(c.) 36 b(ICLP'94) p Fq(,) e(pages) i
(535{549.) h(The) e(MIT) g(Press,) 663 3605 y(1994.) 523
3695 y(12.) 43 b(S.) 33 b(Mu) r(~) -41 b(noz) 35 b(and) e(J.J.) i
(Moreno.) 58 b(Ho) n(w) 34 b(to) g(incorp) r(orate) g(negation) h(in) e
(a) h(prolog) h(compiler.) 663 3786 y(In) 29 b(V.) i(San) n(tos) f
(Costa) i(E.) f(P) n(on) n(telli,) g(editor,) p Fa 32
w(2nd) h(International) h(Workshop) g(P) -6 b(ADL'2000) p
Fq(,) 663 3878 y(v) n(olume) 24 b(1753) j(of) p Fa 27
w(LNCS) p Fq(,) f(pages) g(124{140,) j(Boston,) e(MA) f(\(USA\),) e
(2000.) k(Springer.) 523 3968 y(13.) 43 b(S.) 31 b(Mu) r(~) -41
b(noz,) 33 b(J.J.) g(Moreno,) g(and) e(M.) h(Hermenegildo.) 52
b(E\016cien) n(t) 32 b(implemen) n(tation) e(of) i(gen-) 663
4059 y(eral) j(negation) f(using) h(abstract) f(in) n(terpretation.) 60
b(In) p Fa 33 w(Joint) 36 b(Confer) l(enc) l(e) h(on) e(De) l(clar) l
(ative) 663 4151 y(Pr) l(o) l(gr) l(amming) p Fq(,) 27
b(La) f(Habana) f(\(Cuba\),) h(2000.) 523 4241 y(14.) 43
b(S.) 30 b(Mu) r(~) -41 b(noz,) 33 b(J.J.) f(Moreno,) g(and) e(M.) i
(Hermenegildo.) 49 b(E\016cien) n(t) 31 b(negation) g(using) g
(abstract) 663 4333 y(in) n(terpretation.) 21 b(In) c(R.Nieu) n(w) n
(enh) n(uis) g(and) g(A.) g(V) -6 b(oronk) n(o) n(v,) 16
b(editors,) p Fa 19 w(L) l(o) l(gic) k(for) g(Pr) l(o) l(gr) l(amming,)
663 4424 y(A) n(rti\014cial) 27 b(Intel) t(ligenc) l(e) h(and) g(R) l
(e) l(asoning) p Fq(,) f(La) f(Habana) g(\(Cuba\),) g(2001.) 523
4514 y(15.) 43 b(L.) 22 b(Naish.) 28 b(Negation) 23 b(and) e(Con) n
(trol) i(in) e(Prolog.) 30 b(In) p Fa 21 w(LNCS) p Fq(,) 23
b(n) n(um) n(b) r(er) c(238.) 24 b(Springer-V) -6 b(erlag,) 663
4606 y(1985.) 523 4696 y(16.) 43 b(P) -6 b(.) 19 b(Stuc) n(k) n(ey) -6
b(.) 22 b(Constructiv) n(e) e(negation) g(for) h(constrain) n(t) f
(logic) h(programming.) i(In) p Fa 19 w(Pr) l(o) l(c.) f(IEEE) 663
4787 y(Symp.) 27 b(on) h(L) l(o) l(gic) g(in) f(Computer) i(Scienc) l
(e) p Fq(,) d(v) n(olume) f(660.) i(IEEE) f(Comp.) g(So) r(c.) g
(Press,) h(1991.) p 523 4839 473 4 v Fe 546 4893 a(4) p
Fq 606 4924 a(h) n(ttp://www.clip.dia.\014.upm.es/Soft) n(w) n(are) p
90 rotate dyy eop
%%Page: 15 15
15 14 bop Fq 523 448 a(17.) 43 b(P) -6 b(.) 22 b(Stuc) n(k) n(ey) -6
b(.) 27 b(Negation) c(and) f(constrain) n(t) h(logic) h(programming.) k
(In) p Fa 21 w(Information) d(and) g(Com-) 663 540 y(putation) p
Fq(,) i(v) n(olume) e(118,) i(pages) f(12{33,) i(1995.) p
90 rotate dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
